

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 14 11:35:29 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text42,global,reloc=2,class=CODE,delta=1
    53                           	psect	text43,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60  0000                     
    61                           ; Version 2.20
    62                           ; Generated 05/05/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F67K40 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     _PIR0bits	set	3635
    96  0000                     _PIE0bits	set	3625
    97  0000                     _PIE2bits	set	3627
    98  0000                     _PIE4bits	set	3629
    99  0000                     _TX4REG	set	3812
   100  0000                     _RC4REG	set	3811
   101  0000                     _PIR4bits	set	3639
   102  0000                     _RC4STAbits	set	3815
   103  0000                     _SP4BRGH	set	3814
   104  0000                     _SP4BRGL	set	3813
   105  0000                     _TX4STAbits	set	3816
   106  0000                     _BAUD4CONbits	set	3817
   107  0000                     _RX4PPS	set	3605
   108  0000                     _RC0PPS	set	3682
   109  0000                     _ANSELFbits	set	3764
   110  0000                     _RC7PPS	set	3689
   111  0000                     _RE2PPS	set	3700
   112  0000                     _SSP2BUF	set	3797
   113  0000                     _SSP2CON2bits	set	3802
   114  0000                     _SSP2CON2	set	3802
   115  0000                     _SSP2STAT	set	3800
   116  0000                     _RD6PPS	set	3696
   117  0000                     _RD5PPS	set	3695
   118  0000                     _SSP2CLKPPS	set	3612
   119  0000                     _SSP2DATPPS	set	3613
   120  0000                     _ANSELDbits	set	3751
   121  0000                     _SSP2ADD	set	3798
   122  0000                     _SSP2CON1bits	set	3801
   123  0000                     _T0CON0bits	set	4053
   124  0000                     _T0CON1bits	set	4054
   125  0000                     _INTCONbits	set	4082
   126  0000                     _PORTFbits	set	3982
   127  0000                     _LATHbits	set	3968
   128  0000                     _TRISHbits	set	3976
   129  0000                     _LATDbits	set	3964
   130  0000                     _LATFbits	set	3966
   131  0000                     _TRISAbits	set	3969
   132  0000                     _LATAbits	set	3961
   133  0000                     _TRISFbits	set	3974
   134  0000                     _PWM7CONbits	set	4001
   135  0000                     _PWM6CONbits	set	4004
   136  0000                     _T2PR	set	4028
   137  0000                     _T2CLKCONbits	set	4031
   138  0000                     _T2HLTbits	set	4030
   139  0000                     _T2CONbits	set	4029
   140  0000                     _LATGbits	set	3967
   141  0000                     _LATCbits	set	3963
   142  0000                     _LATEbits	set	3965
   143  0000                     _TRISGbits	set	3975
   144  0000                     _TRISCbits	set	3971
   145  0000                     _TRISEbits	set	3973
   146  0000                     _TRISDbits	set	3972
   147  0000                     _TMR0L	set	4051
   148  0000                     _TMR0H	set	4052
   149  0000                     _LATG	set	3967
   150  0000                     _LATE	set	3965
   151  0000                     _PWM7DCH	set	4000
   152  0000                     _PWM6DCH	set	4003
   153                           
   154                           ; #config settings
   155                           
   156                           	psect	cinit
   157  0037F0                     __pcinit:
   158                           	callstack 0
   159  0037F0                     start_initialization:
   160                           	callstack 0
   161  0037F0                     __initialization:
   162                           	callstack 0
   163                           
   164                           ; Clear objects allocated to BANK1 (90 bytes)
   165  0037F0  EE01  F000         	lfsr	0,__pbssBANK1
   166  0037F4  0E5A               	movlw	90
   167  0037F6                     clear_0:
   168  0037F6  6AEE               	clrf	postinc0,c
   169  0037F8  06E8               	decf	wreg,f,c
   170  0037FA  E1FD               	bnz	clear_0
   171                           
   172                           ; Clear objects allocated to BANK0 (56 bytes)
   173  0037FC  EE00  F0B8         	lfsr	0,__pbssBANK0
   174  003800  0E38               	movlw	56
   175  003802                     clear_1:
   176  003802  6AEE               	clrf	postinc0,c
   177  003804  06E8               	decf	wreg,f,c
   178  003806  E1FD               	bnz	clear_1
   179  003808                     end_of_initialization:
   180                           	callstack 0
   181  003808                     __end_of__initialization:
   182                           	callstack 0
   183  003808  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   184  00380A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   185  00380C  0100               	movlb	0
   186  00380E  EFC7  F006         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssBANK0
   189  0000B8                     __pbssBANK0:
   190                           	callstack 0
   191  0000B8                     _EUSART4RXbuf:
   192                           	callstack 0
   193  0000B8                     	ds	20
   194  0000CC                     _movements:
   195                           	callstack 0
   196  0000CC                     	ds	2
   197  0000CE                     _TxBufReadCnt:
   198                           	callstack 0
   199  0000CE                     	ds	1
   200  0000CF                     _TxBufWriteCnt:
   201                           	callstack 0
   202  0000CF                     	ds	1
   203  0000D0                     _RxBufReadCnt:
   204                           	callstack 0
   205  0000D0                     	ds	1
   206  0000D1                     _RxBufWriteCnt:
   207                           	callstack 0
   208  0000D1                     	ds	1
   209  0000D2                     _timerArray:
   210                           	callstack 0
   211  0000D2                     	ds	30
   212                           
   213                           	psect	bssBANK1
   214  000100                     __pbssBANK1:
   215                           	callstack 0
   216  000100                     _EUSART4TXbuf:
   217                           	callstack 0
   218  000100                     	ds	60
   219  00013C                     _movementArray:
   220                           	callstack 0
   221  00013C                     	ds	30
   222                           
   223                           	psect	cstackBANK0
   224  000060                     __pcstackBANK0:
   225                           	callstack 0
   226  000060                     ??_determine_color_new:
   227                           
   228                           ; 1 bytes @ 0x0
   229  000060                     	ds	8
   230  000068                     _determine_color_new$2624:
   231                           	callstack 0
   232                           
   233                           ; 4 bytes @ 0x8
   234  000068                     	ds	4
   235  00006C                     determine_color_new@RedRatio:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0xC
   239  00006C                     	ds	2
   240  00006E                     determine_color_new@GreenRatio:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0xE
   244  00006E                     	ds	2
   245  000070                     determine_color_new@BlueRatio:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x10
   249  000070                     	ds	2
   250  000072                     determine_color_new@out:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x12
   254  000072                     	ds	2
   255  000074                     determine_color_new@lumin:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x14
   259  000074                     	ds	2
   260  000076                     determine_color_new@RelR:
   261                           	callstack 0
   262                           
   263                           ; 4 bytes @ 0x16
   264  000076                     	ds	4
   265  00007A                     determine_color_new@RelG:
   266                           	callstack 0
   267                           
   268                           ; 4 bytes @ 0x1A
   269  00007A                     	ds	4
   270  00007E                     determine_color_new@RelB:
   271                           	callstack 0
   272                           
   273                           ; 4 bytes @ 0x1E
   274  00007E                     	ds	4
   275  000082                     main@cal:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x22
   279  000082                     	ds	2
   280  000084                     main@check4:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x24
   284  000084                     	ds	2
   285  000086                     main@reset_timer:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x26
   289  000086                     	ds	2
   290  000088                     main@check1:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x28
   294  000088                     	ds	2
   295  00008A                     main@check2:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x2A
   299  00008A                     	ds	2
   300  00008C                     main@check3:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x2C
   304  00008C                     	ds	2
   305  00008E                     main@count:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x2E
   309  00008E                     	ds	2
   310  000090                     main@detected_colour:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x30
   314  000090                     	ds	2
   315  000092                     main@RGBstruct:
   316                           	callstack 0
   317                           
   318                           ; 20 bytes @ 0x32
   319  000092                     	ds	20
   320  0000A6                     main@motorL:
   321                           	callstack 0
   322                           
   323                           ; 9 bytes @ 0x46
   324  0000A6                     	ds	9
   325  0000AF                     main@motorR:
   326                           	callstack 0
   327                           
   328                           ; 9 bytes @ 0x4F
   329  0000AF                     	ds	9
   330                           
   331                           	psect	cstackCOMRAM
   332  000001                     __pcstackCOMRAM:
   333                           	callstack 0
   334  000001                     ??_I2C_2_Master_Idle:
   335  000001                     ?___wmul:
   336                           	callstack 0
   337  000001                     ?___xxtofl:
   338                           	callstack 0
   339  000001                     updateMovementCount@movementCode:
   340                           	callstack 0
   341  000001                     initDCmotorsPWM@PWMperiod:
   342                           	callstack 0
   343  000001                     ___wmul@multiplier:
   344                           	callstack 0
   345  000001                     ___flge@ff1:
   346                           	callstack 0
   347  000001                     ___xxtofl@val:
   348                           	callstack 0
   349                           
   350                           ; 4 bytes @ 0x0
   351  000001                     	ds	1
   352  000002                     ??_I2C_2_Master_Read:
   353  000002                     I2C_2_Master_Write@data_byte:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x1
   357  000002                     	ds	1
   358  000003                     color_writetoaddr@value:
   359                           	callstack 0
   360  000003                     I2C_2_Master_Read@ack:
   361                           	callstack 0
   362  000003                     updateMovementCount@movementArray:
   363                           	callstack 0
   364  000003                     ___wmul@multiplicand:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x2
   368  000003                     	ds	1
   369  000004                     color_writetoaddr@address:
   370                           	callstack 0
   371  000004                     I2C_2_Master_Read@tmp:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x3
   375  000004                     	ds	1
   376  000005                     ??_color_click_init:
   377  000005                     ??___xxtofl:
   378  000005                     ?_color_read_Clear:
   379                           	callstack 0
   380  000005                     ?_color_read_Red:
   381                           	callstack 0
   382  000005                     ?_color_read_Green:
   383                           	callstack 0
   384  000005                     ?_color_read_Blue:
   385                           	callstack 0
   386  000005                     updateMovementCount@movements:
   387                           	callstack 0
   388  000005                     ___wmul@product:
   389                           	callstack 0
   390  000005                     ___flge@ff2:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0x4
   394  000005                     	ds	2
   395  000007                     ??_color_read_Clear:
   396  000007                     ??_color_read_Red:
   397  000007                     ??_color_read_Green:
   398  000007                     ??_color_read_Blue:
   399  000007                     ?___lwdiv:
   400                           	callstack 0
   401  000007                     updateMovementCount@timerArray:
   402                           	callstack 0
   403  000007                     ___lwdiv@dividend:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x6
   407  000007                     	ds	2
   408  000009                     ??_updateMovementCount:
   409  000009                     ??___flge:
   410  000009                     ___xxtofl@sign:
   411                           	callstack 0
   412  000009                     ___lwdiv@divisor:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x8
   416  000009                     	ds	1
   417  00000A                     ___xxtofl@exp:
   418                           	callstack 0
   419  00000A                     color_read_Clear@tmp:
   420                           	callstack 0
   421  00000A                     color_read_Red@tmp:
   422                           	callstack 0
   423  00000A                     color_read_Green@tmp:
   424                           	callstack 0
   425  00000A                     color_read_Blue@tmp:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x9
   429  00000A                     	ds	1
   430  00000B                     updateMovementCount@tempTimerVal:
   431                           	callstack 0
   432  00000B                     ___lwdiv@quotient:
   433                           	callstack 0
   434  00000B                     ___xxtofl@arg:
   435                           	callstack 0
   436                           
   437                           ; 4 bytes @ 0xA
   438  00000B                     	ds	1
   439  00000C                     read_colours@m:
   440                           	callstack 0
   441  00000C                     calibrateW@m:
   442                           	callstack 0
   443  00000C                     calibrateB@m:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0xB
   447  00000C                     	ds	1
   448  00000D                     ?_isbtw:
   449                           	callstack 0
   450  00000D                     ___lwdiv@counter:
   451                           	callstack 0
   452  00000D                     isbtw@num:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0xC
   456  00000D                     	ds	1
   457  00000E                     setMotorPWM@m:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0xD
   461  00000E                     	ds	1
   462  00000F                     ?___fldiv:
   463                           	callstack 0
   464  00000F                     ___fldiv@b:
   465                           	callstack 0
   466                           
   467                           ; 4 bytes @ 0xE
   468  00000F                     	ds	1
   469  000010                     ??_setMotorPWM:
   470                           
   471                           ; 1 bytes @ 0xF
   472  000010                     	ds	1
   473  000011                     isbtw@low:
   474                           	callstack 0
   475                           
   476                           ; 4 bytes @ 0x10
   477  000011                     	ds	2
   478  000013                     ___fldiv@a:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x12
   482  000013                     	ds	2
   483  000015                     isbtw@high:
   484                           	callstack 0
   485                           
   486                           ; 4 bytes @ 0x14
   487  000015                     	ds	2
   488  000017                     ??___fldiv:
   489  000017                     setMotorPWM@PWMduty:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x16
   493  000017                     	ds	2
   494  000019                     stop@mL:
   495                           	callstack 0
   496  000019                     reverse@mL:
   497                           	callstack 0
   498  000019                     forward@mL:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x18
   502  000019                     	ds	2
   503  00001B                     stop@mR:
   504                           	callstack 0
   505  00001B                     reverse@mR:
   506                           	callstack 0
   507  00001B                     forward@mR:
   508                           	callstack 0
   509  00001B                     ___fldiv@rem:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0x1A
   513  00001B                     	ds	2
   514  00001D                     turnLeft90@mL:
   515                           	callstack 0
   516  00001D                     turnLeft135@mL:
   517                           	callstack 0
   518  00001D                     turnRight90@mL:
   519                           	callstack 0
   520  00001D                     turnRight135@mL:
   521                           	callstack 0
   522  00001D                     turnRight180@mL:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x1C
   526  00001D                     	ds	2
   527  00001F                     ___fldiv@sign:
   528                           	callstack 0
   529  00001F                     turnLeft90@mR:
   530                           	callstack 0
   531  00001F                     turnLeft135@mR:
   532                           	callstack 0
   533  00001F                     turnRight90@mR:
   534                           	callstack 0
   535  00001F                     turnRight135@mR:
   536                           	callstack 0
   537  00001F                     turnRight180@mR:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x1E
   541  00001F                     	ds	1
   542  000020                     ___fldiv@new_exp:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x1F
   546  000020                     	ds	1
   547  000021                     ??_turnRight180:
   548  000021                     ??_turnLeft90:
   549  000021                     ??_turnRight90:
   550  000021                     ??_turnLeft135:
   551  000021                     ??_turnRight135:
   552                           
   553                           ; 1 bytes @ 0x20
   554  000021                     	ds	1
   555  000022                     ___fldiv@grs:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x21
   559  000022                     	ds	1
   560  000023                     turnLeft90@i:
   561                           	callstack 0
   562  000023                     turnLeft135@i:
   563                           	callstack 0
   564  000023                     turnRight90@i:
   565                           	callstack 0
   566  000023                     turnRight135@i:
   567                           	callstack 0
   568  000023                     turnRight180@i:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x22
   572  000023                     	ds	2
   573  000025                     White@mL:
   574                           	callstack 0
   575  000025                     reverseTurnRight90@mL:
   576                           	callstack 0
   577  000025                     reverseTurnLeft90@mL:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x24
   581  000025                     	ds	1
   582  000026                     ___fldiv@bexp:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0x25
   586  000026                     	ds	1
   587  000027                     ___fldiv@aexp:
   588                           	callstack 0
   589  000027                     White@mR:
   590                           	callstack 0
   591  000027                     reverseTurnRight90@mR:
   592                           	callstack 0
   593  000027                     reverseTurnLeft90@mR:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x26
   597  000027                     	ds	1
   598  000028                     ?___flmul:
   599                           	callstack 0
   600  000028                     ___flmul@b:
   601                           	callstack 0
   602                           
   603                           ; 4 bytes @ 0x27
   604  000028                     	ds	1
   605  000029                     ??_reverseTurnRight90:
   606  000029                     ??_reverseTurnLeft90:
   607  000029                     White@movementArray:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x28
   611  000029                     	ds	2
   612  00002B                     White@movements:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x2A
   616  00002B                     	ds	1
   617  00002C                     ___flmul@a:
   618                           	callstack 0
   619                           
   620                           ; 4 bytes @ 0x2B
   621  00002C                     	ds	1
   622  00002D                     White@timerArray:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x2C
   626  00002D                     	ds	2
   627  00002F                     ??_White:
   628                           
   629                           ; 1 bytes @ 0x2E
   630  00002F                     	ds	1
   631  000030                     ??___flmul:
   632                           
   633                           ; 1 bytes @ 0x2F
   634  000030                     	ds	4
   635  000034                     ___flmul@sign:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x33
   639  000034                     	ds	1
   640  000035                     White@tempTimerVal:
   641                           	callstack 0
   642  000035                     ___flmul@grs:
   643                           	callstack 0
   644                           
   645                           ; 4 bytes @ 0x34
   646  000035                     	ds	2
   647  000037                     White@i:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x36
   651  000037                     	ds	2
   652  000039                     ___flmul@aexp:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x38
   656  000039                     	ds	1
   657  00003A                     ___flmul@bexp:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x39
   661  00003A                     	ds	1
   662  00003B                     ___flmul@prod:
   663                           	callstack 0
   664                           
   665                           ; 4 bytes @ 0x3A
   666  00003B                     	ds	4
   667  00003F                     ___flmul@temp:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x3E
   671  00003F                     	ds	2
   672  000041                     ?___fladd:
   673                           	callstack 0
   674  000041                     ___fladd@b:
   675                           	callstack 0
   676                           
   677                           ; 4 bytes @ 0x40
   678  000041                     	ds	4
   679  000045                     ___fladd@a:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0x44
   683  000045                     	ds	4
   684  000049                     ??___fladd:
   685                           
   686                           ; 1 bytes @ 0x48
   687  000049                     	ds	4
   688  00004D                     ___fladd@signs:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x4C
   692  00004D                     	ds	1
   693  00004E                     ___fladd@aexp:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x4D
   697  00004E                     	ds	1
   698  00004F                     ___fladd@bexp:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x4E
   702  00004F                     	ds	1
   703  000050                     ___fladd@grs:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x4F
   707  000050                     	ds	1
   708  000051                     ?___fltol:
   709                           	callstack 0
   710  000051                     ___fltol@f1:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0x50
   714  000051                     	ds	4
   715  000055                     ??___fltol:
   716                           
   717                           ; 1 bytes @ 0x54
   718  000055                     	ds	4
   719  000059                     ___fltol@sign1:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x58
   723  000059                     	ds	1
   724  00005A                     ___fltol@exp1:
   725                           	callstack 0
   726                           
   727                           ; 1 bytes @ 0x59
   728  00005A                     	ds	1
   729  00005B                     ?_determine_color_new:
   730                           	callstack 0
   731  00005B                     determine_color_new@m:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x5A
   735  00005B                     	ds	2
   736  00005D                     ??_main:
   737                           
   738                           ; 1 bytes @ 0x5C
   739  00005D                     	ds	2
   740                           
   741 ;;
   742 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   743 ;;
   744 ;; *************** function _main *****************
   745 ;; Defined at:
   746 ;;		line 26 in file "main.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;  detected_col    2   48[BANK0 ] unsigned int 
   751 ;;  RGBstruct      20   50[BANK0 ] struct RGB_val
   752 ;;  motorR          9   79[BANK0 ] struct DC_motor
   753 ;;  motorL          9   70[BANK0 ] struct DC_motor
   754 ;;  count           2   46[BANK0 ] unsigned int 
   755 ;;  check3          2   44[BANK0 ] unsigned int 
   756 ;;  check2          2   42[BANK0 ] unsigned int 
   757 ;;  check1          2   40[BANK0 ] unsigned int 
   758 ;;  PWMcycle        2    0        unsigned int 
   759 ;;  reset_timer     2   38[BANK0 ] unsigned int 
   760 ;;  check4          2   36[BANK0 ] unsigned int 
   761 ;;  cal             2   34[BANK0 ] unsigned int 
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   772 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   773 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   774 ;;      Totals:         2      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   775 ;;Total ram usage:       56 bytes
   776 ;; Hardware stack levels required when called: 6
   777 ;; This function calls:
   778 ;;		_Interrupts_init
   779 ;;		_Timer0_init
   780 ;;		_White
   781 ;;		_calibrateB
   782 ;;		_calibrateW
   783 ;;		_color_click_init
   784 ;;		_determine_color_new
   785 ;;		_forward
   786 ;;		_initDCmotorsPWM
   787 ;;		_initUSART4
   788 ;;		_read_colours
   789 ;;		_reverseTurnLeft90
   790 ;;		_reverseTurnRight90
   791 ;;		_turnLeft135
   792 ;;		_turnLeft90
   793 ;;		_turnRight135
   794 ;;		_turnRight180
   795 ;;		_turnRight90
   796 ;;		_updateMovementCount
   797 ;; This function is called by:
   798 ;;		Startup code after reset
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text0
   803  000D8E                     __ptext0:
   804                           	callstack 0
   805  000D8E                     _main:
   806                           	callstack 25
   807  000D8E                     
   808                           ;main.c: 28:     initDCmotorsPWM(99);
   809  000D8E  0E00               	movlw	0
   810  000D90  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   811  000D92  0E63               	movlw	99
   812  000D94  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   813  000D96  EC60  F01B         	call	_initDCmotorsPWM	;wreg free
   814  000D9A                     
   815                           ;main.c: 29:     color_click_init();
   816  000D9A  ECA2  F01B         	call	_color_click_init	;wreg free
   817  000D9E                     
   818                           ;main.c: 30:     initUSART4();
   819  000D9E  EC09  F01C         	call	_initUSART4	;wreg free
   820  000DA2                     
   821                           ;main.c: 31:     Timer0_init();
   822  000DA2  EC29  F01C         	call	_Timer0_init	;wreg free
   823  000DA6                     
   824                           ;main.c: 32:     Interrupts_init();
   825  000DA6  EC3D  F01C         	call	_Interrupts_init	;wreg free
   826  000DAA                     
   827                           ;main.c: 37:     motorL.power=0;
   828  000DAA  0E00               	movlw	0
   829  000DAC  0100               	movlb	0	; () banked
   830  000DAE  6FA6               	movwf	main@motorL& (0+255),b
   831  000DB0                     
   832                           ; BSR set to: 0
   833                           ;main.c: 38:     motorL.direction=1;
   834  000DB0  0E01               	movlw	1
   835  000DB2  6FA7               	movwf	(main@motorL+1)& (0+255),b
   836  000DB4                     
   837                           ; BSR set to: 0
   838                           ;main.c: 39:     motorL.dutyHighByte=(unsigned char *)(&PWM6DCH);
   839  000DB4  0EA3               	movlw	163
   840  000DB6  6FA8               	movwf	(main@motorL+2)& (0+255),b
   841  000DB8  0E0F               	movlw	15
   842  000DBA  6FA9               	movwf	(main@motorL+3)& (0+255),b
   843  000DBC                     
   844                           ; BSR set to: 0
   845                           ;main.c: 40:     motorL.dir_LAT=(unsigned char *)(&LATE);
   846  000DBC  0E7D               	movlw	125
   847  000DBE  6FAA               	movwf	(main@motorL+4)& (0+255),b
   848  000DC0  0E0F               	movlw	15
   849  000DC2  6FAB               	movwf	(main@motorL+5)& (0+255),b
   850  000DC4                     
   851                           ; BSR set to: 0
   852                           ;main.c: 41:     motorL.dir_pin=4;
   853  000DC4  0E04               	movlw	4
   854  000DC6  6FAC               	movwf	(main@motorL+6)& (0+255),b
   855  000DC8                     
   856                           ; BSR set to: 0
   857                           ;main.c: 42:     motorL.PWMperiod=PWMcycle;
   858  000DC8  0E00               	movlw	0
   859  000DCA  6FAE               	movwf	(main@motorL+8)& (0+255),b
   860  000DCC  0E63               	movlw	99
   861  000DCE  6FAD               	movwf	(main@motorL+7)& (0+255),b
   862  000DD0                     
   863                           ; BSR set to: 0
   864                           ;main.c: 44:     motorR.power=0;
   865  000DD0  0E00               	movlw	0
   866  000DD2  6FAF               	movwf	main@motorR& (0+255),b
   867  000DD4                     
   868                           ; BSR set to: 0
   869                           ;main.c: 45:     motorR.direction=1;
   870  000DD4  0E01               	movlw	1
   871  000DD6  6FB0               	movwf	(main@motorR+1)& (0+255),b
   872  000DD8                     
   873                           ; BSR set to: 0
   874                           ;main.c: 46:     motorR.dutyHighByte=(unsigned char *)(&PWM7DCH);
   875  000DD8  0EA0               	movlw	160
   876  000DDA  6FB1               	movwf	(main@motorR+2)& (0+255),b
   877  000DDC  0E0F               	movlw	15
   878  000DDE  6FB2               	movwf	(main@motorR+3)& (0+255),b
   879  000DE0                     
   880                           ; BSR set to: 0
   881                           ;main.c: 47:     motorR.dir_LAT=(unsigned char *)(&LATG);
   882  000DE0  0E7F               	movlw	127
   883  000DE2  6FB3               	movwf	(main@motorR+4)& (0+255),b
   884  000DE4  0E0F               	movlw	15
   885  000DE6  6FB4               	movwf	(main@motorR+5)& (0+255),b
   886  000DE8                     
   887                           ; BSR set to: 0
   888                           ;main.c: 48:     motorR.dir_pin=6;
   889  000DE8  0E06               	movlw	6
   890  000DEA  6FB5               	movwf	(main@motorR+6)& (0+255),b
   891  000DEC                     
   892                           ; BSR set to: 0
   893                           ;main.c: 49:     motorR.PWMperiod=PWMcycle;
   894  000DEC  0E00               	movlw	0
   895  000DEE  6FB7               	movwf	(main@motorR+8)& (0+255),b
   896  000DF0  0E63               	movlw	99
   897  000DF2  6FB6               	movwf	(main@motorR+7)& (0+255),b
   898  000DF4                     
   899                           ; BSR set to: 0
   900                           ;main.c: 52:     struct RGB_val RGBstruct;;main.c: 53:     RGBstruct.C = 0;
   901  000DF4  0E00               	movlw	0
   902  000DF6  6F9F               	movwf	(main@RGBstruct+13)& (0+255),b
   903  000DF8  0E00               	movlw	0
   904  000DFA  6F9E               	movwf	(main@RGBstruct+12)& (0+255),b
   905  000DFC                     
   906                           ; BSR set to: 0
   907                           ;main.c: 54:     RGBstruct.R = 0;
   908  000DFC  0E00               	movlw	0
   909  000DFE  6FA1               	movwf	(main@RGBstruct+15)& (0+255),b
   910  000E00  0E00               	movlw	0
   911  000E02  6FA0               	movwf	(main@RGBstruct+14)& (0+255),b
   912  000E04                     
   913                           ; BSR set to: 0
   914                           ;main.c: 55:     RGBstruct.G = 0;
   915  000E04  0E00               	movlw	0
   916  000E06  6FA3               	movwf	(main@RGBstruct+17)& (0+255),b
   917  000E08  0E00               	movlw	0
   918  000E0A  6FA2               	movwf	(main@RGBstruct+16)& (0+255),b
   919  000E0C                     
   920                           ; BSR set to: 0
   921                           ;main.c: 56:     RGBstruct.B = 0;
   922  000E0C  0E00               	movlw	0
   923  000E0E  6FA5               	movwf	(main@RGBstruct+19)& (0+255),b
   924  000E10  0E00               	movlw	0
   925  000E12  6FA4               	movwf	(main@RGBstruct+18)& (0+255),b
   926  000E14                     
   927                           ; BSR set to: 0
   928                           ;main.c: 59:     TRISFbits.TRISF2=1;
   929  000E14  8486               	bsf	134,2,c	;volatile
   930  000E16                     
   931                           ; BSR set to: 0
   932                           ;main.c: 60:     ANSELFbits.ANSELF2=0;
   933  000E16  010E               	movlb	14	; () banked
   934  000E18  95B4               	bcf	180,2,b	;volatile
   935  000E1A                     
   936                           ; BSR set to: 14
   937                           ;main.c: 61:     TRISFbits.TRISF3=1;
   938  000E1A  8686               	bsf	134,3,c	;volatile
   939  000E1C                     
   940                           ; BSR set to: 14
   941                           ;main.c: 62:     ANSELFbits.ANSELF3=0;
   942  000E1C  97B4               	bcf	180,3,b	;volatile
   943  000E1E                     
   944                           ; BSR set to: 14
   945                           ;main.c: 65:     LATGbits.LATG1=1;
   946  000E1E  827F               	bsf	127,1,c	;volatile
   947  000E20                     
   948                           ; BSR set to: 14
   949                           ;main.c: 66:     TRISGbits.TRISG1=0;
   950  000E20  9287               	bcf	135,1,c	;volatile
   951  000E22                     
   952                           ; BSR set to: 14
   953                           ;main.c: 67:     LATAbits.LATA4=1;
   954  000E22  8879               	bsf	121,4,c	;volatile
   955  000E24                     
   956                           ; BSR set to: 14
   957                           ;main.c: 68:     TRISAbits.TRISA4=0;
   958  000E24  9881               	bcf	129,4,c	;volatile
   959  000E26                     
   960                           ; BSR set to: 14
   961                           ;main.c: 69:     LATFbits.LATF7=1;
   962  000E26  8E7E               	bsf	126,7,c	;volatile
   963  000E28                     
   964                           ; BSR set to: 14
   965                           ;main.c: 70:     TRISFbits.TRISF7=0;
   966  000E28  9E86               	bcf	134,7,c	;volatile
   967  000E2A                     
   968                           ; BSR set to: 14
   969                           ;main.c: 73:     TRISDbits.TRISD7 = 0; LATDbits.LATD7 = 0;
   970  000E2A  9E84               	bcf	132,7,c	;volatile
   971  000E2C                     
   972                           ; BSR set to: 14
   973  000E2C  9E7C               	bcf	124,7,c	;volatile
   974  000E2E                     
   975                           ; BSR set to: 14
   976                           ;main.c: 74:     TRISHbits.TRISH3 = 0; LATHbits.LATH3 = 0;
   977  000E2E  9688               	bcf	136,3,c	;volatile
   978  000E30                     
   979                           ; BSR set to: 14
   980  000E30  9680               	bcf	128,3,c	;volatile
   981  000E32                     
   982                           ; BSR set to: 14
   983                           ;main.c: 77:     unsigned int cal = 0;
   984  000E32  0E00               	movlw	0
   985  000E34  0100               	movlb	0	; () banked
   986  000E36  6F83               	movwf	(main@cal+1)& (0+255),b
   987  000E38  0E00               	movlw	0
   988  000E3A  6F82               	movwf	main@cal& (0+255),b
   989                           
   990                           ;main.c: 78:     while(cal==0){
   991  000E3C  EF7B  F007         	goto	l4051
   992  000E40                     l361:
   993                           
   994                           ; BSR set to: 0
   995                           ;main.c: 79:         LATDbits.LATD7 = 1;
   996  000E40  8E7C               	bsf	124,7,c	;volatile
   997  000E42                     l362:
   998  000E42  B48E               	btfsc	142,2,c	;volatile
   999  000E44  EF26  F007         	goto	u3901
  1000  000E48  EF28  F007         	goto	u3900
  1001  000E4C                     u3901:
  1002  000E4C  EF21  F007         	goto	l362
  1003  000E50                     u3900:
  1004  000E50                     
  1005                           ;main.c: 81:         if (!PORTFbits.RF2){
  1006  000E50  B48E               	btfsc	142,2,c	;volatile
  1007  000E52  EF2D  F007         	goto	u3911
  1008  000E56  EF2F  F007         	goto	u3910
  1009  000E5A                     u3911:
  1010  000E5A  EF41  F007         	goto	l4037
  1011  000E5E                     u3910:
  1012  000E5E                     
  1013                           ;main.c: 82:             LATDbits.LATD7 = 0;
  1014  000E5E  9E7C               	bcf	124,7,c	;volatile
  1015  000E60                     
  1016                           ;main.c: 83:             calibrateW(&RGBstruct);
  1017  000E60  0E92               	movlw	low main@RGBstruct
  1018  000E62  6E0C               	movwf	calibrateW@m^0,c
  1019  000E64  0E00               	movlw	high main@RGBstruct
  1020  000E66  6E0D               	movwf	(calibrateW@m+1)^0,c
  1021  000E68  EC18  F01B         	call	_calibrateW	;wreg free
  1022  000E6C                     
  1023                           ;main.c: 84:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1024  000E6C  0E19               	movlw	25
  1025  000E6E  6E5E               	movwf	(??_main+1)^0,c
  1026  000E70  0E5A               	movlw	90
  1027  000E72  6E5D               	movwf	??_main^0,c
  1028  000E74  0EB2               	movlw	178
  1029  000E76                     u4247:
  1030  000E76  2EE8               	decfsz	wreg,f,c
  1031  000E78  D7FE               	bra	u4247
  1032  000E7A  2E5D               	decfsz	??_main^0,f,c
  1033  000E7C  D7FC               	bra	u4247
  1034  000E7E  2E5E               	decfsz	(??_main+1)^0,f,c
  1035  000E80  D7FA               	bra	u4247
  1036  000E82                     l4037:
  1037                           
  1038                           ;main.c: 87:         LATDbits.LATD7 = 1;
  1039  000E82  8E7C               	bsf	124,7,c	;volatile
  1040  000E84                     l366:
  1041  000E84  B48E               	btfsc	142,2,c	;volatile
  1042  000E86  EF47  F007         	goto	u3921
  1043  000E8A  EF49  F007         	goto	u3920
  1044  000E8E                     u3921:
  1045  000E8E  EF42  F007         	goto	l366
  1046  000E92                     u3920:
  1047  000E92                     
  1048                           ;main.c: 89:         if (!PORTFbits.RF2){
  1049  000E92  B48E               	btfsc	142,2,c	;volatile
  1050  000E94  EF4E  F007         	goto	u3931
  1051  000E98  EF50  F007         	goto	u3930
  1052  000E9C                     u3931:
  1053  000E9C  EF62  F007         	goto	l4045
  1054  000EA0                     u3930:
  1055  000EA0                     
  1056                           ;main.c: 90:             LATDbits.LATD7 = 0;
  1057  000EA0  9E7C               	bcf	124,7,c	;volatile
  1058  000EA2                     
  1059                           ;main.c: 91:             calibrateB(&RGBstruct);
  1060  000EA2  0E92               	movlw	low main@RGBstruct
  1061  000EA4  6E0C               	movwf	calibrateB@m^0,c
  1062  000EA6  0E00               	movlw	high main@RGBstruct
  1063  000EA8  6E0D               	movwf	(calibrateB@m+1)^0,c
  1064  000EAA  EC3D  F01B         	call	_calibrateB	;wreg free
  1065  000EAE                     
  1066                           ;main.c: 92:             _delay((unsigned long)((300)*(64000000/4000.0)));
  1067  000EAE  0E19               	movlw	25
  1068  000EB0  6E5E               	movwf	(??_main+1)^0,c
  1069  000EB2  0E5A               	movlw	90
  1070  000EB4  6E5D               	movwf	??_main^0,c
  1071  000EB6  0EB2               	movlw	178
  1072  000EB8                     u4257:
  1073  000EB8  2EE8               	decfsz	wreg,f,c
  1074  000EBA  D7FE               	bra	u4257
  1075  000EBC  2E5D               	decfsz	??_main^0,f,c
  1076  000EBE  D7FC               	bra	u4257
  1077  000EC0  2E5E               	decfsz	(??_main+1)^0,f,c
  1078  000EC2  D7FA               	bra	u4257
  1079  000EC4                     l4045:
  1080                           
  1081                           ;main.c: 95:         LATHbits.LATH3 = 1;
  1082  000EC4  8680               	bsf	128,3,c	;volatile
  1083  000EC6                     l370:
  1084  000EC6  B68E               	btfsc	142,3,c	;volatile
  1085  000EC8  EF68  F007         	goto	u3941
  1086  000ECC  EF6A  F007         	goto	u3940
  1087  000ED0                     u3941:
  1088  000ED0  EF63  F007         	goto	l370
  1089  000ED4                     u3940:
  1090  000ED4                     
  1091                           ;main.c: 97:         if (!PORTFbits.RF3){
  1092  000ED4  B68E               	btfsc	142,3,c	;volatile
  1093  000ED6  EF6F  F007         	goto	u3951
  1094  000EDA  EF71  F007         	goto	u3950
  1095  000EDE                     u3951:
  1096  000EDE  EF7B  F007         	goto	l4051
  1097  000EE2                     u3950:
  1098  000EE2                     
  1099                           ;main.c: 98:             LATHbits.LATH3 = 0;
  1100  000EE2  9680               	bcf	128,3,c	;volatile
  1101  000EE4                     
  1102                           ;main.c: 99:             TMR0H = 0;
  1103  000EE4  0E00               	movlw	0
  1104  000EE6  6ED4               	movwf	212,c	;volatile
  1105                           
  1106                           ;main.c: 100:             TMR0L = 0;
  1107  000EE8  0E00               	movlw	0
  1108  000EEA  6ED3               	movwf	211,c	;volatile
  1109                           
  1110                           ;main.c: 101:             cal = 1;
  1111  000EEC  0E00               	movlw	0
  1112  000EEE  0100               	movlb	0	; () banked
  1113  000EF0  6F83               	movwf	(main@cal+1)& (0+255),b
  1114  000EF2  0E01               	movlw	1
  1115  000EF4  6F82               	movwf	main@cal& (0+255),b
  1116  000EF6                     l4051:
  1117                           
  1118                           ;main.c: 78:     while(cal==0){
  1119  000EF6  0100               	movlb	0	; () banked
  1120  000EF8  5182               	movf	main@cal& (0+255),w,b
  1121  000EFA  1183               	iorwf	(main@cal+1)& (0+255),w,b
  1122  000EFC  B4D8               	btfsc	status,2,c
  1123  000EFE  EF83  F007         	goto	u3961
  1124  000F02  EF85  F007         	goto	u3960
  1125  000F06                     u3961:
  1126  000F06  EF20  F007         	goto	l361
  1127  000F0A                     u3960:
  1128  000F0A                     
  1129                           ; BSR set to: 0
  1130                           ;main.c: 106:     unsigned int check1 = 9; unsigned int check2 = 9;
  1131  000F0A  0E00               	movlw	0
  1132  000F0C  6F89               	movwf	(main@check1+1)& (0+255),b
  1133  000F0E  0E09               	movlw	9
  1134  000F10  6F88               	movwf	main@check1& (0+255),b
  1135  000F12  0E00               	movlw	0
  1136  000F14  6F8B               	movwf	(main@check2+1)& (0+255),b
  1137  000F16  0E09               	movlw	9
  1138  000F18  6F8A               	movwf	main@check2& (0+255),b
  1139                           
  1140                           ;main.c: 107:     unsigned int check3 = 9; unsigned int check4 = 9;
  1141  000F1A  0E00               	movlw	0
  1142  000F1C  6F8D               	movwf	(main@check3+1)& (0+255),b
  1143  000F1E  0E09               	movlw	9
  1144  000F20  6F8C               	movwf	main@check3& (0+255),b
  1145  000F22  0E00               	movlw	0
  1146  000F24  6F85               	movwf	(main@check4+1)& (0+255),b
  1147  000F26  0E09               	movlw	9
  1148  000F28  6F84               	movwf	main@check4& (0+255),b
  1149                           
  1150                           ;main.c: 108:     unsigned int count = 0;
  1151  000F2A  0E00               	movlw	0
  1152  000F2C  6F8F               	movwf	(main@count+1)& (0+255),b
  1153  000F2E  0E00               	movlw	0
  1154  000F30  6F8E               	movwf	main@count& (0+255),b
  1155                           
  1156                           ;main.c: 109:     unsigned int reset_timer = 1;
  1157  000F32  0E00               	movlw	0
  1158  000F34  6F87               	movwf	(main@reset_timer+1)& (0+255),b
  1159  000F36  0E01               	movlw	1
  1160  000F38  6F86               	movwf	main@reset_timer& (0+255),b
  1161  000F3A                     l4055:
  1162                           
  1163                           ;main.c: 113:         unsigned int detected_colour;;main.c: 114:         read_colours(&R
      +                          GBstruct);
  1164  000F3A  0E92               	movlw	low main@RGBstruct
  1165  000F3C  6E0C               	movwf	read_colours@m^0,c
  1166  000F3E  0E00               	movlw	high main@RGBstruct
  1167  000F40  6E0D               	movwf	(read_colours@m+1)^0,c
  1168  000F42  ECCC  F019         	call	_read_colours	;wreg free
  1169  000F46                     
  1170                           ;main.c: 115:         if (count==0) {check1 = determine_color_new(&RGBstruct);}
  1171  000F46  0100               	movlb	0	; () banked
  1172  000F48  518E               	movf	main@count& (0+255),w,b
  1173  000F4A  118F               	iorwf	(main@count+1)& (0+255),w,b
  1174  000F4C  A4D8               	btfss	status,2,c
  1175  000F4E  EFAB  F007         	goto	u3971
  1176  000F52  EFAD  F007         	goto	u3970
  1177  000F56                     u3971:
  1178  000F56  EFB7  F007         	goto	l4061
  1179  000F5A                     u3970:
  1180  000F5A                     
  1181                           ; BSR set to: 0
  1182  000F5A  0E92               	movlw	low main@RGBstruct
  1183  000F5C  6E5B               	movwf	determine_color_new@m^0,c
  1184  000F5E  0E00               	movlw	high main@RGBstruct
  1185  000F60  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1186  000F62  EC16  F000         	call	_determine_color_new	;wreg free
  1187  000F66  C05B  F088         	movff	?_determine_color_new,main@check1
  1188  000F6A  C05C  F089         	movff	?_determine_color_new+1,main@check1+1
  1189  000F6E                     l4061:
  1190                           
  1191                           ;main.c: 116:         if (count==1) {check2 = determine_color_new(&RGBstruct);}
  1192  000F6E  0100               	movlb	0	; () banked
  1193  000F70  058E               	decf	main@count& (0+255),w,b
  1194  000F72  118F               	iorwf	(main@count+1)& (0+255),w,b
  1195  000F74  A4D8               	btfss	status,2,c
  1196  000F76  EFBF  F007         	goto	u3981
  1197  000F7A  EFC1  F007         	goto	u3980
  1198  000F7E                     u3981:
  1199  000F7E  EFCB  F007         	goto	l4065
  1200  000F82                     u3980:
  1201  000F82                     
  1202                           ; BSR set to: 0
  1203  000F82  0E92               	movlw	low main@RGBstruct
  1204  000F84  6E5B               	movwf	determine_color_new@m^0,c
  1205  000F86  0E00               	movlw	high main@RGBstruct
  1206  000F88  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1207  000F8A  EC16  F000         	call	_determine_color_new	;wreg free
  1208  000F8E  C05B  F08A         	movff	?_determine_color_new,main@check2
  1209  000F92  C05C  F08B         	movff	?_determine_color_new+1,main@check2+1
  1210  000F96                     l4065:
  1211                           
  1212                           ;main.c: 117:         if (count==2) {check3 = determine_color_new(&RGBstruct);}
  1213  000F96  0E02               	movlw	2
  1214  000F98  0100               	movlb	0	; () banked
  1215  000F9A  198E               	xorwf	main@count& (0+255),w,b
  1216  000F9C  118F               	iorwf	(main@count+1)& (0+255),w,b
  1217  000F9E  A4D8               	btfss	status,2,c
  1218  000FA0  EFD4  F007         	goto	u3991
  1219  000FA4  EFD6  F007         	goto	u3990
  1220  000FA8                     u3991:
  1221  000FA8  EFE0  F007         	goto	l4069
  1222  000FAC                     u3990:
  1223  000FAC                     
  1224                           ; BSR set to: 0
  1225  000FAC  0E92               	movlw	low main@RGBstruct
  1226  000FAE  6E5B               	movwf	determine_color_new@m^0,c
  1227  000FB0  0E00               	movlw	high main@RGBstruct
  1228  000FB2  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1229  000FB4  EC16  F000         	call	_determine_color_new	;wreg free
  1230  000FB8  C05B  F08C         	movff	?_determine_color_new,main@check3
  1231  000FBC  C05C  F08D         	movff	?_determine_color_new+1,main@check3+1
  1232  000FC0                     l4069:
  1233                           
  1234                           ;main.c: 118:         if (count==3) {check4 = determine_color_new(&RGBstruct);count=0;}
  1235  000FC0  0E03               	movlw	3
  1236  000FC2  0100               	movlb	0	; () banked
  1237  000FC4  198E               	xorwf	main@count& (0+255),w,b
  1238  000FC6  118F               	iorwf	(main@count+1)& (0+255),w,b
  1239  000FC8  A4D8               	btfss	status,2,c
  1240  000FCA  EFE9  F007         	goto	u4001
  1241  000FCE  EFEB  F007         	goto	u4000
  1242  000FD2                     u4001:
  1243  000FD2  EFFC  F007         	goto	l4075
  1244  000FD6                     u4000:
  1245  000FD6                     
  1246                           ; BSR set to: 0
  1247  000FD6  0E92               	movlw	low main@RGBstruct
  1248  000FD8  6E5B               	movwf	determine_color_new@m^0,c
  1249  000FDA  0E00               	movlw	high main@RGBstruct
  1250  000FDC  6E5C               	movwf	(determine_color_new@m+1)^0,c
  1251  000FDE  EC16  F000         	call	_determine_color_new	;wreg free
  1252  000FE2  C05B  F084         	movff	?_determine_color_new,main@check4
  1253  000FE6  C05C  F085         	movff	?_determine_color_new+1,main@check4+1
  1254  000FEA  0E00               	movlw	0
  1255  000FEC  0100               	movlb	0	; () banked
  1256  000FEE  6F8F               	movwf	(main@count+1)& (0+255),b
  1257  000FF0  0E00               	movlw	0
  1258  000FF2  6F8E               	movwf	main@count& (0+255),b
  1259  000FF4  EFFE  F007         	goto	l4077
  1260  000FF8                     l4075:
  1261                           
  1262                           ; BSR set to: 0
  1263  000FF8  4B8E               	infsnz	main@count& (0+255),f,b
  1264  000FFA  2B8F               	incf	(main@count+1)& (0+255),f,b
  1265  000FFC                     l4077:
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;main.c: 122:         if (check1==check2 && check2==check3 && check3==check4){
  1269  000FFC  518A               	movf	main@check2& (0+255),w,b
  1270  000FFE  1988               	xorwf	main@check1& (0+255),w,b
  1271  001000  E107               	bnz	u4011
  1272  001002  518B               	movf	(main@check2+1)& (0+255),w,b
  1273  001004  1989               	xorwf	(main@check1+1)& (0+255),w,b
  1274  001006  A4D8               	btfss	status,2,c
  1275  001008  EF08  F008         	goto	u4011
  1276  00100C  EF0A  F008         	goto	u4010
  1277  001010                     u4011:
  1278  001010  EF77  F008         	goto	l4099
  1279  001014                     u4010:
  1280  001014                     
  1281                           ; BSR set to: 0
  1282  001014  518C               	movf	main@check3& (0+255),w,b
  1283  001016  198A               	xorwf	main@check2& (0+255),w,b
  1284  001018  E107               	bnz	u4021
  1285  00101A  518D               	movf	(main@check3+1)& (0+255),w,b
  1286  00101C  198B               	xorwf	(main@check2+1)& (0+255),w,b
  1287  00101E  A4D8               	btfss	status,2,c
  1288  001020  EF14  F008         	goto	u4021
  1289  001024  EF16  F008         	goto	u4020
  1290  001028                     u4021:
  1291  001028  EF77  F008         	goto	l4099
  1292  00102C                     u4020:
  1293  00102C                     
  1294                           ; BSR set to: 0
  1295  00102C  5184               	movf	main@check4& (0+255),w,b
  1296  00102E  198C               	xorwf	main@check3& (0+255),w,b
  1297  001030  E107               	bnz	u4031
  1298  001032  5185               	movf	(main@check4+1)& (0+255),w,b
  1299  001034  198D               	xorwf	(main@check3+1)& (0+255),w,b
  1300  001036  A4D8               	btfss	status,2,c
  1301  001038  EF20  F008         	goto	u4031
  1302  00103C  EF22  F008         	goto	u4030
  1303  001040                     u4031:
  1304  001040  EF77  F008         	goto	l4099
  1305  001044                     u4030:
  1306  001044                     
  1307                           ; BSR set to: 0
  1308                           ;main.c: 123:             detected_colour = check1;
  1309  001044  C088  F090         	movff	main@check1,main@detected_colour
  1310  001048  C089  F091         	movff	main@check1+1,main@detected_colour+1
  1311  00104C                     
  1312                           ; BSR set to: 0
  1313                           ;main.c: 125:             if (detected_colour >= 0 && detected_colour <= 8){
  1314  00104C  5191               	movf	(main@detected_colour+1)& (0+255),w,b
  1315  00104E  E107               	bnz	u4041
  1316  001050  0E09               	movlw	9
  1317  001052  5D90               	subwf	main@detected_colour& (0+255),w,b
  1318  001054  B0D8               	btfsc	status,0,c
  1319  001056  EF2F  F008         	goto	u4041
  1320  00105A  EF31  F008         	goto	u4040
  1321  00105E                     u4041:
  1322  00105E  EF4C  F008         	goto	l4093
  1323  001062                     u4040:
  1324  001062                     
  1325                           ; BSR set to: 0
  1326                           ;main.c: 126:                 updateMovementCount(detected_colour, movementArray, moveme
      +                          nts, timerArray);
  1327  001062  C090  F001         	movff	main@detected_colour,updateMovementCount@movementCode
  1328  001066  C091  F002         	movff	main@detected_colour+1,updateMovementCount@movementCode+1
  1329  00106A  0E3C               	movlw	low _movementArray
  1330  00106C  6E03               	movwf	updateMovementCount@movementArray^0,c
  1331  00106E  0E01               	movlw	high _movementArray
  1332  001070  6E04               	movwf	(updateMovementCount@movementArray+1)^0,c
  1333  001072  C0CC  F005         	movff	_movements,updateMovementCount@movements
  1334  001076  C0CD  F006         	movff	_movements+1,updateMovementCount@movements+1
  1335  00107A  0ED2               	movlw	low _timerArray
  1336  00107C  6E07               	movwf	updateMovementCount@timerArray^0,c
  1337  00107E  0E00               	movlw	high _timerArray
  1338  001080  6E08               	movwf	(updateMovementCount@timerArray+1)^0,c
  1339  001082  ECFD  F019         	call	_updateMovementCount	;wreg free
  1340  001086                     
  1341                           ;main.c: 127:                 movements++;
  1342  001086  0100               	movlb	0	; () banked
  1343  001088  4BCC               	infsnz	_movements& (0+255),f,b
  1344  00108A  2BCD               	incf	(_movements+1)& (0+255),f,b
  1345  00108C                     
  1346                           ; BSR set to: 0
  1347                           ;main.c: 128:                 reset_timer = 1;
  1348  00108C  0E00               	movlw	0
  1349  00108E  6F87               	movwf	(main@reset_timer+1)& (0+255),b
  1350  001090  0E01               	movlw	1
  1351  001092  6F86               	movwf	main@reset_timer& (0+255),b
  1352                           
  1353                           ;main.c: 129:             }
  1354  001094  EF67  F008         	goto	l383
  1355  001098                     l4093:
  1356                           
  1357                           ; BSR set to: 0
  1358  001098  0E09               	movlw	9
  1359  00109A  1990               	xorwf	main@detected_colour& (0+255),w,b
  1360  00109C  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1361  00109E  A4D8               	btfss	status,2,c
  1362  0010A0  EF54  F008         	goto	u4051
  1363  0010A4  EF56  F008         	goto	u4050
  1364  0010A8                     u4051:
  1365  0010A8  EF67  F008         	goto	l383
  1366  0010AC                     u4050:
  1367  0010AC                     
  1368                           ; BSR set to: 0
  1369  0010AC  0586               	decf	main@reset_timer& (0+255),w,b
  1370  0010AE  1187               	iorwf	(main@reset_timer+1)& (0+255),w,b
  1371  0010B0  A4D8               	btfss	status,2,c
  1372  0010B2  EF5D  F008         	goto	u4061
  1373  0010B6  EF5F  F008         	goto	u4060
  1374  0010BA                     u4061:
  1375  0010BA  EF67  F008         	goto	l383
  1376  0010BE                     u4060:
  1377  0010BE                     
  1378                           ; BSR set to: 0
  1379                           ;main.c: 132:                 TMR0H = 0;
  1380  0010BE  0E00               	movlw	0
  1381  0010C0  6ED4               	movwf	212,c	;volatile
  1382                           
  1383                           ;main.c: 133:                 TMR0L = 0;
  1384  0010C2  0E00               	movlw	0
  1385  0010C4  6ED3               	movwf	211,c	;volatile
  1386                           
  1387                           ;main.c: 134:                 reset_timer = 0;
  1388  0010C6  0E00               	movlw	0
  1389  0010C8  6F87               	movwf	(main@reset_timer+1)& (0+255),b
  1390  0010CA  0E00               	movlw	0
  1391  0010CC  6F86               	movwf	main@reset_timer& (0+255),b
  1392  0010CE                     l383:
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;main.c: 136:             check1=9;check2=9;check3=9;check4=9;
  1396  0010CE  0E00               	movlw	0
  1397  0010D0  6F89               	movwf	(main@check1+1)& (0+255),b
  1398  0010D2  0E09               	movlw	9
  1399  0010D4  6F88               	movwf	main@check1& (0+255),b
  1400  0010D6  0E00               	movlw	0
  1401  0010D8  6F8B               	movwf	(main@check2+1)& (0+255),b
  1402  0010DA  0E09               	movlw	9
  1403  0010DC  6F8A               	movwf	main@check2& (0+255),b
  1404  0010DE  0E00               	movlw	0
  1405  0010E0  6F8D               	movwf	(main@check3+1)& (0+255),b
  1406  0010E2  0E09               	movlw	9
  1407  0010E4  6F8C               	movwf	main@check3& (0+255),b
  1408  0010E6  0E00               	movlw	0
  1409  0010E8  6F85               	movwf	(main@check4+1)& (0+255),b
  1410  0010EA  0E09               	movlw	9
  1411  0010EC  6F84               	movwf	main@check4& (0+255),b
  1412  0010EE                     l4099:
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;main.c: 139:         if (detected_colour == 0){ turnRight90(&motorL,&motorR);_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
  1416  0010EE  5190               	movf	main@detected_colour& (0+255),w,b
  1417  0010F0  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1418  0010F2  A4D8               	btfss	status,2,c
  1419  0010F4  EF7E  F008         	goto	u4071
  1420  0010F8  EF80  F008         	goto	u4070
  1421  0010FC                     u4071:
  1422  0010FC  EF96  F008         	goto	l4105
  1423  001100                     u4070:
  1424  001100                     
  1425                           ; BSR set to: 0
  1426  001100  0EA6               	movlw	low main@motorL
  1427  001102  6E1D               	movwf	turnRight90@mL^0,c
  1428  001104  0E00               	movlw	high main@motorL
  1429  001106  6E1E               	movwf	(turnRight90@mL+1)^0,c
  1430  001108  0EAF               	movlw	low main@motorR
  1431  00110A  6E1F               	movwf	turnRight90@mR^0,c
  1432  00110C  0E00               	movlw	high main@motorR
  1433  00110E  6E20               	movwf	(turnRight90@mR+1)^0,c
  1434  001110  EC9D  F014         	call	_turnRight90	;wreg free
  1435  001114  0E09               	movlw	9
  1436  001116  6E5E               	movwf	(??_main+1)^0,c
  1437  001118  0E1E               	movlw	30
  1438  00111A  6E5D               	movwf	??_main^0,c
  1439  00111C  0EE4               	movlw	228
  1440  00111E                     u4267:
  1441  00111E  2EE8               	decfsz	wreg,f,c
  1442  001120  D7FE               	bra	u4267
  1443  001122  2E5D               	decfsz	??_main^0,f,c
  1444  001124  D7FC               	bra	u4267
  1445  001126  2E5E               	decfsz	(??_main+1)^0,f,c
  1446  001128  D7FA               	bra	u4267
  1447  00112A  D000               	nop2	
  1448  00112C                     l4105:
  1449                           
  1450                           ;main.c: 140:         if (detected_colour == 1){ turnLeft90(&motorL,&motorR);_delay((uns
      +                          igned long)((100)*(64000000/4000.0)));}
  1451  00112C  0100               	movlb	0	; () banked
  1452  00112E  0590               	decf	main@detected_colour& (0+255),w,b
  1453  001130  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1454  001132  A4D8               	btfss	status,2,c
  1455  001134  EF9E  F008         	goto	u4081
  1456  001138  EFA0  F008         	goto	u4080
  1457  00113C                     u4081:
  1458  00113C  EFB6  F008         	goto	l4111
  1459  001140                     u4080:
  1460  001140                     
  1461                           ; BSR set to: 0
  1462  001140  0EA6               	movlw	low main@motorL
  1463  001142  6E1D               	movwf	turnLeft90@mL^0,c
  1464  001144  0E00               	movlw	high main@motorL
  1465  001146  6E1E               	movwf	(turnLeft90@mL+1)^0,c
  1466  001148  0EAF               	movlw	low main@motorR
  1467  00114A  6E1F               	movwf	turnLeft90@mR^0,c
  1468  00114C  0E00               	movlw	high main@motorR
  1469  00114E  6E20               	movwf	(turnLeft90@mR+1)^0,c
  1470  001150  ECFD  F013         	call	_turnLeft90	;wreg free
  1471  001154  0E09               	movlw	9
  1472  001156  6E5E               	movwf	(??_main+1)^0,c
  1473  001158  0E1E               	movlw	30
  1474  00115A  6E5D               	movwf	??_main^0,c
  1475  00115C  0EE4               	movlw	228
  1476  00115E                     u4277:
  1477  00115E  2EE8               	decfsz	wreg,f,c
  1478  001160  D7FE               	bra	u4277
  1479  001162  2E5D               	decfsz	??_main^0,f,c
  1480  001164  D7FC               	bra	u4277
  1481  001166  2E5E               	decfsz	(??_main+1)^0,f,c
  1482  001168  D7FA               	bra	u4277
  1483  00116A  D000               	nop2	
  1484  00116C                     l4111:
  1485                           
  1486                           ;main.c: 141:         if (detected_colour == 2){ turnRight180(&motorL,&motorR);_delay((u
      +                          nsigned long)((100)*(64000000/4000.0)));}
  1487  00116C  0E02               	movlw	2
  1488  00116E  0100               	movlb	0	; () banked
  1489  001170  1990               	xorwf	main@detected_colour& (0+255),w,b
  1490  001172  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1491  001174  A4D8               	btfss	status,2,c
  1492  001176  EFBF  F008         	goto	u4091
  1493  00117A  EFC1  F008         	goto	u4090
  1494  00117E                     u4091:
  1495  00117E  EFD7  F008         	goto	l4117
  1496  001182                     u4090:
  1497  001182                     
  1498                           ; BSR set to: 0
  1499  001182  0EA6               	movlw	low main@motorL
  1500  001184  6E1D               	movwf	turnRight180@mL^0,c
  1501  001186  0E00               	movlw	high main@motorL
  1502  001188  6E1E               	movwf	(turnRight180@mL+1)^0,c
  1503  00118A  0EAF               	movlw	low main@motorR
  1504  00118C  6E1F               	movwf	turnRight180@mR^0,c
  1505  00118E  0E00               	movlw	high main@motorR
  1506  001190  6E20               	movwf	(turnRight180@mR+1)^0,c
  1507  001192  EC3C  F015         	call	_turnRight180	;wreg free
  1508  001196  0E09               	movlw	9
  1509  001198  6E5E               	movwf	(??_main+1)^0,c
  1510  00119A  0E1E               	movlw	30
  1511  00119C  6E5D               	movwf	??_main^0,c
  1512  00119E  0EE4               	movlw	228
  1513  0011A0                     u4287:
  1514  0011A0  2EE8               	decfsz	wreg,f,c
  1515  0011A2  D7FE               	bra	u4287
  1516  0011A4  2E5D               	decfsz	??_main^0,f,c
  1517  0011A6  D7FC               	bra	u4287
  1518  0011A8  2E5E               	decfsz	(??_main+1)^0,f,c
  1519  0011AA  D7FA               	bra	u4287
  1520  0011AC  D000               	nop2	
  1521  0011AE                     l4117:
  1522                           
  1523                           ;main.c: 142:         if (detected_colour == 3){ reverseTurnRight90(&motorL,&motorR);_de
      +                          lay((unsigned long)((100)*(64000000/4000.0)));}
  1524  0011AE  0E03               	movlw	3
  1525  0011B0  0100               	movlb	0	; () banked
  1526  0011B2  1990               	xorwf	main@detected_colour& (0+255),w,b
  1527  0011B4  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1528  0011B6  A4D8               	btfss	status,2,c
  1529  0011B8  EFE0  F008         	goto	u4101
  1530  0011BC  EFE2  F008         	goto	u4100
  1531  0011C0                     u4101:
  1532  0011C0  EFF8  F008         	goto	l4123
  1533  0011C4                     u4100:
  1534  0011C4                     
  1535                           ; BSR set to: 0
  1536  0011C4  0EA6               	movlw	low main@motorL
  1537  0011C6  6E25               	movwf	reverseTurnRight90@mL^0,c
  1538  0011C8  0E00               	movlw	high main@motorL
  1539  0011CA  6E26               	movwf	(reverseTurnRight90@mL+1)^0,c
  1540  0011CC  0EAF               	movlw	low main@motorR
  1541  0011CE  6E27               	movwf	reverseTurnRight90@mR^0,c
  1542  0011D0  0E00               	movlw	high main@motorR
  1543  0011D2  6E28               	movwf	(reverseTurnRight90@mR+1)^0,c
  1544  0011D4  EC1C  F018         	call	_reverseTurnRight90	;wreg free
  1545  0011D8  0E09               	movlw	9
  1546  0011DA  6E5E               	movwf	(??_main+1)^0,c
  1547  0011DC  0E1E               	movlw	30
  1548  0011DE  6E5D               	movwf	??_main^0,c
  1549  0011E0  0EE4               	movlw	228
  1550  0011E2                     u4297:
  1551  0011E2  2EE8               	decfsz	wreg,f,c
  1552  0011E4  D7FE               	bra	u4297
  1553  0011E6  2E5D               	decfsz	??_main^0,f,c
  1554  0011E8  D7FC               	bra	u4297
  1555  0011EA  2E5E               	decfsz	(??_main+1)^0,f,c
  1556  0011EC  D7FA               	bra	u4297
  1557  0011EE  D000               	nop2	
  1558  0011F0                     l4123:
  1559                           
  1560                           ;main.c: 143:         if (detected_colour == 4){ reverseTurnLeft90(&motorL,&motorR);_del
      +                          ay((unsigned long)((100)*(64000000/4000.0)));}
  1561  0011F0  0E04               	movlw	4
  1562  0011F2  0100               	movlb	0	; () banked
  1563  0011F4  1990               	xorwf	main@detected_colour& (0+255),w,b
  1564  0011F6  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1565  0011F8  A4D8               	btfss	status,2,c
  1566  0011FA  EF01  F009         	goto	u4111
  1567  0011FE  EF03  F009         	goto	u4110
  1568  001202                     u4111:
  1569  001202  EF19  F009         	goto	l4129
  1570  001206                     u4110:
  1571  001206                     
  1572                           ; BSR set to: 0
  1573  001206  0EA6               	movlw	low main@motorL
  1574  001208  6E25               	movwf	reverseTurnLeft90@mL^0,c
  1575  00120A  0E00               	movlw	high main@motorL
  1576  00120C  6E26               	movwf	(reverseTurnLeft90@mL+1)^0,c
  1577  00120E  0EAF               	movlw	low main@motorR
  1578  001210  6E27               	movwf	reverseTurnLeft90@mR^0,c
  1579  001212  0E00               	movlw	high main@motorR
  1580  001214  6E28               	movwf	(reverseTurnLeft90@mR+1)^0,c
  1581  001216  EC92  F018         	call	_reverseTurnLeft90	;wreg free
  1582  00121A  0E09               	movlw	9
  1583  00121C  6E5E               	movwf	(??_main+1)^0,c
  1584  00121E  0E1E               	movlw	30
  1585  001220  6E5D               	movwf	??_main^0,c
  1586  001222  0EE4               	movlw	228
  1587  001224                     u4307:
  1588  001224  2EE8               	decfsz	wreg,f,c
  1589  001226  D7FE               	bra	u4307
  1590  001228  2E5D               	decfsz	??_main^0,f,c
  1591  00122A  D7FC               	bra	u4307
  1592  00122C  2E5E               	decfsz	(??_main+1)^0,f,c
  1593  00122E  D7FA               	bra	u4307
  1594  001230  D000               	nop2	
  1595  001232                     l4129:
  1596                           
  1597                           ;main.c: 144:         if (detected_colour == 5){ turnRight135(&motorL,&motorR);_delay((u
      +                          nsigned long)((100)*(64000000/4000.0)));}
  1598  001232  0E05               	movlw	5
  1599  001234  0100               	movlb	0	; () banked
  1600  001236  1990               	xorwf	main@detected_colour& (0+255),w,b
  1601  001238  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1602  00123A  A4D8               	btfss	status,2,c
  1603  00123C  EF22  F009         	goto	u4121
  1604  001240  EF24  F009         	goto	u4120
  1605  001244                     u4121:
  1606  001244  EF3A  F009         	goto	l4135
  1607  001248                     u4120:
  1608  001248                     
  1609                           ; BSR set to: 0
  1610  001248  0EA6               	movlw	low main@motorL
  1611  00124A  6E1D               	movwf	turnRight135@mL^0,c
  1612  00124C  0E00               	movlw	high main@motorL
  1613  00124E  6E1E               	movwf	(turnRight135@mL+1)^0,c
  1614  001250  0EAF               	movlw	low main@motorR
  1615  001252  6E1F               	movwf	turnRight135@mR^0,c
  1616  001254  0E00               	movlw	high main@motorR
  1617  001256  6E20               	movwf	(turnRight135@mR+1)^0,c
  1618  001258  ECDB  F015         	call	_turnRight135	;wreg free
  1619  00125C  0E09               	movlw	9
  1620  00125E  6E5E               	movwf	(??_main+1)^0,c
  1621  001260  0E1E               	movlw	30
  1622  001262  6E5D               	movwf	??_main^0,c
  1623  001264  0EE4               	movlw	228
  1624  001266                     u4317:
  1625  001266  2EE8               	decfsz	wreg,f,c
  1626  001268  D7FE               	bra	u4317
  1627  00126A  2E5D               	decfsz	??_main^0,f,c
  1628  00126C  D7FC               	bra	u4317
  1629  00126E  2E5E               	decfsz	(??_main+1)^0,f,c
  1630  001270  D7FA               	bra	u4317
  1631  001272  D000               	nop2	
  1632  001274                     l4135:
  1633                           
  1634                           ;main.c: 145:         if (detected_colour == 6){ turnLeft135(&motorL,&motorR);_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
  1635  001274  0E06               	movlw	6
  1636  001276  0100               	movlb	0	; () banked
  1637  001278  1990               	xorwf	main@detected_colour& (0+255),w,b
  1638  00127A  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1639  00127C  A4D8               	btfss	status,2,c
  1640  00127E  EF43  F009         	goto	u4131
  1641  001282  EF45  F009         	goto	u4130
  1642  001286                     u4131:
  1643  001286  EF5B  F009         	goto	l4141
  1644  00128A                     u4130:
  1645  00128A                     
  1646                           ; BSR set to: 0
  1647  00128A  0EA6               	movlw	low main@motorL
  1648  00128C  6E1D               	movwf	turnLeft135@mL^0,c
  1649  00128E  0E00               	movlw	high main@motorL
  1650  001290  6E1E               	movwf	(turnLeft135@mL+1)^0,c
  1651  001292  0EAF               	movlw	low main@motorR
  1652  001294  6E1F               	movwf	turnLeft135@mR^0,c
  1653  001296  0E00               	movlw	high main@motorR
  1654  001298  6E20               	movwf	(turnLeft135@mR+1)^0,c
  1655  00129A  EC79  F016         	call	_turnLeft135	;wreg free
  1656  00129E  0E09               	movlw	9
  1657  0012A0  6E5E               	movwf	(??_main+1)^0,c
  1658  0012A2  0E1E               	movlw	30
  1659  0012A4  6E5D               	movwf	??_main^0,c
  1660  0012A6  0EE4               	movlw	228
  1661  0012A8                     u4327:
  1662  0012A8  2EE8               	decfsz	wreg,f,c
  1663  0012AA  D7FE               	bra	u4327
  1664  0012AC  2E5D               	decfsz	??_main^0,f,c
  1665  0012AE  D7FC               	bra	u4327
  1666  0012B0  2E5E               	decfsz	(??_main+1)^0,f,c
  1667  0012B2  D7FA               	bra	u4327
  1668  0012B4  D000               	nop2	
  1669  0012B6                     l4141:
  1670                           
  1671                           ;main.c: 148:         if (detected_colour == 7){ White(&motorL,&motorR,movementArray, mo
      +                          vements, timerArray);
  1672  0012B6  0E07               	movlw	7
  1673  0012B8  0100               	movlb	0	; () banked
  1674  0012BA  1990               	xorwf	main@detected_colour& (0+255),w,b
  1675  0012BC  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1676  0012BE  A4D8               	btfss	status,2,c
  1677  0012C0  EF64  F009         	goto	u4141
  1678  0012C4  EF66  F009         	goto	u4140
  1679  0012C8                     u4141:
  1680  0012C8  EF91  F009         	goto	l4151
  1681  0012CC                     u4140:
  1682  0012CC                     
  1683                           ; BSR set to: 0
  1684  0012CC  0EA6               	movlw	low main@motorL
  1685  0012CE  6E25               	movwf	White@mL^0,c
  1686  0012D0  0E00               	movlw	high main@motorL
  1687  0012D2  6E26               	movwf	(White@mL+1)^0,c
  1688  0012D4  0EAF               	movlw	low main@motorR
  1689  0012D6  6E27               	movwf	White@mR^0,c
  1690  0012D8  0E00               	movlw	high main@motorR
  1691  0012DA  6E28               	movwf	(White@mR+1)^0,c
  1692  0012DC  0E3C               	movlw	low _movementArray
  1693  0012DE  6E29               	movwf	White@movementArray^0,c
  1694  0012E0  0E01               	movlw	high _movementArray
  1695  0012E2  6E2A               	movwf	(White@movementArray+1)^0,c
  1696  0012E4  C0CC  F02B         	movff	_movements,White@movements
  1697  0012E8  C0CD  F02C         	movff	_movements+1,White@movements+1
  1698  0012EC  0ED2               	movlw	low _timerArray
  1699  0012EE  6E2D               	movwf	White@timerArray^0,c
  1700  0012F0  0E00               	movlw	high _timerArray
  1701  0012F2  6E2E               	movwf	(White@timerArray+1)^0,c
  1702  0012F4  EC3E  F00C         	call	_White	;wreg free
  1703  0012F8                     
  1704                           ;main.c: 149:             _delay((unsigned long)((100)*(64000000/4000.0)));LATDbits.LATD
      +                          7 = 1;LATHbits.LATH3 = 1;
  1705  0012F8  0E09               	movlw	9
  1706  0012FA  6E5E               	movwf	(??_main+1)^0,c
  1707  0012FC  0E1E               	movlw	30
  1708  0012FE  6E5D               	movwf	??_main^0,c
  1709  001300  0EE4               	movlw	228
  1710  001302                     u4337:
  1711  001302  2EE8               	decfsz	wreg,f,c
  1712  001304  D7FE               	bra	u4337
  1713  001306  2E5D               	decfsz	??_main^0,f,c
  1714  001308  D7FC               	bra	u4337
  1715  00130A  2E5E               	decfsz	(??_main+1)^0,f,c
  1716  00130C  D7FA               	bra	u4337
  1717  00130E  D000               	nop2	
  1718  001310  8E7C               	bsf	124,7,c	;volatile
  1719  001312  8680               	bsf	128,3,c	;volatile
  1720  001314                     l393:
  1721  001314  B68E               	btfsc	142,3,c	;volatile
  1722  001316  EF8F  F009         	goto	u4151
  1723  00131A  EF91  F009         	goto	u4150
  1724  00131E                     u4151:
  1725  00131E  EF8A  F009         	goto	l393
  1726  001322                     u4150:
  1727  001322                     l4151:
  1728                           
  1729                           ;main.c: 151:         if (detected_colour == 8){ White(&motorL,&motorR,movementArray, mo
      +                          vements, timerArray);
  1730  001322  0E08               	movlw	8
  1731  001324  0100               	movlb	0	; () banked
  1732  001326  1990               	xorwf	main@detected_colour& (0+255),w,b
  1733  001328  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1734  00132A  A4D8               	btfss	status,2,c
  1735  00132C  EF9A  F009         	goto	u4161
  1736  001330  EF9C  F009         	goto	u4160
  1737  001334                     u4161:
  1738  001334  EFC5  F009         	goto	l4157
  1739  001338                     u4160:
  1740  001338                     
  1741                           ; BSR set to: 0
  1742  001338  0EA6               	movlw	low main@motorL
  1743  00133A  6E25               	movwf	White@mL^0,c
  1744  00133C  0E00               	movlw	high main@motorL
  1745  00133E  6E26               	movwf	(White@mL+1)^0,c
  1746  001340  0EAF               	movlw	low main@motorR
  1747  001342  6E27               	movwf	White@mR^0,c
  1748  001344  0E00               	movlw	high main@motorR
  1749  001346  6E28               	movwf	(White@mR+1)^0,c
  1750  001348  0E3C               	movlw	low _movementArray
  1751  00134A  6E29               	movwf	White@movementArray^0,c
  1752  00134C  0E01               	movlw	high _movementArray
  1753  00134E  6E2A               	movwf	(White@movementArray+1)^0,c
  1754  001350  C0CC  F02B         	movff	_movements,White@movements
  1755  001354  C0CD  F02C         	movff	_movements+1,White@movements+1
  1756  001358  0ED2               	movlw	low _timerArray
  1757  00135A  6E2D               	movwf	White@timerArray^0,c
  1758  00135C  0E00               	movlw	high _timerArray
  1759  00135E  6E2E               	movwf	(White@timerArray+1)^0,c
  1760  001360  EC3E  F00C         	call	_White	;wreg free
  1761  001364                     
  1762                           ;main.c: 152:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1763  001364  0E09               	movlw	9
  1764  001366  6E5E               	movwf	(??_main+1)^0,c
  1765  001368  0E1E               	movlw	30
  1766  00136A  6E5D               	movwf	??_main^0,c
  1767  00136C  0EE4               	movlw	228
  1768  00136E                     u4347:
  1769  00136E  2EE8               	decfsz	wreg,f,c
  1770  001370  D7FE               	bra	u4347
  1771  001372  2E5D               	decfsz	??_main^0,f,c
  1772  001374  D7FC               	bra	u4347
  1773  001376  2E5E               	decfsz	(??_main+1)^0,f,c
  1774  001378  D7FA               	bra	u4347
  1775  00137A  D000               	nop2	
  1776  00137C                     l397:
  1777  00137C  B68E               	btfsc	142,3,c	;volatile
  1778  00137E  EFC3  F009         	goto	u4171
  1779  001382  EFC5  F009         	goto	u4170
  1780  001386                     u4171:
  1781  001386  EFBE  F009         	goto	l397
  1782  00138A                     u4170:
  1783  00138A                     l4157:
  1784                           
  1785                           ;main.c: 154:         if (detected_colour == 9){ forward(&motorL,&motorR);}
  1786  00138A  0E09               	movlw	9
  1787  00138C  0100               	movlb	0	; () banked
  1788  00138E  1990               	xorwf	main@detected_colour& (0+255),w,b
  1789  001390  1191               	iorwf	(main@detected_colour+1)& (0+255),w,b
  1790  001392  A4D8               	btfss	status,2,c
  1791  001394  EFCE  F009         	goto	u4181
  1792  001398  EFD0  F009         	goto	u4180
  1793  00139C                     u4181:
  1794  00139C  EF9D  F007         	goto	l4055
  1795  0013A0                     u4180:
  1796  0013A0                     
  1797                           ; BSR set to: 0
  1798  0013A0  0EA6               	movlw	low main@motorL
  1799  0013A2  6E19               	movwf	forward@mL^0,c
  1800  0013A4  0E00               	movlw	high main@motorL
  1801  0013A6  6E1A               	movwf	(forward@mL+1)^0,c
  1802  0013A8  0EAF               	movlw	low main@motorR
  1803  0013AA  6E1B               	movwf	forward@mR^0,c
  1804  0013AC  0E00               	movlw	high main@motorR
  1805  0013AE  6E1C               	movwf	(forward@mR+1)^0,c
  1806  0013B0  EC4F  F01A         	call	_forward	;wreg free
  1807  0013B4  EF9D  F007         	goto	l4055
  1808  0013B8  EF14  F000         	goto	start
  1809  0013BC                     __end_of_main:
  1810                           	callstack 0
  1811                           
  1812 ;; *************** function _updateMovementCount *****************
  1813 ;; Defined at:
  1814 ;;		line 208 in file "color.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  movementCode    2    0[COMRAM] unsigned int 
  1817 ;;  movementArra    2    2[COMRAM] PTR unsigned int 
  1818 ;;		 -> movementArray(30), 
  1819 ;;  movements       2    4[COMRAM] unsigned int 
  1820 ;;  timerArray      2    6[COMRAM] PTR unsigned int 
  1821 ;;		 -> timerArray(30), 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  tempTimerVal    2   10[COMRAM] unsigned int 
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1833 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1834 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1835 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1836 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1837 ;;Total ram usage:       12 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; Hardware stack levels required when called: 1
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_main
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text1
  1848  0033FA                     __ptext1:
  1849                           	callstack 0
  1850  0033FA                     _updateMovementCount:
  1851                           	callstack 29
  1852  0033FA                     
  1853                           ;color.c: 208: void updateMovementCount(unsigned int movementCode,unsigned int movementA
      +                          rray[], unsigned int movements,unsigned int timerArray[]);color.c: 209: {;color.c: 211: 
      +                              unsigned int tempTimerVal = TMR0L;
  1854  0033FA  CFD3 F00B          	movff	4051,updateMovementCount@tempTimerVal	;volatile
  1855  0033FE  6A0C               	clrf	(updateMovementCount@tempTimerVal+1)^0,c
  1856  003400                     
  1857                           ;color.c: 212:     tempTimerVal |= (TMR0H << 8);
  1858  003400  50D4               	movf	212,w,c	;volatile
  1859  003402  6E0A               	movwf	(??_updateMovementCount+1)^0,c
  1860  003404  6A09               	clrf	??_updateMovementCount^0,c
  1861  003406  5009               	movf	??_updateMovementCount^0,w,c
  1862  003408  120B               	iorwf	updateMovementCount@tempTimerVal^0,f,c
  1863  00340A  500A               	movf	(??_updateMovementCount+1)^0,w,c
  1864  00340C  120C               	iorwf	(updateMovementCount@tempTimerVal+1)^0,f,c
  1865  00340E                     
  1866                           ;color.c: 214:     timerArray[movements] = tempTimerVal;
  1867  00340E  90D8               	bcf	status,0,c
  1868  003410  3405               	rlcf	updateMovementCount@movements^0,w,c
  1869  003412  6ED9               	movwf	fsr2l,c
  1870  003414  3406               	rlcf	(updateMovementCount@movements+1)^0,w,c
  1871  003416  6EDA               	movwf	fsr2h,c
  1872  003418  5007               	movf	updateMovementCount@timerArray^0,w,c
  1873  00341A  26D9               	addwf	fsr2l,f,c
  1874  00341C  5008               	movf	(updateMovementCount@timerArray+1)^0,w,c
  1875  00341E  22DA               	addwfc	fsr2h,f,c
  1876  003420  C00B  FFDE         	movff	updateMovementCount@tempTimerVal,postinc2
  1877  003424  C00C  FFDD         	movff	updateMovementCount@tempTimerVal+1,postdec2
  1878  003428                     
  1879                           ;color.c: 216:     movementArray[movements] = movementCode;
  1880  003428  90D8               	bcf	status,0,c
  1881  00342A  3405               	rlcf	updateMovementCount@movements^0,w,c
  1882  00342C  6ED9               	movwf	fsr2l,c
  1883  00342E  3406               	rlcf	(updateMovementCount@movements+1)^0,w,c
  1884  003430  6EDA               	movwf	fsr2h,c
  1885  003432  5003               	movf	updateMovementCount@movementArray^0,w,c
  1886  003434  26D9               	addwf	fsr2l,f,c
  1887  003436  5004               	movf	(updateMovementCount@movementArray+1)^0,w,c
  1888  003438  22DA               	addwfc	fsr2h,f,c
  1889  00343A  C001  FFDE         	movff	updateMovementCount@movementCode,postinc2
  1890  00343E  C002  FFDD         	movff	updateMovementCount@movementCode+1,postdec2
  1891  003442                     
  1892                           ;color.c: 218:     TMR0H = 0;
  1893  003442  0E00               	movlw	0
  1894  003444  6ED4               	movwf	212,c	;volatile
  1895  003446                     
  1896                           ;color.c: 219:     TMR0L = 0;
  1897  003446  0E00               	movlw	0
  1898  003448  6ED3               	movwf	211,c	;volatile
  1899  00344A  0012               	return		;funcret
  1900  00344C                     __end_of_updateMovementCount:
  1901                           	callstack 0
  1902                           
  1903 ;; *************** function _reverseTurnRight90 *****************
  1904 ;; Defined at:
  1905 ;;		line 218 in file "dc_motor.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  mL              2   36[COMRAM] PTR struct DC_motor
  1908 ;;		 -> main@motorL(9), 
  1909 ;;  mR              2   38[COMRAM] PTR struct DC_motor
  1910 ;;		 -> main@motorR(9), 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1924 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1925 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;Total ram usage:        6 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; Hardware stack levels required when called: 5
  1929 ;; This function calls:
  1930 ;;		_setMotorPWM
  1931 ;;		_stop
  1932 ;;		_turnRight90
  1933 ;; This function is called by:
  1934 ;;		_main
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text2
  1939  003038                     __ptext2:
  1940                           	callstack 0
  1941  003038                     _reverseTurnRight90:
  1942                           	callstack 25
  1943  003038                     
  1944                           ;dc_motor.c: 218: void reverseTurnRight90(struct DC_motor *mL, struct DC_motor *mR);dc_m
      +                          otor.c: 219: {;dc_motor.c: 220:     stop(mL, mR);
  1945  003038  C025  F019         	movff	reverseTurnRight90@mL,stop@mL
  1946  00303C  C026  F01A         	movff	reverseTurnRight90@mL+1,stop@mL+1
  1947  003040  C027  F01B         	movff	reverseTurnRight90@mR,stop@mR
  1948  003044  C028  F01C         	movff	reverseTurnRight90@mR+1,stop@mR+1
  1949  003048  EC08  F019         	call	_stop	;wreg free
  1950  00304C                     
  1951                           ;dc_motor.c: 221:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1952  00304C  0E05               	movlw	5
  1953  00304E  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  1954  003050  0E0F               	movlw	15
  1955  003052  6E29               	movwf	??_reverseTurnRight90^0,c
  1956  003054  0EF1               	movlw	241
  1957  003056                     u4357:
  1958  003056  2EE8               	decfsz	wreg,f,c
  1959  003058  D7FE               	bra	u4357
  1960  00305A  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  1961  00305C  D7FC               	bra	u4357
  1962  00305E  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  1963  003060  D7FA               	bra	u4357
  1964  003062  F000               	nop	
  1965  003064                     
  1966                           ;dc_motor.c: 222:     (*mL).direction = 0;
  1967  003064  EE20 F001          	lfsr	2,1
  1968  003068  5025               	movf	reverseTurnRight90@mL^0,w,c
  1969  00306A  26D9               	addwf	fsr2l,f,c
  1970  00306C  5026               	movf	(reverseTurnRight90@mL+1)^0,w,c
  1971  00306E  22DA               	addwfc	fsr2h,f,c
  1972  003070  0E00               	movlw	0
  1973  003072  6EDF               	movwf	indf2,c
  1974  003074                     
  1975                           ;dc_motor.c: 223:     (*mR).direction = 0;
  1976  003074  EE20 F001          	lfsr	2,1
  1977  003078  5027               	movf	reverseTurnRight90@mR^0,w,c
  1978  00307A  26D9               	addwf	fsr2l,f,c
  1979  00307C  5028               	movf	(reverseTurnRight90@mR+1)^0,w,c
  1980  00307E  22DA               	addwfc	fsr2h,f,c
  1981  003080  0E00               	movlw	0
  1982  003082  6EDF               	movwf	indf2,c
  1983  003084                     
  1984                           ;dc_motor.c: 224:     (*mL).power = 70;
  1985  003084  C025  FFD9         	movff	reverseTurnRight90@mL,fsr2l
  1986  003088  C026  FFDA         	movff	reverseTurnRight90@mL+1,fsr2h
  1987  00308C  0E46               	movlw	70
  1988  00308E  6EDF               	movwf	indf2,c
  1989  003090                     
  1990                           ;dc_motor.c: 225:     (*mR).power = 70;
  1991  003090  C027  FFD9         	movff	reverseTurnRight90@mR,fsr2l
  1992  003094  C028  FFDA         	movff	reverseTurnRight90@mR+1,fsr2h
  1993  003098  0E46               	movlw	70
  1994  00309A  6EDF               	movwf	indf2,c
  1995  00309C                     
  1996                           ;dc_motor.c: 226:     setMotorPWM(mL);
  1997  00309C  C025  F00E         	movff	reverseTurnRight90@mL,setMotorPWM@m
  1998  0030A0  C026  F00F         	movff	reverseTurnRight90@mL+1,setMotorPWM@m+1
  1999  0030A4  EC39  F012         	call	_setMotorPWM	;wreg free
  2000  0030A8                     
  2001                           ;dc_motor.c: 227:     setMotorPWM(mR);
  2002  0030A8  C027  F00E         	movff	reverseTurnRight90@mR,setMotorPWM@m
  2003  0030AC  C028  F00F         	movff	reverseTurnRight90@mR+1,setMotorPWM@m+1
  2004  0030B0  EC39  F012         	call	_setMotorPWM	;wreg free
  2005  0030B4                     
  2006                           ;dc_motor.c: 228:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2007  0030B4  0E29               	movlw	41
  2008  0030B6  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  2009  0030B8  0E96               	movlw	150
  2010  0030BA  6E29               	movwf	??_reverseTurnRight90^0,c
  2011  0030BC  0E7F               	movlw	127
  2012  0030BE                     u4367:
  2013  0030BE  2EE8               	decfsz	wreg,f,c
  2014  0030C0  D7FE               	bra	u4367
  2015  0030C2  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  2016  0030C4  D7FC               	bra	u4367
  2017  0030C6  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  2018  0030C8  D7FA               	bra	u4367
  2019  0030CA  F000               	nop	
  2020                           
  2021                           ;dc_motor.c: 229:     stop(mL, mR);
  2022  0030CC  C025  F019         	movff	reverseTurnRight90@mL,stop@mL
  2023  0030D0  C026  F01A         	movff	reverseTurnRight90@mL+1,stop@mL+1
  2024  0030D4  C027  F01B         	movff	reverseTurnRight90@mR,stop@mR
  2025  0030D8  C028  F01C         	movff	reverseTurnRight90@mR+1,stop@mR+1
  2026  0030DC  EC08  F019         	call	_stop	;wreg free
  2027  0030E0                     
  2028                           ;dc_motor.c: 230:     _delay((unsigned long)((600)*(64000000/4000.0)));
  2029  0030E0  0E31               	movlw	49
  2030  0030E2  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  2031  0030E4  0EB4               	movlw	180
  2032  0030E6  6E29               	movwf	??_reverseTurnRight90^0,c
  2033  0030E8  0E66               	movlw	102
  2034  0030EA                     u4377:
  2035  0030EA  2EE8               	decfsz	wreg,f,c
  2036  0030EC  D7FE               	bra	u4377
  2037  0030EE  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  2038  0030F0  D7FC               	bra	u4377
  2039  0030F2  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  2040  0030F4  D7FA               	bra	u4377
  2041  0030F6                     
  2042                           ;dc_motor.c: 231:     turnRight90(mL, mR);
  2043  0030F6  C025  F01D         	movff	reverseTurnRight90@mL,turnRight90@mL
  2044  0030FA  C026  F01E         	movff	reverseTurnRight90@mL+1,turnRight90@mL+1
  2045  0030FE  C027  F01F         	movff	reverseTurnRight90@mR,turnRight90@mR
  2046  003102  C028  F020         	movff	reverseTurnRight90@mR+1,turnRight90@mR+1
  2047  003106  EC9D  F014         	call	_turnRight90	;wreg free
  2048                           
  2049                           ;dc_motor.c: 232:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2050  00310A  0E09               	movlw	9
  2051  00310C  6E2A               	movwf	(??_reverseTurnRight90+1)^0,c
  2052  00310E  0E1E               	movlw	30
  2053  003110  6E29               	movwf	??_reverseTurnRight90^0,c
  2054  003112  0EE4               	movlw	228
  2055  003114                     u4387:
  2056  003114  2EE8               	decfsz	wreg,f,c
  2057  003116  D7FE               	bra	u4387
  2058  003118  2E29               	decfsz	??_reverseTurnRight90^0,f,c
  2059  00311A  D7FC               	bra	u4387
  2060  00311C  2E2A               	decfsz	(??_reverseTurnRight90+1)^0,f,c
  2061  00311E  D7FA               	bra	u4387
  2062  003120  D000               	nop2	
  2063  003122  0012               	return		;funcret
  2064  003124                     __end_of_reverseTurnRight90:
  2065                           	callstack 0
  2066                           
  2067 ;; *************** function _reverseTurnLeft90 *****************
  2068 ;; Defined at:
  2069 ;;		line 236 in file "dc_motor.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  mL              2   36[COMRAM] PTR struct DC_motor
  2072 ;;		 -> main@motorL(9), 
  2073 ;;  mR              2   38[COMRAM] PTR struct DC_motor
  2074 ;;		 -> main@motorR(9), 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2086 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2088 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2089 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2090 ;;Total ram usage:        6 bytes
  2091 ;; Hardware stack levels used: 1
  2092 ;; Hardware stack levels required when called: 5
  2093 ;; This function calls:
  2094 ;;		_setMotorPWM
  2095 ;;		_stop
  2096 ;;		_turnLeft90
  2097 ;; This function is called by:
  2098 ;;		_main
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text3
  2103  003124                     __ptext3:
  2104                           	callstack 0
  2105  003124                     _reverseTurnLeft90:
  2106                           	callstack 25
  2107  003124                     
  2108                           ;dc_motor.c: 236: void reverseTurnLeft90(struct DC_motor *mL, struct DC_motor *mR);dc_mo
      +                          tor.c: 237: {;dc_motor.c: 238:     stop(mL, mR);
  2109  003124  C025  F019         	movff	reverseTurnLeft90@mL,stop@mL
  2110  003128  C026  F01A         	movff	reverseTurnLeft90@mL+1,stop@mL+1
  2111  00312C  C027  F01B         	movff	reverseTurnLeft90@mR,stop@mR
  2112  003130  C028  F01C         	movff	reverseTurnLeft90@mR+1,stop@mR+1
  2113  003134  EC08  F019         	call	_stop	;wreg free
  2114  003138                     
  2115                           ;dc_motor.c: 239:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2116  003138  0E05               	movlw	5
  2117  00313A  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  2118  00313C  0E0F               	movlw	15
  2119  00313E  6E29               	movwf	??_reverseTurnLeft90^0,c
  2120  003140  0EF1               	movlw	241
  2121  003142                     u4397:
  2122  003142  2EE8               	decfsz	wreg,f,c
  2123  003144  D7FE               	bra	u4397
  2124  003146  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  2125  003148  D7FC               	bra	u4397
  2126  00314A  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  2127  00314C  D7FA               	bra	u4397
  2128  00314E  F000               	nop	
  2129  003150                     
  2130                           ;dc_motor.c: 240:     (*mL).direction = 0;
  2131  003150  EE20 F001          	lfsr	2,1
  2132  003154  5025               	movf	reverseTurnLeft90@mL^0,w,c
  2133  003156  26D9               	addwf	fsr2l,f,c
  2134  003158  5026               	movf	(reverseTurnLeft90@mL+1)^0,w,c
  2135  00315A  22DA               	addwfc	fsr2h,f,c
  2136  00315C  0E00               	movlw	0
  2137  00315E  6EDF               	movwf	indf2,c
  2138  003160                     
  2139                           ;dc_motor.c: 241:     (*mR).direction = 0;
  2140  003160  EE20 F001          	lfsr	2,1
  2141  003164  5027               	movf	reverseTurnLeft90@mR^0,w,c
  2142  003166  26D9               	addwf	fsr2l,f,c
  2143  003168  5028               	movf	(reverseTurnLeft90@mR+1)^0,w,c
  2144  00316A  22DA               	addwfc	fsr2h,f,c
  2145  00316C  0E00               	movlw	0
  2146  00316E  6EDF               	movwf	indf2,c
  2147  003170                     
  2148                           ;dc_motor.c: 242:     (*mL).power = 70;
  2149  003170  C025  FFD9         	movff	reverseTurnLeft90@mL,fsr2l
  2150  003174  C026  FFDA         	movff	reverseTurnLeft90@mL+1,fsr2h
  2151  003178  0E46               	movlw	70
  2152  00317A  6EDF               	movwf	indf2,c
  2153  00317C                     
  2154                           ;dc_motor.c: 243:     (*mR).power = 70;
  2155  00317C  C027  FFD9         	movff	reverseTurnLeft90@mR,fsr2l
  2156  003180  C028  FFDA         	movff	reverseTurnLeft90@mR+1,fsr2h
  2157  003184  0E46               	movlw	70
  2158  003186  6EDF               	movwf	indf2,c
  2159  003188                     
  2160                           ;dc_motor.c: 244:     setMotorPWM(mL);
  2161  003188  C025  F00E         	movff	reverseTurnLeft90@mL,setMotorPWM@m
  2162  00318C  C026  F00F         	movff	reverseTurnLeft90@mL+1,setMotorPWM@m+1
  2163  003190  EC39  F012         	call	_setMotorPWM	;wreg free
  2164  003194                     
  2165                           ;dc_motor.c: 245:     setMotorPWM(mR);
  2166  003194  C027  F00E         	movff	reverseTurnLeft90@mR,setMotorPWM@m
  2167  003198  C028  F00F         	movff	reverseTurnLeft90@mR+1,setMotorPWM@m+1
  2168  00319C  EC39  F012         	call	_setMotorPWM	;wreg free
  2169  0031A0                     
  2170                           ;dc_motor.c: 246:     _delay((unsigned long)((550)*(64000000/4000.0)));
  2171  0031A0  0E2D               	movlw	45
  2172  0031A2  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  2173  0031A4  0EA5               	movlw	165
  2174  0031A6  6E29               	movwf	??_reverseTurnLeft90^0,c
  2175  0031A8  0E72               	movlw	114
  2176  0031AA                     u4407:
  2177  0031AA  2EE8               	decfsz	wreg,f,c
  2178  0031AC  D7FE               	bra	u4407
  2179  0031AE  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  2180  0031B0  D7FC               	bra	u4407
  2181  0031B2  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  2182  0031B4  D7FA               	bra	u4407
  2183  0031B6  D000               	nop2	
  2184                           
  2185                           ;dc_motor.c: 247:     stop(mL, mR);
  2186  0031B8  C025  F019         	movff	reverseTurnLeft90@mL,stop@mL
  2187  0031BC  C026  F01A         	movff	reverseTurnLeft90@mL+1,stop@mL+1
  2188  0031C0  C027  F01B         	movff	reverseTurnLeft90@mR,stop@mR
  2189  0031C4  C028  F01C         	movff	reverseTurnLeft90@mR+1,stop@mR+1
  2190  0031C8  EC08  F019         	call	_stop	;wreg free
  2191  0031CC                     
  2192                           ;dc_motor.c: 248:     _delay((unsigned long)((300)*(64000000/4000.0)));
  2193  0031CC  0E19               	movlw	25
  2194  0031CE  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  2195  0031D0  0E5A               	movlw	90
  2196  0031D2  6E29               	movwf	??_reverseTurnLeft90^0,c
  2197  0031D4  0EB2               	movlw	178
  2198  0031D6                     u4417:
  2199  0031D6  2EE8               	decfsz	wreg,f,c
  2200  0031D8  D7FE               	bra	u4417
  2201  0031DA  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  2202  0031DC  D7FC               	bra	u4417
  2203  0031DE  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  2204  0031E0  D7FA               	bra	u4417
  2205  0031E2                     
  2206                           ;dc_motor.c: 249:     turnLeft90(mL, mR);
  2207  0031E2  C025  F01D         	movff	reverseTurnLeft90@mL,turnLeft90@mL
  2208  0031E6  C026  F01E         	movff	reverseTurnLeft90@mL+1,turnLeft90@mL+1
  2209  0031EA  C027  F01F         	movff	reverseTurnLeft90@mR,turnLeft90@mR
  2210  0031EE  C028  F020         	movff	reverseTurnLeft90@mR+1,turnLeft90@mR+1
  2211  0031F2  ECFD  F013         	call	_turnLeft90	;wreg free
  2212                           
  2213                           ;dc_motor.c: 250:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2214  0031F6  0E09               	movlw	9
  2215  0031F8  6E2A               	movwf	(??_reverseTurnLeft90+1)^0,c
  2216  0031FA  0E1E               	movlw	30
  2217  0031FC  6E29               	movwf	??_reverseTurnLeft90^0,c
  2218  0031FE  0EE4               	movlw	228
  2219  003200                     u4427:
  2220  003200  2EE8               	decfsz	wreg,f,c
  2221  003202  D7FE               	bra	u4427
  2222  003204  2E29               	decfsz	??_reverseTurnLeft90^0,f,c
  2223  003206  D7FC               	bra	u4427
  2224  003208  2E2A               	decfsz	(??_reverseTurnLeft90+1)^0,f,c
  2225  00320A  D7FA               	bra	u4427
  2226  00320C  D000               	nop2	
  2227  00320E  0012               	return		;funcret
  2228  003210                     __end_of_reverseTurnLeft90:
  2229                           	callstack 0
  2230                           
  2231 ;; *************** function _read_colours *****************
  2232 ;; Defined at:
  2233 ;;		line 89 in file "color.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  m               2   11[COMRAM] PTR struct RGB_val
  2236 ;;		 -> main@RGBstruct(20), 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;		None
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2251 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2252 ;;Total ram usage:        2 bytes
  2253 ;; Hardware stack levels used: 1
  2254 ;; Hardware stack levels required when called: 4
  2255 ;; This function calls:
  2256 ;;		_color_read_Blue
  2257 ;;		_color_read_Clear
  2258 ;;		_color_read_Green
  2259 ;;		_color_read_Red
  2260 ;; This function is called by:
  2261 ;;		_main
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text4
  2266  003398                     __ptext4:
  2267                           	callstack 0
  2268  003398                     _read_colours:
  2269                           	callstack 26
  2270  003398                     
  2271                           ;color.c: 90:     (m->C) = color_read_Clear();
  2272  003398  EC78  F01A         	call	_color_read_Clear	;wreg free
  2273  00339C  EE20 F00C          	lfsr	2,12
  2274  0033A0  500C               	movf	read_colours@m^0,w,c
  2275  0033A2  26D9               	addwf	fsr2l,f,c
  2276  0033A4  500D               	movf	(read_colours@m+1)^0,w,c
  2277  0033A6  22DA               	addwfc	fsr2h,f,c
  2278  0033A8  C005  FFDE         	movff	?_color_read_Clear,postinc2
  2279  0033AC  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  2280                           
  2281                           ;color.c: 91:     (m->R) = color_read_Red();
  2282  0033B0  ECA0  F01A         	call	_color_read_Red	;wreg free
  2283  0033B4  EE20 F00E          	lfsr	2,14
  2284  0033B8  500C               	movf	read_colours@m^0,w,c
  2285  0033BA  26D9               	addwf	fsr2l,f,c
  2286  0033BC  500D               	movf	(read_colours@m+1)^0,w,c
  2287  0033BE  22DA               	addwfc	fsr2h,f,c
  2288  0033C0  C005  FFDE         	movff	?_color_read_Red,postinc2
  2289  0033C4  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  2290                           
  2291                           ;color.c: 92:     (m->G) = color_read_Green();
  2292  0033C8  ECC8  F01A         	call	_color_read_Green	;wreg free
  2293  0033CC  EE20 F010          	lfsr	2,16
  2294  0033D0  500C               	movf	read_colours@m^0,w,c
  2295  0033D2  26D9               	addwf	fsr2l,f,c
  2296  0033D4  500D               	movf	(read_colours@m+1)^0,w,c
  2297  0033D6  22DA               	addwfc	fsr2h,f,c
  2298  0033D8  C005  FFDE         	movff	?_color_read_Green,postinc2
  2299  0033DC  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  2300                           
  2301                           ;color.c: 93:     (m->B) = color_read_Blue();
  2302  0033E0  ECF0  F01A         	call	_color_read_Blue	;wreg free
  2303  0033E4  EE20 F012          	lfsr	2,18
  2304  0033E8  500C               	movf	read_colours@m^0,w,c
  2305  0033EA  26D9               	addwf	fsr2l,f,c
  2306  0033EC  500D               	movf	(read_colours@m+1)^0,w,c
  2307  0033EE  22DA               	addwfc	fsr2h,f,c
  2308  0033F0  C005  FFDE         	movff	?_color_read_Blue,postinc2
  2309  0033F4  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  2310  0033F8  0012               	return		;funcret
  2311  0033FA                     __end_of_read_colours:
  2312                           	callstack 0
  2313                           
  2314 ;; *************** function _color_read_Clear *****************
  2315 ;; Defined at:
  2316 ;;		line 35 in file "color.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;		None
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  tmp             2    9[COMRAM] unsigned int 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  2    4[COMRAM] unsigned int 
  2323 ;; Registers used:
  2324 ;;		wreg, status,2, status,0, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2331 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2332 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2333 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2334 ;;Total ram usage:        7 bytes
  2335 ;; Hardware stack levels used: 1
  2336 ;; Hardware stack levels required when called: 3
  2337 ;; This function calls:
  2338 ;;		_I2C_2_Master_Read
  2339 ;;		_I2C_2_Master_RepStart
  2340 ;;		_I2C_2_Master_Start
  2341 ;;		_I2C_2_Master_Stop
  2342 ;;		_I2C_2_Master_Write
  2343 ;; This function is called by:
  2344 ;;		_read_colours
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text5
  2349  0034F0                     __ptext5:
  2350                           	callstack 0
  2351  0034F0                     _color_read_Clear:
  2352                           	callstack 26
  2353  0034F0                     
  2354                           ;color.c: 37:  unsigned int tmp;;color.c: 38:     I2C_2_Master_Start();
  2355  0034F0  EC48  F01C         	call	_I2C_2_Master_Start	;wreg free
  2356                           
  2357                           ;color.c: 39:     I2C_2_Master_Write(0x52 | 0x00);
  2358  0034F4  0E52               	movlw	82
  2359  0034F6  EC37  F01C         	call	_I2C_2_Master_Write
  2360                           
  2361                           ;color.c: 40:  I2C_2_Master_Write(0xA0 | 0x14);
  2362  0034FA  0EB4               	movlw	180
  2363  0034FC  EC37  F01C         	call	_I2C_2_Master_Write
  2364                           
  2365                           ;color.c: 41:  I2C_2_Master_RepStart();
  2366  003500  EC4D  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  2367                           
  2368                           ;color.c: 42:  I2C_2_Master_Write(0x52 | 0x01);
  2369  003504  0E53               	movlw	83
  2370  003506  EC37  F01C         	call	_I2C_2_Master_Write
  2371                           
  2372                           ;color.c: 43:  tmp=I2C_2_Master_Read(1);
  2373  00350A  0E01               	movlw	1
  2374  00350C  EC81  F01B         	call	_I2C_2_Master_Read
  2375  003510  6E07               	movwf	??_color_read_Clear^0,c
  2376  003512  5007               	movf	??_color_read_Clear^0,w,c
  2377  003514  6E0A               	movwf	color_read_Clear@tmp^0,c
  2378  003516  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2379                           
  2380                           ;color.c: 44:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2381  003518  0E00               	movlw	0
  2382  00351A  EC81  F01B         	call	_I2C_2_Master_Read
  2383  00351E  6E07               	movwf	??_color_read_Clear^0,c
  2384  003520  5007               	movf	??_color_read_Clear^0,w,c
  2385  003522  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2386  003524  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2387  003526  500A               	movf	color_read_Clear@tmp^0,w,c
  2388  003528  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2389  00352A  6E0A               	movwf	color_read_Clear@tmp^0,c
  2390  00352C  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2391  00352E  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2392  003530  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2393                           
  2394                           ;color.c: 45:     I2C_2_Master_Stop();
  2395  003532  EC43  F01C         	call	_I2C_2_Master_Stop	;wreg free
  2396  003536                     
  2397                           ;color.c: 46:     return tmp;
  2398  003536  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2399  00353A  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2400  00353E  0012               	return		;funcret
  2401  003540                     __end_of_color_read_Clear:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _initUSART4 *****************
  2405 ;; Defined at:
  2406 ;;		line 4 in file "serial.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2424 ;;Total ram usage:        0 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 1
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_main
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text6
  2435  003812                     __ptext6:
  2436                           	callstack 0
  2437  003812                     _initUSART4:
  2438                           	callstack 29
  2439  003812                     
  2440                           ;serial.c: 8:     RC0PPS = 0x12;
  2441  003812  0E12               	movlw	18
  2442  003814  010E               	movlb	14	; () banked
  2443  003816  6F62               	movwf	98,b	;volatile
  2444                           
  2445                           ;serial.c: 9:     RX4PPS = 0x11;
  2446  003818  0E11               	movlw	17
  2447  00381A  6F15               	movwf	21,b	;volatile
  2448  00381C                     
  2449                           ; BSR set to: 14
  2450                           ;serial.c: 10:     TRISCbits.TRISC1=1;
  2451  00381C  8283               	bsf	131,1,c	;volatile
  2452  00381E                     
  2453                           ; BSR set to: 14
  2454                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  2455  00381E  97E9               	bcf	233,3,b	;volatile
  2456  003820                     
  2457                           ; BSR set to: 14
  2458                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  2459  003820  95E8               	bcf	232,2,b	;volatile
  2460                           
  2461                           ;serial.c: 14:     SP4BRGL = 51;
  2462  003822  0E33               	movlw	51
  2463  003824  6FE5               	movwf	229,b	;volatile
  2464                           
  2465                           ;serial.c: 15:     SP4BRGH = 0;
  2466  003826  0E00               	movlw	0
  2467  003828  6FE6               	movwf	230,b	;volatile
  2468  00382A                     
  2469                           ; BSR set to: 14
  2470                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  2471  00382A  89E7               	bsf	231,4,b	;volatile
  2472  00382C                     
  2473                           ; BSR set to: 14
  2474                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  2475  00382C  8BE8               	bsf	232,5,b	;volatile
  2476  00382E                     
  2477                           ; BSR set to: 14
  2478                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  2479  00382E  8FE7               	bsf	231,7,b	;volatile
  2480  003830                     
  2481                           ; BSR set to: 14
  2482  003830  0012               	return		;funcret
  2483  003832                     __end_of_initUSART4:
  2484                           	callstack 0
  2485                           
  2486 ;; *************** function _initDCmotorsPWM *****************
  2487 ;; Defined at:
  2488 ;;		line 5 in file "dc_motor.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  PWMperiod       2    0[COMRAM] int 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		wreg, status,2
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2505 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2506 ;;Total ram usage:        2 bytes
  2507 ;; Hardware stack levels used: 1
  2508 ;; Hardware stack levels required when called: 1
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_main
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text7
  2517  0036C0                     __ptext7:
  2518                           	callstack 0
  2519  0036C0                     _initDCmotorsPWM:
  2520                           	callstack 29
  2521  0036C0                     
  2522                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  2523  0036C0  9485               	bcf	133,2,c	;volatile
  2524                           
  2525                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  2526  0036C2  9E83               	bcf	131,7,c	;volatile
  2527                           
  2528                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  2529  0036C4  9885               	bcf	133,4,c	;volatile
  2530                           
  2531                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
  2532  0036C6  9C87               	bcf	135,6,c	;volatile
  2533                           
  2534                           ;dc_motor.c: 11:     LATEbits.LATE2=0;
  2535  0036C8  947D               	bcf	125,2,c	;volatile
  2536                           
  2537                           ;dc_motor.c: 12:     LATCbits.LATC7=0;
  2538  0036CA  9E7B               	bcf	123,7,c	;volatile
  2539                           
  2540                           ;dc_motor.c: 13:     LATEbits.LATE4=0;
  2541  0036CC  987D               	bcf	125,4,c	;volatile
  2542                           
  2543                           ;dc_motor.c: 14:     LATGbits.LATG6=0;
  2544  0036CE  9C7F               	bcf	127,6,c	;volatile
  2545  0036D0                     
  2546                           ;dc_motor.c: 17:     T2CONbits.CKPS= 0b100;
  2547  0036D0  50BD               	movf	189,w,c	;volatile
  2548  0036D2  0B8F               	andlw	-113
  2549  0036D4  0940               	iorlw	64
  2550  0036D6  6EBD               	movwf	189,c	;volatile
  2551                           
  2552                           ;dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  2553  0036D8  0EE0               	movlw	-32
  2554  0036DA  16BE               	andwf	190,f,c	;volatile
  2555                           
  2556                           ;dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  2557  0036DC  50BF               	movf	191,w,c	;volatile
  2558  0036DE  0BF0               	andlw	-16
  2559  0036E0  0901               	iorlw	1
  2560  0036E2  6EBF               	movwf	191,c	;volatile
  2561                           
  2562                           ;dc_motor.c: 22:     T2PR= 99;
  2563  0036E4  0E63               	movlw	99
  2564  0036E6  6EBC               	movwf	188,c	;volatile
  2565  0036E8                     
  2566                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  2567  0036E8  8EBD               	bsf	189,7,c	;volatile
  2568                           
  2569                           ;dc_motor.c: 25:     RE2PPS=0x0A;
  2570  0036EA  0E0A               	movlw	10
  2571  0036EC  010E               	movlb	14	; () banked
  2572  0036EE  6F74               	movwf	116,b	;volatile
  2573                           
  2574                           ;dc_motor.c: 26:     RC7PPS=0x0B;
  2575  0036F0  0E0B               	movlw	11
  2576  0036F2  6F69               	movwf	105,b	;volatile
  2577                           
  2578                           ;dc_motor.c: 28:     PWM6DCH=0;
  2579  0036F4  0E00               	movlw	0
  2580  0036F6  6EA3               	movwf	163,c	;volatile
  2581                           
  2582                           ;dc_motor.c: 29:     PWM7DCH=0;
  2583  0036F8  0E00               	movlw	0
  2584  0036FA  6EA0               	movwf	160,c	;volatile
  2585  0036FC                     
  2586                           ; BSR set to: 14
  2587                           ;dc_motor.c: 31:     PWM6CONbits.EN = 1;
  2588  0036FC  8EA4               	bsf	164,7,c	;volatile
  2589  0036FE                     
  2590                           ; BSR set to: 14
  2591                           ;dc_motor.c: 32:     PWM7CONbits.EN = 1;
  2592  0036FE  8EA1               	bsf	161,7,c	;volatile
  2593  003700                     
  2594                           ; BSR set to: 14
  2595  003700  0012               	return		;funcret
  2596  003702                     __end_of_initDCmotorsPWM:
  2597                           	callstack 0
  2598                           
  2599 ;; *************** function _determine_color_new *****************
  2600 ;; Defined at:
  2601 ;;		line 113 in file "color.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  m               2   90[COMRAM] PTR struct RGB_val
  2604 ;;		 -> main@RGBstruct(20), 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  RelB            4   30[BANK0 ] float 
  2607 ;;  RelG            4   26[BANK0 ] float 
  2608 ;;  RelR            4   22[BANK0 ] float 
  2609 ;;  lumin           2   20[BANK0 ] unsigned int 
  2610 ;;  out             2   18[BANK0 ] unsigned int 
  2611 ;;  BlueRatio       2   16[BANK0 ] unsigned int 
  2612 ;;  GreenRatio      2   14[BANK0 ] unsigned int 
  2613 ;;  RedRatio        2   12[BANK0 ] unsigned int 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  2   90[COMRAM] unsigned int 
  2616 ;; Registers used:
  2617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2624 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2625 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2626 ;;      Totals:         2      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2627 ;;Total ram usage:       36 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; Hardware stack levels required when called: 3
  2630 ;; This function calls:
  2631 ;;		___fladd
  2632 ;;		___fldiv
  2633 ;;		___flmul
  2634 ;;		___fltol
  2635 ;;		___xxtofl
  2636 ;;		_isbtw
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text8
  2643  00002C                     __ptext8:
  2644                           	callstack 0
  2645  00002C                     _determine_color_new:
  2646                           	callstack 27
  2647  00002C                     
  2648                           ;color.c: 114:     unsigned int RedRatio, GreenRatio, BlueRatio;;color.c: 115:     float
      +                           RelR, RelG, RelB;;color.c: 116:     unsigned int out = 9;
  2649  00002C  0E00               	movlw	0
  2650  00002E  0100               	movlb	0	; () banked
  2651  000030  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  2652  000032  0E09               	movlw	9
  2653  000034  6F72               	movwf	determine_color_new@out& (0+255),b
  2654  000036                     
  2655                           ; BSR set to: 0
  2656                           ;color.c: 120:     unsigned int lumin = (0.2126*(m->R)) + (0.7152*(m->G)) + (0.0722*(m->
      +                          B));
  2657  000036  0E59               	movlw	89
  2658  000038  6E2C               	movwf	___flmul@a^0,c
  2659  00003A  0E17               	movlw	23
  2660  00003C  6E2D               	movwf	(___flmul@a+1)^0,c
  2661  00003E  0E37               	movlw	55
  2662  000040  6E2E               	movwf	(___flmul@a+2)^0,c
  2663  000042  0E3F               	movlw	63
  2664  000044  6E2F               	movwf	(___flmul@a+3)^0,c
  2665  000046  EE20 F010          	lfsr	2,16
  2666  00004A  505B               	movf	determine_color_new@m^0,w,c
  2667  00004C  26D9               	addwf	fsr2l,f,c
  2668  00004E  505C               	movf	(determine_color_new@m+1)^0,w,c
  2669  000050  22DA               	addwfc	fsr2h,f,c
  2670  000052  CFDE F060          	movff	postinc2,??_determine_color_new
  2671  000056  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2672  00005A  C060  F001         	movff	??_determine_color_new,___xxtofl@val
  2673  00005E  C061  F002         	movff	??_determine_color_new+1,___xxtofl@val+1
  2674  000062  6A03               	clrf	(___xxtofl@val+2)^0,c
  2675  000064  6A04               	clrf	(___xxtofl@val+3)^0,c
  2676  000066  0E00               	movlw	0
  2677  000068  EC23  F013         	call	___xxtofl
  2678  00006C  C001  F028         	movff	?___xxtofl,___flmul@b
  2679  000070  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2680  000074  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2681  000078  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2682  00007C  EC57  F00E         	call	___flmul	;wreg free
  2683  000080  C028  F045         	movff	?___flmul,___fladd@a
  2684  000084  C029  F046         	movff	?___flmul+1,___fladd@a+1
  2685  000088  C02A  F047         	movff	?___flmul+2,___fladd@a+2
  2686  00008C  C02B  F048         	movff	?___flmul+3,___fladd@a+3
  2687  000090  0ED0               	movlw	208
  2688  000092  6E2C               	movwf	___flmul@a^0,c
  2689  000094  0EB3               	movlw	179
  2690  000096  6E2D               	movwf	(___flmul@a+1)^0,c
  2691  000098  0E59               	movlw	89
  2692  00009A  6E2E               	movwf	(___flmul@a+2)^0,c
  2693  00009C  0E3E               	movlw	62
  2694  00009E  6E2F               	movwf	(___flmul@a+3)^0,c
  2695  0000A0  EE20 F00E          	lfsr	2,14
  2696  0000A4  505B               	movf	determine_color_new@m^0,w,c
  2697  0000A6  26D9               	addwf	fsr2l,f,c
  2698  0000A8  505C               	movf	(determine_color_new@m+1)^0,w,c
  2699  0000AA  22DA               	addwfc	fsr2h,f,c
  2700  0000AC  CFDE F062          	movff	postinc2,??_determine_color_new+2
  2701  0000B0  CFDD F063          	movff	postdec2,??_determine_color_new+3
  2702  0000B4  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  2703  0000B8  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  2704  0000BC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2705  0000BE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2706  0000C0  0E00               	movlw	0
  2707  0000C2  EC23  F013         	call	___xxtofl
  2708  0000C6  C001  F028         	movff	?___xxtofl,___flmul@b
  2709  0000CA  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2710  0000CE  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2711  0000D2  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2712  0000D6  EC57  F00E         	call	___flmul	;wreg free
  2713  0000DA  C028  F041         	movff	?___flmul,___fladd@b
  2714  0000DE  C029  F042         	movff	?___flmul+1,___fladd@b+1
  2715  0000E2  C02A  F043         	movff	?___flmul+2,___fladd@b+2
  2716  0000E6  C02B  F044         	movff	?___flmul+3,___fladd@b+3
  2717  0000EA  ECDE  F009         	call	___fladd	;wreg free
  2718  0000EE  C041  F068         	movff	?___fladd,_determine_color_new$2624
  2719  0000F2  C042  F069         	movff	?___fladd+1,_determine_color_new$2624+1
  2720  0000F6  C043  F06A         	movff	?___fladd+2,_determine_color_new$2624+2
  2721  0000FA  C044  F06B         	movff	?___fladd+3,_determine_color_new$2624+3
  2722  0000FE                     
  2723                           ;color.c: 120:     unsigned int lumin = (0.2126*(m->R)) + (0.7152*(m->G)) + (0.0722*(m->
      +                          B));
  2724  0000FE  0E98               	movlw	152
  2725  000100  6E2C               	movwf	___flmul@a^0,c
  2726  000102  0EDD               	movlw	221
  2727  000104  6E2D               	movwf	(___flmul@a+1)^0,c
  2728  000106  0E93               	movlw	147
  2729  000108  6E2E               	movwf	(___flmul@a+2)^0,c
  2730  00010A  0E3D               	movlw	61
  2731  00010C  6E2F               	movwf	(___flmul@a+3)^0,c
  2732  00010E  EE20 F012          	lfsr	2,18
  2733  000112  505B               	movf	determine_color_new@m^0,w,c
  2734  000114  26D9               	addwf	fsr2l,f,c
  2735  000116  505C               	movf	(determine_color_new@m+1)^0,w,c
  2736  000118  22DA               	addwfc	fsr2h,f,c
  2737  00011A  CFDE F060          	movff	postinc2,??_determine_color_new
  2738  00011E  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2739  000122  C060  F001         	movff	??_determine_color_new,___xxtofl@val
  2740  000126  C061  F002         	movff	??_determine_color_new+1,___xxtofl@val+1
  2741  00012A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2742  00012C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2743  00012E  0E00               	movlw	0
  2744  000130  EC23  F013         	call	___xxtofl
  2745  000134  C001  F028         	movff	?___xxtofl,___flmul@b
  2746  000138  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2747  00013C  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2748  000140  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2749  000144  EC57  F00E         	call	___flmul	;wreg free
  2750  000148  C028  F045         	movff	?___flmul,___fladd@a
  2751  00014C  C029  F046         	movff	?___flmul+1,___fladd@a+1
  2752  000150  C02A  F047         	movff	?___flmul+2,___fladd@a+2
  2753  000154  C02B  F048         	movff	?___flmul+3,___fladd@a+3
  2754  000158  C068  F041         	movff	_determine_color_new$2624,___fladd@b
  2755  00015C  C069  F042         	movff	_determine_color_new$2624+1,___fladd@b+1
  2756  000160  C06A  F043         	movff	_determine_color_new$2624+2,___fladd@b+2
  2757  000164  C06B  F044         	movff	_determine_color_new$2624+3,___fladd@b+3
  2758  000168  ECDE  F009         	call	___fladd	;wreg free
  2759  00016C  C041  F051         	movff	?___fladd,___fltol@f1
  2760  000170  C042  F052         	movff	?___fladd+1,___fltol@f1+1
  2761  000174  C043  F053         	movff	?___fladd+2,___fltol@f1+2
  2762  000178  C044  F054         	movff	?___fladd+3,___fltol@f1+3
  2763  00017C  EC17  F017         	call	___fltol	;wreg free
  2764  000180  C051  F074         	movff	?___fltol,determine_color_new@lumin
  2765  000184  C052  F075         	movff	?___fltol+1,determine_color_new@lumin+1
  2766  000188                     
  2767                           ;color.c: 123:     RedRatio = ((float)(m->R - m->blackR) / (float)(m->whiteR - m->blackR
      +                          ))*10000;
  2768  000188  0E00               	movlw	0
  2769  00018A  6E2C               	movwf	___flmul@a^0,c
  2770  00018C  0E40               	movlw	64
  2771  00018E  6E2D               	movwf	(___flmul@a+1)^0,c
  2772  000190  0E1C               	movlw	28
  2773  000192  6E2E               	movwf	(___flmul@a+2)^0,c
  2774  000194  0E46               	movlw	70
  2775  000196  6E2F               	movwf	(___flmul@a+3)^0,c
  2776  000198  C05B  FFD9         	movff	determine_color_new@m,fsr2l
  2777  00019C  C05C  FFDA         	movff	determine_color_new@m+1,fsr2h
  2778  0001A0  CFDE F060          	movff	postinc2,??_determine_color_new
  2779  0001A4  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2780  0001A8  EE20 F006          	lfsr	2,6
  2781  0001AC  505B               	movf	determine_color_new@m^0,w,c
  2782  0001AE  26D9               	addwf	fsr2l,f,c
  2783  0001B0  505C               	movf	(determine_color_new@m+1)^0,w,c
  2784  0001B2  22DA               	addwfc	fsr2h,f,c
  2785  0001B4  CFDE F062          	movff	postinc2,??_determine_color_new+2
  2786  0001B8  CFDD F063          	movff	postdec2,??_determine_color_new+3
  2787  0001BC  0100               	movlb	0	; () banked
  2788  0001BE  5160               	movf	??_determine_color_new& (0+255),w,b
  2789  0001C0  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  2790  0001C2  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  2791  0001C4  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  2792  0001C6  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  2793  0001CA  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  2794  0001CE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2795  0001D0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2796  0001D2  0E00               	movlw	0
  2797  0001D4  EC23  F013         	call	___xxtofl
  2798  0001D8  C001  F013         	movff	?___xxtofl,___fldiv@a
  2799  0001DC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2800  0001E0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2801  0001E4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2802  0001E8  C05B  FFD9         	movff	determine_color_new@m,fsr2l
  2803  0001EC  C05C  FFDA         	movff	determine_color_new@m+1,fsr2h
  2804  0001F0  CFDE F064          	movff	postinc2,??_determine_color_new+4
  2805  0001F4  CFDD F065          	movff	postdec2,??_determine_color_new+5
  2806  0001F8  EE20 F00E          	lfsr	2,14
  2807  0001FC  505B               	movf	determine_color_new@m^0,w,c
  2808  0001FE  26D9               	addwf	fsr2l,f,c
  2809  000200  505C               	movf	(determine_color_new@m+1)^0,w,c
  2810  000202  22DA               	addwfc	fsr2h,f,c
  2811  000204  CFDE F066          	movff	postinc2,??_determine_color_new+6
  2812  000208  CFDD F067          	movff	postdec2,??_determine_color_new+7
  2813  00020C  0100               	movlb	0	; () banked
  2814  00020E  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  2815  000210  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  2816  000212  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  2817  000214  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  2818  000216  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  2819  00021A  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  2820  00021E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2821  000220  6A04               	clrf	(___xxtofl@val+3)^0,c
  2822  000222  0E00               	movlw	0
  2823  000224  EC23  F013         	call	___xxtofl
  2824  000228  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2825  00022C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2826  000230  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2827  000234  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2828  000238  EC6C  F010         	call	___fldiv	;wreg free
  2829  00023C  C00F  F028         	movff	?___fldiv,___flmul@b
  2830  000240  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2831  000244  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2832  000248  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2833  00024C  EC57  F00E         	call	___flmul	;wreg free
  2834  000250  C028  F051         	movff	?___flmul,___fltol@f1
  2835  000254  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  2836  000258  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  2837  00025C  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  2838  000260  EC17  F017         	call	___fltol	;wreg free
  2839  000264  C051  F06C         	movff	?___fltol,determine_color_new@RedRatio
  2840  000268  C052  F06D         	movff	?___fltol+1,determine_color_new@RedRatio+1
  2841  00026C                     
  2842                           ;color.c: 124:     GreenRatio = ((float)(m->G - m->blackG) / (float)(m->whiteG - m->blac
      +                          kG))*10000;
  2843  00026C  0E00               	movlw	0
  2844  00026E  6E2C               	movwf	___flmul@a^0,c
  2845  000270  0E40               	movlw	64
  2846  000272  6E2D               	movwf	(___flmul@a+1)^0,c
  2847  000274  0E1C               	movlw	28
  2848  000276  6E2E               	movwf	(___flmul@a+2)^0,c
  2849  000278  0E46               	movlw	70
  2850  00027A  6E2F               	movwf	(___flmul@a+3)^0,c
  2851  00027C  EE20 F002          	lfsr	2,2
  2852  000280  505B               	movf	determine_color_new@m^0,w,c
  2853  000282  26D9               	addwf	fsr2l,f,c
  2854  000284  505C               	movf	(determine_color_new@m+1)^0,w,c
  2855  000286  22DA               	addwfc	fsr2h,f,c
  2856  000288  CFDE F060          	movff	postinc2,??_determine_color_new
  2857  00028C  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2858  000290  EE20 F008          	lfsr	2,8
  2859  000294  505B               	movf	determine_color_new@m^0,w,c
  2860  000296  26D9               	addwf	fsr2l,f,c
  2861  000298  505C               	movf	(determine_color_new@m+1)^0,w,c
  2862  00029A  22DA               	addwfc	fsr2h,f,c
  2863  00029C  CFDE F062          	movff	postinc2,??_determine_color_new+2
  2864  0002A0  CFDD F063          	movff	postdec2,??_determine_color_new+3
  2865  0002A4  0100               	movlb	0	; () banked
  2866  0002A6  5160               	movf	??_determine_color_new& (0+255),w,b
  2867  0002A8  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  2868  0002AA  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  2869  0002AC  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  2870  0002AE  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  2871  0002B2  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  2872  0002B6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2873  0002B8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2874  0002BA  0E00               	movlw	0
  2875  0002BC  EC23  F013         	call	___xxtofl
  2876  0002C0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2877  0002C4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2878  0002C8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2879  0002CC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2880  0002D0  EE20 F002          	lfsr	2,2
  2881  0002D4  505B               	movf	determine_color_new@m^0,w,c
  2882  0002D6  26D9               	addwf	fsr2l,f,c
  2883  0002D8  505C               	movf	(determine_color_new@m+1)^0,w,c
  2884  0002DA  22DA               	addwfc	fsr2h,f,c
  2885  0002DC  CFDE F064          	movff	postinc2,??_determine_color_new+4
  2886  0002E0  CFDD F065          	movff	postdec2,??_determine_color_new+5
  2887  0002E4  EE20 F010          	lfsr	2,16
  2888  0002E8  505B               	movf	determine_color_new@m^0,w,c
  2889  0002EA  26D9               	addwf	fsr2l,f,c
  2890  0002EC  505C               	movf	(determine_color_new@m+1)^0,w,c
  2891  0002EE  22DA               	addwfc	fsr2h,f,c
  2892  0002F0  CFDE F066          	movff	postinc2,??_determine_color_new+6
  2893  0002F4  CFDD F067          	movff	postdec2,??_determine_color_new+7
  2894  0002F8  0100               	movlb	0	; () banked
  2895  0002FA  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  2896  0002FC  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  2897  0002FE  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  2898  000300  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  2899  000302  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  2900  000306  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  2901  00030A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2902  00030C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2903  00030E  0E00               	movlw	0
  2904  000310  EC23  F013         	call	___xxtofl
  2905  000314  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2906  000318  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2907  00031C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2908  000320  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2909  000324  EC6C  F010         	call	___fldiv	;wreg free
  2910  000328  C00F  F028         	movff	?___fldiv,___flmul@b
  2911  00032C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2912  000330  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2913  000334  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2914  000338  EC57  F00E         	call	___flmul	;wreg free
  2915  00033C  C028  F051         	movff	?___flmul,___fltol@f1
  2916  000340  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  2917  000344  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  2918  000348  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  2919  00034C  EC17  F017         	call	___fltol	;wreg free
  2920  000350  C051  F06E         	movff	?___fltol,determine_color_new@GreenRatio
  2921  000354  C052  F06F         	movff	?___fltol+1,determine_color_new@GreenRatio+1
  2922  000358                     
  2923                           ;color.c: 125:     BlueRatio = ((float)(m->B - m->blackB) / (float)(m->whiteB - m->black
      +                          B))*10000;
  2924  000358  0E00               	movlw	0
  2925  00035A  6E2C               	movwf	___flmul@a^0,c
  2926  00035C  0E40               	movlw	64
  2927  00035E  6E2D               	movwf	(___flmul@a+1)^0,c
  2928  000360  0E1C               	movlw	28
  2929  000362  6E2E               	movwf	(___flmul@a+2)^0,c
  2930  000364  0E46               	movlw	70
  2931  000366  6E2F               	movwf	(___flmul@a+3)^0,c
  2932  000368  EE20 F004          	lfsr	2,4
  2933  00036C  505B               	movf	determine_color_new@m^0,w,c
  2934  00036E  26D9               	addwf	fsr2l,f,c
  2935  000370  505C               	movf	(determine_color_new@m+1)^0,w,c
  2936  000372  22DA               	addwfc	fsr2h,f,c
  2937  000374  CFDE F060          	movff	postinc2,??_determine_color_new
  2938  000378  CFDD F061          	movff	postdec2,??_determine_color_new+1
  2939  00037C  EE20 F00A          	lfsr	2,10
  2940  000380  505B               	movf	determine_color_new@m^0,w,c
  2941  000382  26D9               	addwf	fsr2l,f,c
  2942  000384  505C               	movf	(determine_color_new@m+1)^0,w,c
  2943  000386  22DA               	addwfc	fsr2h,f,c
  2944  000388  CFDE F062          	movff	postinc2,??_determine_color_new+2
  2945  00038C  CFDD F063          	movff	postdec2,??_determine_color_new+3
  2946  000390  0100               	movlb	0	; () banked
  2947  000392  5160               	movf	??_determine_color_new& (0+255),w,b
  2948  000394  5F62               	subwf	(??_determine_color_new+2)& (0+255),f,b
  2949  000396  5161               	movf	(??_determine_color_new+1)& (0+255),w,b
  2950  000398  5B63               	subwfb	(??_determine_color_new+3)& (0+255),f,b
  2951  00039A  C062  F001         	movff	??_determine_color_new+2,___xxtofl@val
  2952  00039E  C063  F002         	movff	??_determine_color_new+3,___xxtofl@val+1
  2953  0003A2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2954  0003A4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2955  0003A6  0E00               	movlw	0
  2956  0003A8  EC23  F013         	call	___xxtofl
  2957  0003AC  C001  F013         	movff	?___xxtofl,___fldiv@a
  2958  0003B0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2959  0003B4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2960  0003B8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2961  0003BC  EE20 F004          	lfsr	2,4
  2962  0003C0  505B               	movf	determine_color_new@m^0,w,c
  2963  0003C2  26D9               	addwf	fsr2l,f,c
  2964  0003C4  505C               	movf	(determine_color_new@m+1)^0,w,c
  2965  0003C6  22DA               	addwfc	fsr2h,f,c
  2966  0003C8  CFDE F064          	movff	postinc2,??_determine_color_new+4
  2967  0003CC  CFDD F065          	movff	postdec2,??_determine_color_new+5
  2968  0003D0  EE20 F012          	lfsr	2,18
  2969  0003D4  505B               	movf	determine_color_new@m^0,w,c
  2970  0003D6  26D9               	addwf	fsr2l,f,c
  2971  0003D8  505C               	movf	(determine_color_new@m+1)^0,w,c
  2972  0003DA  22DA               	addwfc	fsr2h,f,c
  2973  0003DC  CFDE F066          	movff	postinc2,??_determine_color_new+6
  2974  0003E0  CFDD F067          	movff	postdec2,??_determine_color_new+7
  2975  0003E4  0100               	movlb	0	; () banked
  2976  0003E6  5164               	movf	(??_determine_color_new+4)& (0+255),w,b
  2977  0003E8  5F66               	subwf	(??_determine_color_new+6)& (0+255),f,b
  2978  0003EA  5165               	movf	(??_determine_color_new+5)& (0+255),w,b
  2979  0003EC  5B67               	subwfb	(??_determine_color_new+7)& (0+255),f,b
  2980  0003EE  C066  F001         	movff	??_determine_color_new+6,___xxtofl@val
  2981  0003F2  C067  F002         	movff	??_determine_color_new+7,___xxtofl@val+1
  2982  0003F6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2983  0003F8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2984  0003FA  0E00               	movlw	0
  2985  0003FC  EC23  F013         	call	___xxtofl
  2986  000400  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2987  000404  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2988  000408  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2989  00040C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2990  000410  EC6C  F010         	call	___fldiv	;wreg free
  2991  000414  C00F  F028         	movff	?___fldiv,___flmul@b
  2992  000418  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2993  00041C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2994  000420  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2995  000424  EC57  F00E         	call	___flmul	;wreg free
  2996  000428  C028  F051         	movff	?___flmul,___fltol@f1
  2997  00042C  C029  F052         	movff	?___flmul+1,___fltol@f1+1
  2998  000430  C02A  F053         	movff	?___flmul+2,___fltol@f1+2
  2999  000434  C02B  F054         	movff	?___flmul+3,___fltol@f1+3
  3000  000438  EC17  F017         	call	___fltol	;wreg free
  3001  00043C  C051  F070         	movff	?___fltol,determine_color_new@BlueRatio
  3002  000440  C052  F071         	movff	?___fltol+1,determine_color_new@BlueRatio+1
  3003  000444                     
  3004                           ;color.c: 128:     RelR = (float)RedRatio / (float)GreenRatio;
  3005  000444  C06C  F001         	movff	determine_color_new@RedRatio,___xxtofl@val
  3006  000448  C06D  F002         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  3007  00044C  6A03               	clrf	(___xxtofl@val+2)^0,c
  3008  00044E  6A04               	clrf	(___xxtofl@val+3)^0,c
  3009  000450  0E00               	movlw	0
  3010  000452  EC23  F013         	call	___xxtofl
  3011  000456  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3012  00045A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3013  00045E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3014  000462  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3015  000466  C06E  F001         	movff	determine_color_new@GreenRatio,___xxtofl@val
  3016  00046A  C06F  F002         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  3017  00046E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3018  000470  6A04               	clrf	(___xxtofl@val+3)^0,c
  3019  000472  0E00               	movlw	0
  3020  000474  EC23  F013         	call	___xxtofl
  3021  000478  C001  F013         	movff	?___xxtofl,___fldiv@a
  3022  00047C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3023  000480  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3024  000484  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3025  000488  EC6C  F010         	call	___fldiv	;wreg free
  3026  00048C  C00F  F076         	movff	?___fldiv,determine_color_new@RelR
  3027  000490  C010  F077         	movff	?___fldiv+1,determine_color_new@RelR+1
  3028  000494  C011  F078         	movff	?___fldiv+2,determine_color_new@RelR+2
  3029  000498  C012  F079         	movff	?___fldiv+3,determine_color_new@RelR+3
  3030  00049C                     
  3031                           ;color.c: 129:     RelG = (float)RedRatio / (float)BlueRatio;
  3032  00049C  C06C  F001         	movff	determine_color_new@RedRatio,___xxtofl@val
  3033  0004A0  C06D  F002         	movff	determine_color_new@RedRatio+1,___xxtofl@val+1
  3034  0004A4  6A03               	clrf	(___xxtofl@val+2)^0,c
  3035  0004A6  6A04               	clrf	(___xxtofl@val+3)^0,c
  3036  0004A8  0E00               	movlw	0
  3037  0004AA  EC23  F013         	call	___xxtofl
  3038  0004AE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3039  0004B2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3040  0004B6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3041  0004BA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3042  0004BE  C070  F001         	movff	determine_color_new@BlueRatio,___xxtofl@val
  3043  0004C2  C071  F002         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  3044  0004C6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3045  0004C8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3046  0004CA  0E00               	movlw	0
  3047  0004CC  EC23  F013         	call	___xxtofl
  3048  0004D0  C001  F013         	movff	?___xxtofl,___fldiv@a
  3049  0004D4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3050  0004D8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3051  0004DC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3052  0004E0  EC6C  F010         	call	___fldiv	;wreg free
  3053  0004E4  C00F  F07A         	movff	?___fldiv,determine_color_new@RelG
  3054  0004E8  C010  F07B         	movff	?___fldiv+1,determine_color_new@RelG+1
  3055  0004EC  C011  F07C         	movff	?___fldiv+2,determine_color_new@RelG+2
  3056  0004F0  C012  F07D         	movff	?___fldiv+3,determine_color_new@RelG+3
  3057  0004F4                     
  3058                           ;color.c: 130:     RelB = (float)BlueRatio / (float)GreenRatio;
  3059  0004F4  C070  F001         	movff	determine_color_new@BlueRatio,___xxtofl@val
  3060  0004F8  C071  F002         	movff	determine_color_new@BlueRatio+1,___xxtofl@val+1
  3061  0004FC  6A03               	clrf	(___xxtofl@val+2)^0,c
  3062  0004FE  6A04               	clrf	(___xxtofl@val+3)^0,c
  3063  000500  0E00               	movlw	0
  3064  000502  EC23  F013         	call	___xxtofl
  3065  000506  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3066  00050A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3067  00050E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3068  000512  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3069  000516  C06E  F001         	movff	determine_color_new@GreenRatio,___xxtofl@val
  3070  00051A  C06F  F002         	movff	determine_color_new@GreenRatio+1,___xxtofl@val+1
  3071  00051E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3072  000520  6A04               	clrf	(___xxtofl@val+3)^0,c
  3073  000522  0E00               	movlw	0
  3074  000524  EC23  F013         	call	___xxtofl
  3075  000528  C001  F013         	movff	?___xxtofl,___fldiv@a
  3076  00052C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3077  000530  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3078  000534  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3079  000538  EC6C  F010         	call	___fldiv	;wreg free
  3080  00053C  C00F  F07E         	movff	?___fldiv,determine_color_new@RelB
  3081  000540  C010  F07F         	movff	?___fldiv+1,determine_color_new@RelB+1
  3082  000544  C011  F080         	movff	?___fldiv+2,determine_color_new@RelB+2
  3083  000548  C012  F081         	movff	?___fldiv+3,determine_color_new@RelB+3
  3084  00054C                     
  3085                           ;color.c: 133:     if (RelR < 0) {RelR = 0;}
  3086  00054C  0100               	movlb	0	; () banked
  3087  00054E  BF79               	btfsc	(determine_color_new@RelR+3)& (0+255),7,b
  3088  000550  EFAE  F002         	goto	u3390
  3089  000554  EFAC  F002         	goto	u3391
  3090  000558                     u3391:
  3091  000558  EFB6  F002         	goto	l3695
  3092  00055C                     u3390:
  3093  00055C                     
  3094                           ; BSR set to: 0
  3095  00055C  0E00               	movlw	0
  3096  00055E  6F76               	movwf	determine_color_new@RelR& (0+255),b
  3097  000560  0E00               	movlw	0
  3098  000562  6F77               	movwf	(determine_color_new@RelR+1)& (0+255),b
  3099  000564  0E00               	movlw	0
  3100  000566  6F78               	movwf	(determine_color_new@RelR+2)& (0+255),b
  3101  000568  0E00               	movlw	0
  3102  00056A  6F79               	movwf	(determine_color_new@RelR+3)& (0+255),b
  3103  00056C                     l3695:
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;color.c: 134:     if (RelG < 0) {RelG = 0;}
  3107  00056C  BF7D               	btfsc	(determine_color_new@RelG+3)& (0+255),7,b
  3108  00056E  EFBD  F002         	goto	u3400
  3109  000572  EFBB  F002         	goto	u3401
  3110  000576                     u3401:
  3111  000576  EFC5  F002         	goto	l3699
  3112  00057A                     u3400:
  3113  00057A                     
  3114                           ; BSR set to: 0
  3115  00057A  0E00               	movlw	0
  3116  00057C  6F7A               	movwf	determine_color_new@RelG& (0+255),b
  3117  00057E  0E00               	movlw	0
  3118  000580  6F7B               	movwf	(determine_color_new@RelG+1)& (0+255),b
  3119  000582  0E00               	movlw	0
  3120  000584  6F7C               	movwf	(determine_color_new@RelG+2)& (0+255),b
  3121  000586  0E00               	movlw	0
  3122  000588  6F7D               	movwf	(determine_color_new@RelG+3)& (0+255),b
  3123  00058A                     l3699:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;color.c: 135:     if (RelB < 0) {RelB = 0;}
  3127  00058A  BF81               	btfsc	(determine_color_new@RelB+3)& (0+255),7,b
  3128  00058C  EFCC  F002         	goto	u3410
  3129  000590  EFCA  F002         	goto	u3411
  3130  000594                     u3411:
  3131  000594  EFD4  F002         	goto	l3703
  3132  000598                     u3410:
  3133  000598                     
  3134                           ; BSR set to: 0
  3135  000598  0E00               	movlw	0
  3136  00059A  6F7E               	movwf	determine_color_new@RelB& (0+255),b
  3137  00059C  0E00               	movlw	0
  3138  00059E  6F7F               	movwf	(determine_color_new@RelB+1)& (0+255),b
  3139  0005A0  0E00               	movlw	0
  3140  0005A2  6F80               	movwf	(determine_color_new@RelB+2)& (0+255),b
  3141  0005A4  0E00               	movlw	0
  3142  0005A6  6F81               	movwf	(determine_color_new@RelB+3)& (0+255),b
  3143  0005A8                     l3703:
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;color.c: 138:     if (isbtw(RelR,5.1,20.5)==1 && isbtw(RelG,2.2,3.8)==1 && isbtw(RelB,1
      +                          .8,5.5)==1 && lumin>800)
  3147  0005A8  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3148  0005AC  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3149  0005B0  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3150  0005B4  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3151  0005B8  0E33               	movlw	51
  3152  0005BA  6E11               	movwf	isbtw@low^0,c
  3153  0005BC  0E33               	movlw	51
  3154  0005BE  6E12               	movwf	(isbtw@low+1)^0,c
  3155  0005C0  0EA3               	movlw	163
  3156  0005C2  6E13               	movwf	(isbtw@low+2)^0,c
  3157  0005C4  0E40               	movlw	64
  3158  0005C6  6E14               	movwf	(isbtw@low+3)^0,c
  3159  0005C8  0E00               	movlw	0
  3160  0005CA  6E15               	movwf	isbtw@high^0,c
  3161  0005CC  0E00               	movlw	0
  3162  0005CE  6E16               	movwf	(isbtw@high+1)^0,c
  3163  0005D0  0EA4               	movlw	164
  3164  0005D2  6E17               	movwf	(isbtw@high+2)^0,c
  3165  0005D4  0E41               	movlw	65
  3166  0005D6  6E18               	movwf	(isbtw@high+3)^0,c
  3167  0005D8  EC55  F019         	call	_isbtw	;wreg free
  3168  0005DC  040D               	decf	?_isbtw^0,w,c
  3169  0005DE  100E               	iorwf	(?_isbtw+1)^0,w,c
  3170  0005E0  A4D8               	btfss	status,2,c
  3171  0005E2  EFF5  F002         	goto	u3421
  3172  0005E6  EFF7  F002         	goto	u3420
  3173  0005EA                     u3421:
  3174  0005EA  EF4D  F003         	goto	l3713
  3175  0005EE                     u3420:
  3176  0005EE  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3177  0005F2  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3178  0005F6  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3179  0005FA  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3180  0005FE  0ECD               	movlw	205
  3181  000600  6E11               	movwf	isbtw@low^0,c
  3182  000602  0ECC               	movlw	204
  3183  000604  6E12               	movwf	(isbtw@low+1)^0,c
  3184  000606  0E0C               	movlw	12
  3185  000608  6E13               	movwf	(isbtw@low+2)^0,c
  3186  00060A  0E40               	movlw	64
  3187  00060C  6E14               	movwf	(isbtw@low+3)^0,c
  3188  00060E  0E33               	movlw	51
  3189  000610  6E15               	movwf	isbtw@high^0,c
  3190  000612  0E33               	movlw	51
  3191  000614  6E16               	movwf	(isbtw@high+1)^0,c
  3192  000616  0E73               	movlw	115
  3193  000618  6E17               	movwf	(isbtw@high+2)^0,c
  3194  00061A  0E40               	movlw	64
  3195  00061C  6E18               	movwf	(isbtw@high+3)^0,c
  3196  00061E  EC55  F019         	call	_isbtw	;wreg free
  3197  000622  040D               	decf	?_isbtw^0,w,c
  3198  000624  100E               	iorwf	(?_isbtw+1)^0,w,c
  3199  000626  A4D8               	btfss	status,2,c
  3200  000628  EF18  F003         	goto	u3431
  3201  00062C  EF1A  F003         	goto	u3430
  3202  000630                     u3431:
  3203  000630  EF4D  F003         	goto	l3713
  3204  000634                     u3430:
  3205  000634  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3206  000638  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3207  00063C  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3208  000640  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3209  000644  0E66               	movlw	102
  3210  000646  6E11               	movwf	isbtw@low^0,c
  3211  000648  0E66               	movlw	102
  3212  00064A  6E12               	movwf	(isbtw@low+1)^0,c
  3213  00064C  0EE6               	movlw	230
  3214  00064E  6E13               	movwf	(isbtw@low+2)^0,c
  3215  000650  0E3F               	movlw	63
  3216  000652  6E14               	movwf	(isbtw@low+3)^0,c
  3217  000654  0E00               	movlw	0
  3218  000656  6E15               	movwf	isbtw@high^0,c
  3219  000658  0E00               	movlw	0
  3220  00065A  6E16               	movwf	(isbtw@high+1)^0,c
  3221  00065C  0EB0               	movlw	176
  3222  00065E  6E17               	movwf	(isbtw@high+2)^0,c
  3223  000660  0E40               	movlw	64
  3224  000662  6E18               	movwf	(isbtw@high+3)^0,c
  3225  000664  EC55  F019         	call	_isbtw	;wreg free
  3226  000668  040D               	decf	?_isbtw^0,w,c
  3227  00066A  100E               	iorwf	(?_isbtw+1)^0,w,c
  3228  00066C  A4D8               	btfss	status,2,c
  3229  00066E  EF3B  F003         	goto	u3441
  3230  000672  EF3D  F003         	goto	u3440
  3231  000676                     u3441:
  3232  000676  EF4D  F003         	goto	l3713
  3233  00067A                     u3440:
  3234  00067A  0E21               	movlw	33
  3235  00067C  0100               	movlb	0	; () banked
  3236  00067E  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3237  000680  0E03               	movlw	3
  3238  000682  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3239  000684  A0D8               	btfss	status,0,c
  3240  000686  EF47  F003         	goto	u3451
  3241  00068A  EF49  F003         	goto	u3450
  3242  00068E                     u3451:
  3243  00068E  EF4D  F003         	goto	l3713
  3244  000692                     u3450:
  3245  000692                     
  3246                           ; BSR set to: 0
  3247                           ;color.c: 139:     {out = 0;}
  3248  000692  0E00               	movlw	0
  3249  000694  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3250  000696  0E00               	movlw	0
  3251  000698  6F72               	movwf	determine_color_new@out& (0+255),b
  3252  00069A                     l3713:
  3253                           
  3254                           ;color.c: 142:     if (isbtw(RelR,0.2,0.49)==1 && isbtw(RelG,0.28,0.59)==1 && isbtw(RelB
      +                          ,0.7,0.9)==1 && lumin>835)
  3255  00069A  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3256  00069E  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3257  0006A2  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3258  0006A6  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3259  0006AA  0ECD               	movlw	205
  3260  0006AC  6E11               	movwf	isbtw@low^0,c
  3261  0006AE  0ECC               	movlw	204
  3262  0006B0  6E12               	movwf	(isbtw@low+1)^0,c
  3263  0006B2  0E4C               	movlw	76
  3264  0006B4  6E13               	movwf	(isbtw@low+2)^0,c
  3265  0006B6  0E3E               	movlw	62
  3266  0006B8  6E14               	movwf	(isbtw@low+3)^0,c
  3267  0006BA  0E48               	movlw	72
  3268  0006BC  6E15               	movwf	isbtw@high^0,c
  3269  0006BE  0EE1               	movlw	225
  3270  0006C0  6E16               	movwf	(isbtw@high+1)^0,c
  3271  0006C2  0EFA               	movlw	250
  3272  0006C4  6E17               	movwf	(isbtw@high+2)^0,c
  3273  0006C6  0E3E               	movlw	62
  3274  0006C8  6E18               	movwf	(isbtw@high+3)^0,c
  3275  0006CA  EC55  F019         	call	_isbtw	;wreg free
  3276  0006CE  040D               	decf	?_isbtw^0,w,c
  3277  0006D0  100E               	iorwf	(?_isbtw+1)^0,w,c
  3278  0006D2  A4D8               	btfss	status,2,c
  3279  0006D4  EF6E  F003         	goto	u3461
  3280  0006D8  EF70  F003         	goto	u3460
  3281  0006DC                     u3461:
  3282  0006DC  EFC6  F003         	goto	l3723
  3283  0006E0                     u3460:
  3284  0006E0  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3285  0006E4  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3286  0006E8  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3287  0006EC  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3288  0006F0  0E29               	movlw	41
  3289  0006F2  6E11               	movwf	isbtw@low^0,c
  3290  0006F4  0E5C               	movlw	92
  3291  0006F6  6E12               	movwf	(isbtw@low+1)^0,c
  3292  0006F8  0E8F               	movlw	143
  3293  0006FA  6E13               	movwf	(isbtw@low+2)^0,c
  3294  0006FC  0E3E               	movlw	62
  3295  0006FE  6E14               	movwf	(isbtw@low+3)^0,c
  3296  000700  0E3D               	movlw	61
  3297  000702  6E15               	movwf	isbtw@high^0,c
  3298  000704  0E0A               	movlw	10
  3299  000706  6E16               	movwf	(isbtw@high+1)^0,c
  3300  000708  0E17               	movlw	23
  3301  00070A  6E17               	movwf	(isbtw@high+2)^0,c
  3302  00070C  0E3F               	movlw	63
  3303  00070E  6E18               	movwf	(isbtw@high+3)^0,c
  3304  000710  EC55  F019         	call	_isbtw	;wreg free
  3305  000714  040D               	decf	?_isbtw^0,w,c
  3306  000716  100E               	iorwf	(?_isbtw+1)^0,w,c
  3307  000718  A4D8               	btfss	status,2,c
  3308  00071A  EF91  F003         	goto	u3471
  3309  00071E  EF93  F003         	goto	u3470
  3310  000722                     u3471:
  3311  000722  EFC6  F003         	goto	l3723
  3312  000726                     u3470:
  3313  000726  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3314  00072A  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3315  00072E  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3316  000732  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3317  000736  0E33               	movlw	51
  3318  000738  6E11               	movwf	isbtw@low^0,c
  3319  00073A  0E33               	movlw	51
  3320  00073C  6E12               	movwf	(isbtw@low+1)^0,c
  3321  00073E  0E33               	movlw	51
  3322  000740  6E13               	movwf	(isbtw@low+2)^0,c
  3323  000742  0E3F               	movlw	63
  3324  000744  6E14               	movwf	(isbtw@low+3)^0,c
  3325  000746  0E66               	movlw	102
  3326  000748  6E15               	movwf	isbtw@high^0,c
  3327  00074A  0E66               	movlw	102
  3328  00074C  6E16               	movwf	(isbtw@high+1)^0,c
  3329  00074E  0E66               	movlw	102
  3330  000750  6E17               	movwf	(isbtw@high+2)^0,c
  3331  000752  0E3F               	movlw	63
  3332  000754  6E18               	movwf	(isbtw@high+3)^0,c
  3333  000756  EC55  F019         	call	_isbtw	;wreg free
  3334  00075A  040D               	decf	?_isbtw^0,w,c
  3335  00075C  100E               	iorwf	(?_isbtw+1)^0,w,c
  3336  00075E  A4D8               	btfss	status,2,c
  3337  000760  EFB4  F003         	goto	u3481
  3338  000764  EFB6  F003         	goto	u3480
  3339  000768                     u3481:
  3340  000768  EFC6  F003         	goto	l3723
  3341  00076C                     u3480:
  3342  00076C  0E44               	movlw	68
  3343  00076E  0100               	movlb	0	; () banked
  3344  000770  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3345  000772  0E03               	movlw	3
  3346  000774  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3347  000776  A0D8               	btfss	status,0,c
  3348  000778  EFC0  F003         	goto	u3491
  3349  00077C  EFC2  F003         	goto	u3490
  3350  000780                     u3491:
  3351  000780  EFC6  F003         	goto	l3723
  3352  000784                     u3490:
  3353  000784                     
  3354                           ; BSR set to: 0
  3355                           ;color.c: 143:     {out = 1;}
  3356  000784  0E00               	movlw	0
  3357  000786  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3358  000788  0E01               	movlw	1
  3359  00078A  6F72               	movwf	determine_color_new@out& (0+255),b
  3360  00078C                     l3723:
  3361                           
  3362                           ;color.c: 146:     if (isbtw(RelR,0.1,0.55)==1 && isbtw(RelG,0.1,0.39)==1 && isbtw(RelB,
      +                          1.0,1.2)==1 && lumin>800)
  3363  00078C  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3364  000790  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3365  000794  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3366  000798  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3367  00079C  0ECD               	movlw	205
  3368  00079E  6E11               	movwf	isbtw@low^0,c
  3369  0007A0  0ECC               	movlw	204
  3370  0007A2  6E12               	movwf	(isbtw@low+1)^0,c
  3371  0007A4  0ECC               	movlw	204
  3372  0007A6  6E13               	movwf	(isbtw@low+2)^0,c
  3373  0007A8  0E3D               	movlw	61
  3374  0007AA  6E14               	movwf	(isbtw@low+3)^0,c
  3375  0007AC  0ECD               	movlw	205
  3376  0007AE  6E15               	movwf	isbtw@high^0,c
  3377  0007B0  0ECC               	movlw	204
  3378  0007B2  6E16               	movwf	(isbtw@high+1)^0,c
  3379  0007B4  0E0C               	movlw	12
  3380  0007B6  6E17               	movwf	(isbtw@high+2)^0,c
  3381  0007B8  0E3F               	movlw	63
  3382  0007BA  6E18               	movwf	(isbtw@high+3)^0,c
  3383  0007BC  EC55  F019         	call	_isbtw	;wreg free
  3384  0007C0  040D               	decf	?_isbtw^0,w,c
  3385  0007C2  100E               	iorwf	(?_isbtw+1)^0,w,c
  3386  0007C4  A4D8               	btfss	status,2,c
  3387  0007C6  EFE7  F003         	goto	u3501
  3388  0007CA  EFE9  F003         	goto	u3500
  3389  0007CE                     u3501:
  3390  0007CE  EF3F  F004         	goto	l3733
  3391  0007D2                     u3500:
  3392  0007D2  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3393  0007D6  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3394  0007DA  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3395  0007DE  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3396  0007E2  0ECD               	movlw	205
  3397  0007E4  6E11               	movwf	isbtw@low^0,c
  3398  0007E6  0ECC               	movlw	204
  3399  0007E8  6E12               	movwf	(isbtw@low+1)^0,c
  3400  0007EA  0ECC               	movlw	204
  3401  0007EC  6E13               	movwf	(isbtw@low+2)^0,c
  3402  0007EE  0E3D               	movlw	61
  3403  0007F0  6E14               	movwf	(isbtw@low+3)^0,c
  3404  0007F2  0E14               	movlw	20
  3405  0007F4  6E15               	movwf	isbtw@high^0,c
  3406  0007F6  0EAE               	movlw	174
  3407  0007F8  6E16               	movwf	(isbtw@high+1)^0,c
  3408  0007FA  0EC7               	movlw	199
  3409  0007FC  6E17               	movwf	(isbtw@high+2)^0,c
  3410  0007FE  0E3E               	movlw	62
  3411  000800  6E18               	movwf	(isbtw@high+3)^0,c
  3412  000802  EC55  F019         	call	_isbtw	;wreg free
  3413  000806  040D               	decf	?_isbtw^0,w,c
  3414  000808  100E               	iorwf	(?_isbtw+1)^0,w,c
  3415  00080A  A4D8               	btfss	status,2,c
  3416  00080C  EF0A  F004         	goto	u3511
  3417  000810  EF0C  F004         	goto	u3510
  3418  000814                     u3511:
  3419  000814  EF3F  F004         	goto	l3733
  3420  000818                     u3510:
  3421  000818  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3422  00081C  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3423  000820  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3424  000824  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3425  000828  0E00               	movlw	0
  3426  00082A  6E11               	movwf	isbtw@low^0,c
  3427  00082C  0E00               	movlw	0
  3428  00082E  6E12               	movwf	(isbtw@low+1)^0,c
  3429  000830  0E80               	movlw	128
  3430  000832  6E13               	movwf	(isbtw@low+2)^0,c
  3431  000834  0E3F               	movlw	63
  3432  000836  6E14               	movwf	(isbtw@low+3)^0,c
  3433  000838  0E9A               	movlw	154
  3434  00083A  6E15               	movwf	isbtw@high^0,c
  3435  00083C  0E99               	movlw	153
  3436  00083E  6E16               	movwf	(isbtw@high+1)^0,c
  3437  000840  0E99               	movlw	153
  3438  000842  6E17               	movwf	(isbtw@high+2)^0,c
  3439  000844  0E3F               	movlw	63
  3440  000846  6E18               	movwf	(isbtw@high+3)^0,c
  3441  000848  EC55  F019         	call	_isbtw	;wreg free
  3442  00084C  040D               	decf	?_isbtw^0,w,c
  3443  00084E  100E               	iorwf	(?_isbtw+1)^0,w,c
  3444  000850  A4D8               	btfss	status,2,c
  3445  000852  EF2D  F004         	goto	u3521
  3446  000856  EF2F  F004         	goto	u3520
  3447  00085A                     u3521:
  3448  00085A  EF3F  F004         	goto	l3733
  3449  00085E                     u3520:
  3450  00085E  0E21               	movlw	33
  3451  000860  0100               	movlb	0	; () banked
  3452  000862  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3453  000864  0E03               	movlw	3
  3454  000866  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3455  000868  A0D8               	btfss	status,0,c
  3456  00086A  EF39  F004         	goto	u3531
  3457  00086E  EF3B  F004         	goto	u3530
  3458  000872                     u3531:
  3459  000872  EF3F  F004         	goto	l3733
  3460  000876                     u3530:
  3461  000876                     
  3462                           ; BSR set to: 0
  3463                           ;color.c: 147:     {out = 2;}
  3464  000876  0E00               	movlw	0
  3465  000878  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3466  00087A  0E02               	movlw	2
  3467  00087C  6F72               	movwf	determine_color_new@out& (0+255),b
  3468  00087E                     l3733:
  3469                           
  3470                           ;color.c: 150:     if (isbtw(RelR,1.2,1.4)==1 && isbtw(RelG,1.5,1.69)==1 && isbtw(RelB,0
      +                          .8,0.9)==1 && lumin>850)
  3471  00087E  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3472  000882  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3473  000886  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3474  00088A  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3475  00088E  0E9A               	movlw	154
  3476  000890  6E11               	movwf	isbtw@low^0,c
  3477  000892  0E99               	movlw	153
  3478  000894  6E12               	movwf	(isbtw@low+1)^0,c
  3479  000896  0E99               	movlw	153
  3480  000898  6E13               	movwf	(isbtw@low+2)^0,c
  3481  00089A  0E3F               	movlw	63
  3482  00089C  6E14               	movwf	(isbtw@low+3)^0,c
  3483  00089E  0E33               	movlw	51
  3484  0008A0  6E15               	movwf	isbtw@high^0,c
  3485  0008A2  0E33               	movlw	51
  3486  0008A4  6E16               	movwf	(isbtw@high+1)^0,c
  3487  0008A6  0EB3               	movlw	179
  3488  0008A8  6E17               	movwf	(isbtw@high+2)^0,c
  3489  0008AA  0E3F               	movlw	63
  3490  0008AC  6E18               	movwf	(isbtw@high+3)^0,c
  3491  0008AE  EC55  F019         	call	_isbtw	;wreg free
  3492  0008B2  040D               	decf	?_isbtw^0,w,c
  3493  0008B4  100E               	iorwf	(?_isbtw+1)^0,w,c
  3494  0008B6  A4D8               	btfss	status,2,c
  3495  0008B8  EF60  F004         	goto	u3541
  3496  0008BC  EF62  F004         	goto	u3540
  3497  0008C0                     u3541:
  3498  0008C0  EFB8  F004         	goto	l3743
  3499  0008C4                     u3540:
  3500  0008C4  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3501  0008C8  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3502  0008CC  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3503  0008D0  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3504  0008D4  0E00               	movlw	0
  3505  0008D6  6E11               	movwf	isbtw@low^0,c
  3506  0008D8  0E00               	movlw	0
  3507  0008DA  6E12               	movwf	(isbtw@low+1)^0,c
  3508  0008DC  0EC0               	movlw	192
  3509  0008DE  6E13               	movwf	(isbtw@low+2)^0,c
  3510  0008E0  0E3F               	movlw	63
  3511  0008E2  6E14               	movwf	(isbtw@low+3)^0,c
  3512  0008E4  0EEC               	movlw	236
  3513  0008E6  6E15               	movwf	isbtw@high^0,c
  3514  0008E8  0E51               	movlw	81
  3515  0008EA  6E16               	movwf	(isbtw@high+1)^0,c
  3516  0008EC  0ED8               	movlw	216
  3517  0008EE  6E17               	movwf	(isbtw@high+2)^0,c
  3518  0008F0  0E3F               	movlw	63
  3519  0008F2  6E18               	movwf	(isbtw@high+3)^0,c
  3520  0008F4  EC55  F019         	call	_isbtw	;wreg free
  3521  0008F8  040D               	decf	?_isbtw^0,w,c
  3522  0008FA  100E               	iorwf	(?_isbtw+1)^0,w,c
  3523  0008FC  A4D8               	btfss	status,2,c
  3524  0008FE  EF83  F004         	goto	u3551
  3525  000902  EF85  F004         	goto	u3550
  3526  000906                     u3551:
  3527  000906  EFB8  F004         	goto	l3743
  3528  00090A                     u3550:
  3529  00090A  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3530  00090E  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3531  000912  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3532  000916  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3533  00091A  0ECD               	movlw	205
  3534  00091C  6E11               	movwf	isbtw@low^0,c
  3535  00091E  0ECC               	movlw	204
  3536  000920  6E12               	movwf	(isbtw@low+1)^0,c
  3537  000922  0E4C               	movlw	76
  3538  000924  6E13               	movwf	(isbtw@low+2)^0,c
  3539  000926  0E3F               	movlw	63
  3540  000928  6E14               	movwf	(isbtw@low+3)^0,c
  3541  00092A  0E66               	movlw	102
  3542  00092C  6E15               	movwf	isbtw@high^0,c
  3543  00092E  0E66               	movlw	102
  3544  000930  6E16               	movwf	(isbtw@high+1)^0,c
  3545  000932  0E66               	movlw	102
  3546  000934  6E17               	movwf	(isbtw@high+2)^0,c
  3547  000936  0E3F               	movlw	63
  3548  000938  6E18               	movwf	(isbtw@high+3)^0,c
  3549  00093A  EC55  F019         	call	_isbtw	;wreg free
  3550  00093E  040D               	decf	?_isbtw^0,w,c
  3551  000940  100E               	iorwf	(?_isbtw+1)^0,w,c
  3552  000942  A4D8               	btfss	status,2,c
  3553  000944  EFA6  F004         	goto	u3561
  3554  000948  EFA8  F004         	goto	u3560
  3555  00094C                     u3561:
  3556  00094C  EFB8  F004         	goto	l3743
  3557  000950                     u3560:
  3558  000950  0E53               	movlw	83
  3559  000952  0100               	movlb	0	; () banked
  3560  000954  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3561  000956  0E03               	movlw	3
  3562  000958  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3563  00095A  A0D8               	btfss	status,0,c
  3564  00095C  EFB2  F004         	goto	u3571
  3565  000960  EFB4  F004         	goto	u3570
  3566  000964                     u3571:
  3567  000964  EFB8  F004         	goto	l3743
  3568  000968                     u3570:
  3569  000968                     
  3570                           ; BSR set to: 0
  3571                           ;color.c: 151:     {out = 3;}
  3572  000968  0E00               	movlw	0
  3573  00096A  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3574  00096C  0E03               	movlw	3
  3575  00096E  6F72               	movwf	determine_color_new@out& (0+255),b
  3576  000970                     l3743:
  3577                           
  3578                           ;color.c: 154:     if (isbtw(RelR,1.56,1.83)==1 && isbtw(RelG,1.23,1.50)==1 && isbtw(Rel
      +                          B,1.15,1.3)==1 && lumin>830)
  3579  000970  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3580  000974  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3581  000978  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3582  00097C  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3583  000980  0E14               	movlw	20
  3584  000982  6E11               	movwf	isbtw@low^0,c
  3585  000984  0EAE               	movlw	174
  3586  000986  6E12               	movwf	(isbtw@low+1)^0,c
  3587  000988  0EC7               	movlw	199
  3588  00098A  6E13               	movwf	(isbtw@low+2)^0,c
  3589  00098C  0E3F               	movlw	63
  3590  00098E  6E14               	movwf	(isbtw@low+3)^0,c
  3591  000990  0E71               	movlw	113
  3592  000992  6E15               	movwf	isbtw@high^0,c
  3593  000994  0E3D               	movlw	61
  3594  000996  6E16               	movwf	(isbtw@high+1)^0,c
  3595  000998  0EEA               	movlw	234
  3596  00099A  6E17               	movwf	(isbtw@high+2)^0,c
  3597  00099C  0E3F               	movlw	63
  3598  00099E  6E18               	movwf	(isbtw@high+3)^0,c
  3599  0009A0  EC55  F019         	call	_isbtw	;wreg free
  3600  0009A4  040D               	decf	?_isbtw^0,w,c
  3601  0009A6  100E               	iorwf	(?_isbtw+1)^0,w,c
  3602  0009A8  A4D8               	btfss	status,2,c
  3603  0009AA  EFD9  F004         	goto	u3581
  3604  0009AE  EFDB  F004         	goto	u3580
  3605  0009B2                     u3581:
  3606  0009B2  EF31  F005         	goto	l3753
  3607  0009B6                     u3580:
  3608  0009B6  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3609  0009BA  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3610  0009BE  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3611  0009C2  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3612  0009C6  0EA4               	movlw	164
  3613  0009C8  6E11               	movwf	isbtw@low^0,c
  3614  0009CA  0E70               	movlw	112
  3615  0009CC  6E12               	movwf	(isbtw@low+1)^0,c
  3616  0009CE  0E9D               	movlw	157
  3617  0009D0  6E13               	movwf	(isbtw@low+2)^0,c
  3618  0009D2  0E3F               	movlw	63
  3619  0009D4  6E14               	movwf	(isbtw@low+3)^0,c
  3620  0009D6  0E00               	movlw	0
  3621  0009D8  6E15               	movwf	isbtw@high^0,c
  3622  0009DA  0E00               	movlw	0
  3623  0009DC  6E16               	movwf	(isbtw@high+1)^0,c
  3624  0009DE  0EC0               	movlw	192
  3625  0009E0  6E17               	movwf	(isbtw@high+2)^0,c
  3626  0009E2  0E3F               	movlw	63
  3627  0009E4  6E18               	movwf	(isbtw@high+3)^0,c
  3628  0009E6  EC55  F019         	call	_isbtw	;wreg free
  3629  0009EA  040D               	decf	?_isbtw^0,w,c
  3630  0009EC  100E               	iorwf	(?_isbtw+1)^0,w,c
  3631  0009EE  A4D8               	btfss	status,2,c
  3632  0009F0  EFFC  F004         	goto	u3591
  3633  0009F4  EFFE  F004         	goto	u3590
  3634  0009F8                     u3591:
  3635  0009F8  EF31  F005         	goto	l3753
  3636  0009FC                     u3590:
  3637  0009FC  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3638  000A00  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3639  000A04  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3640  000A08  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3641  000A0C  0E33               	movlw	51
  3642  000A0E  6E11               	movwf	isbtw@low^0,c
  3643  000A10  0E33               	movlw	51
  3644  000A12  6E12               	movwf	(isbtw@low+1)^0,c
  3645  000A14  0E93               	movlw	147
  3646  000A16  6E13               	movwf	(isbtw@low+2)^0,c
  3647  000A18  0E3F               	movlw	63
  3648  000A1A  6E14               	movwf	(isbtw@low+3)^0,c
  3649  000A1C  0E66               	movlw	102
  3650  000A1E  6E15               	movwf	isbtw@high^0,c
  3651  000A20  0E66               	movlw	102
  3652  000A22  6E16               	movwf	(isbtw@high+1)^0,c
  3653  000A24  0EA6               	movlw	166
  3654  000A26  6E17               	movwf	(isbtw@high+2)^0,c
  3655  000A28  0E3F               	movlw	63
  3656  000A2A  6E18               	movwf	(isbtw@high+3)^0,c
  3657  000A2C  EC55  F019         	call	_isbtw	;wreg free
  3658  000A30  040D               	decf	?_isbtw^0,w,c
  3659  000A32  100E               	iorwf	(?_isbtw+1)^0,w,c
  3660  000A34  A4D8               	btfss	status,2,c
  3661  000A36  EF1F  F005         	goto	u3601
  3662  000A3A  EF21  F005         	goto	u3600
  3663  000A3E                     u3601:
  3664  000A3E  EF31  F005         	goto	l3753
  3665  000A42                     u3600:
  3666  000A42  0E3F               	movlw	63
  3667  000A44  0100               	movlb	0	; () banked
  3668  000A46  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3669  000A48  0E03               	movlw	3
  3670  000A4A  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3671  000A4C  A0D8               	btfss	status,0,c
  3672  000A4E  EF2B  F005         	goto	u3611
  3673  000A52  EF2D  F005         	goto	u3610
  3674  000A56                     u3611:
  3675  000A56  EF31  F005         	goto	l3753
  3676  000A5A                     u3610:
  3677  000A5A                     
  3678                           ; BSR set to: 0
  3679                           ;color.c: 155:     {out = 4;}
  3680  000A5A  0E00               	movlw	0
  3681  000A5C  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3682  000A5E  0E04               	movlw	4
  3683  000A60  6F72               	movwf	determine_color_new@out& (0+255),b
  3684  000A62                     l3753:
  3685                           
  3686                           ;color.c: 158:     if (isbtw(RelR,3.1,4.85)==1 && isbtw(RelG,2.2,2.83)==1 && isbtw(RelB,
      +                          1.27,1.8)==1 && lumin>820)
  3687  000A62  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3688  000A66  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3689  000A6A  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3690  000A6E  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3691  000A72  0E66               	movlw	102
  3692  000A74  6E11               	movwf	isbtw@low^0,c
  3693  000A76  0E66               	movlw	102
  3694  000A78  6E12               	movwf	(isbtw@low+1)^0,c
  3695  000A7A  0E46               	movlw	70
  3696  000A7C  6E13               	movwf	(isbtw@low+2)^0,c
  3697  000A7E  0E40               	movlw	64
  3698  000A80  6E14               	movwf	(isbtw@low+3)^0,c
  3699  000A82  0E33               	movlw	51
  3700  000A84  6E15               	movwf	isbtw@high^0,c
  3701  000A86  0E33               	movlw	51
  3702  000A88  6E16               	movwf	(isbtw@high+1)^0,c
  3703  000A8A  0E9B               	movlw	155
  3704  000A8C  6E17               	movwf	(isbtw@high+2)^0,c
  3705  000A8E  0E40               	movlw	64
  3706  000A90  6E18               	movwf	(isbtw@high+3)^0,c
  3707  000A92  EC55  F019         	call	_isbtw	;wreg free
  3708  000A96  040D               	decf	?_isbtw^0,w,c
  3709  000A98  100E               	iorwf	(?_isbtw+1)^0,w,c
  3710  000A9A  A4D8               	btfss	status,2,c
  3711  000A9C  EF52  F005         	goto	u3621
  3712  000AA0  EF54  F005         	goto	u3620
  3713  000AA4                     u3621:
  3714  000AA4  EFAA  F005         	goto	l3763
  3715  000AA8                     u3620:
  3716  000AA8  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3717  000AAC  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3718  000AB0  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3719  000AB4  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3720  000AB8  0ECD               	movlw	205
  3721  000ABA  6E11               	movwf	isbtw@low^0,c
  3722  000ABC  0ECC               	movlw	204
  3723  000ABE  6E12               	movwf	(isbtw@low+1)^0,c
  3724  000AC0  0E0C               	movlw	12
  3725  000AC2  6E13               	movwf	(isbtw@low+2)^0,c
  3726  000AC4  0E40               	movlw	64
  3727  000AC6  6E14               	movwf	(isbtw@low+3)^0,c
  3728  000AC8  0EB8               	movlw	184
  3729  000ACA  6E15               	movwf	isbtw@high^0,c
  3730  000ACC  0E1E               	movlw	30
  3731  000ACE  6E16               	movwf	(isbtw@high+1)^0,c
  3732  000AD0  0E35               	movlw	53
  3733  000AD2  6E17               	movwf	(isbtw@high+2)^0,c
  3734  000AD4  0E40               	movlw	64
  3735  000AD6  6E18               	movwf	(isbtw@high+3)^0,c
  3736  000AD8  EC55  F019         	call	_isbtw	;wreg free
  3737  000ADC  040D               	decf	?_isbtw^0,w,c
  3738  000ADE  100E               	iorwf	(?_isbtw+1)^0,w,c
  3739  000AE0  A4D8               	btfss	status,2,c
  3740  000AE2  EF75  F005         	goto	u3631
  3741  000AE6  EF77  F005         	goto	u3630
  3742  000AEA                     u3631:
  3743  000AEA  EFAA  F005         	goto	l3763
  3744  000AEE                     u3630:
  3745  000AEE  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3746  000AF2  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3747  000AF6  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3748  000AFA  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3749  000AFE  0E5C               	movlw	92
  3750  000B00  6E11               	movwf	isbtw@low^0,c
  3751  000B02  0E8F               	movlw	143
  3752  000B04  6E12               	movwf	(isbtw@low+1)^0,c
  3753  000B06  0EA2               	movlw	162
  3754  000B08  6E13               	movwf	(isbtw@low+2)^0,c
  3755  000B0A  0E3F               	movlw	63
  3756  000B0C  6E14               	movwf	(isbtw@low+3)^0,c
  3757  000B0E  0E66               	movlw	102
  3758  000B10  6E15               	movwf	isbtw@high^0,c
  3759  000B12  0E66               	movlw	102
  3760  000B14  6E16               	movwf	(isbtw@high+1)^0,c
  3761  000B16  0EE6               	movlw	230
  3762  000B18  6E17               	movwf	(isbtw@high+2)^0,c
  3763  000B1A  0E3F               	movlw	63
  3764  000B1C  6E18               	movwf	(isbtw@high+3)^0,c
  3765  000B1E  EC55  F019         	call	_isbtw	;wreg free
  3766  000B22  040D               	decf	?_isbtw^0,w,c
  3767  000B24  100E               	iorwf	(?_isbtw+1)^0,w,c
  3768  000B26  A4D8               	btfss	status,2,c
  3769  000B28  EF98  F005         	goto	u3641
  3770  000B2C  EF9A  F005         	goto	u3640
  3771  000B30                     u3641:
  3772  000B30  EFAA  F005         	goto	l3763
  3773  000B34                     u3640:
  3774  000B34  0E35               	movlw	53
  3775  000B36  0100               	movlb	0	; () banked
  3776  000B38  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3777  000B3A  0E03               	movlw	3
  3778  000B3C  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3779  000B3E  A0D8               	btfss	status,0,c
  3780  000B40  EFA4  F005         	goto	u3651
  3781  000B44  EFA6  F005         	goto	u3650
  3782  000B48                     u3651:
  3783  000B48  EFAA  F005         	goto	l3763
  3784  000B4C                     u3650:
  3785  000B4C                     
  3786                           ; BSR set to: 0
  3787                           ;color.c: 159:     {out = 5;}
  3788  000B4C  0E00               	movlw	0
  3789  000B4E  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3790  000B50  0E05               	movlw	5
  3791  000B52  6F72               	movwf	determine_color_new@out& (0+255),b
  3792  000B54                     l3763:
  3793                           
  3794                           ;color.c: 162:     if (isbtw(RelR,0.6,0.86)==1 && isbtw(RelG,0.6,0.85)==1 && isbtw(RelB,
      +                          0.95,1.12)==1 && lumin>820)
  3795  000B54  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3796  000B58  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3797  000B5C  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3798  000B60  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3799  000B64  0E9A               	movlw	154
  3800  000B66  6E11               	movwf	isbtw@low^0,c
  3801  000B68  0E99               	movlw	153
  3802  000B6A  6E12               	movwf	(isbtw@low+1)^0,c
  3803  000B6C  0E19               	movlw	25
  3804  000B6E  6E13               	movwf	(isbtw@low+2)^0,c
  3805  000B70  0E3F               	movlw	63
  3806  000B72  6E14               	movwf	(isbtw@low+3)^0,c
  3807  000B74  0EF6               	movlw	246
  3808  000B76  6E15               	movwf	isbtw@high^0,c
  3809  000B78  0E28               	movlw	40
  3810  000B7A  6E16               	movwf	(isbtw@high+1)^0,c
  3811  000B7C  0E5C               	movlw	92
  3812  000B7E  6E17               	movwf	(isbtw@high+2)^0,c
  3813  000B80  0E3F               	movlw	63
  3814  000B82  6E18               	movwf	(isbtw@high+3)^0,c
  3815  000B84  EC55  F019         	call	_isbtw	;wreg free
  3816  000B88  040D               	decf	?_isbtw^0,w,c
  3817  000B8A  100E               	iorwf	(?_isbtw+1)^0,w,c
  3818  000B8C  A4D8               	btfss	status,2,c
  3819  000B8E  EFCB  F005         	goto	u3661
  3820  000B92  EFCD  F005         	goto	u3660
  3821  000B96                     u3661:
  3822  000B96  EF23  F006         	goto	l3773
  3823  000B9A                     u3660:
  3824  000B9A  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3825  000B9E  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3826  000BA2  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3827  000BA6  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3828  000BAA  0E9A               	movlw	154
  3829  000BAC  6E11               	movwf	isbtw@low^0,c
  3830  000BAE  0E99               	movlw	153
  3831  000BB0  6E12               	movwf	(isbtw@low+1)^0,c
  3832  000BB2  0E19               	movlw	25
  3833  000BB4  6E13               	movwf	(isbtw@low+2)^0,c
  3834  000BB6  0E3F               	movlw	63
  3835  000BB8  6E14               	movwf	(isbtw@low+3)^0,c
  3836  000BBA  0E9A               	movlw	154
  3837  000BBC  6E15               	movwf	isbtw@high^0,c
  3838  000BBE  0E99               	movlw	153
  3839  000BC0  6E16               	movwf	(isbtw@high+1)^0,c
  3840  000BC2  0E59               	movlw	89
  3841  000BC4  6E17               	movwf	(isbtw@high+2)^0,c
  3842  000BC6  0E3F               	movlw	63
  3843  000BC8  6E18               	movwf	(isbtw@high+3)^0,c
  3844  000BCA  EC55  F019         	call	_isbtw	;wreg free
  3845  000BCE  040D               	decf	?_isbtw^0,w,c
  3846  000BD0  100E               	iorwf	(?_isbtw+1)^0,w,c
  3847  000BD2  A4D8               	btfss	status,2,c
  3848  000BD4  EFEE  F005         	goto	u3671
  3849  000BD8  EFF0  F005         	goto	u3670
  3850  000BDC                     u3671:
  3851  000BDC  EF23  F006         	goto	l3773
  3852  000BE0                     u3670:
  3853  000BE0  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3854  000BE4  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3855  000BE8  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3856  000BEC  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3857  000BF0  0E33               	movlw	51
  3858  000BF2  6E11               	movwf	isbtw@low^0,c
  3859  000BF4  0E33               	movlw	51
  3860  000BF6  6E12               	movwf	(isbtw@low+1)^0,c
  3861  000BF8  0E73               	movlw	115
  3862  000BFA  6E13               	movwf	(isbtw@low+2)^0,c
  3863  000BFC  0E3F               	movlw	63
  3864  000BFE  6E14               	movwf	(isbtw@low+3)^0,c
  3865  000C00  0E29               	movlw	41
  3866  000C02  6E15               	movwf	isbtw@high^0,c
  3867  000C04  0E5C               	movlw	92
  3868  000C06  6E16               	movwf	(isbtw@high+1)^0,c
  3869  000C08  0E8F               	movlw	143
  3870  000C0A  6E17               	movwf	(isbtw@high+2)^0,c
  3871  000C0C  0E3F               	movlw	63
  3872  000C0E  6E18               	movwf	(isbtw@high+3)^0,c
  3873  000C10  EC55  F019         	call	_isbtw	;wreg free
  3874  000C14  040D               	decf	?_isbtw^0,w,c
  3875  000C16  100E               	iorwf	(?_isbtw+1)^0,w,c
  3876  000C18  A4D8               	btfss	status,2,c
  3877  000C1A  EF11  F006         	goto	u3681
  3878  000C1E  EF13  F006         	goto	u3680
  3879  000C22                     u3681:
  3880  000C22  EF23  F006         	goto	l3773
  3881  000C26                     u3680:
  3882  000C26  0E35               	movlw	53
  3883  000C28  0100               	movlb	0	; () banked
  3884  000C2A  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3885  000C2C  0E03               	movlw	3
  3886  000C2E  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3887  000C30  A0D8               	btfss	status,0,c
  3888  000C32  EF1D  F006         	goto	u3691
  3889  000C36  EF1F  F006         	goto	u3690
  3890  000C3A                     u3691:
  3891  000C3A  EF23  F006         	goto	l3773
  3892  000C3E                     u3690:
  3893  000C3E                     
  3894                           ; BSR set to: 0
  3895                           ;color.c: 163:     {out = 6;}
  3896  000C3E  0E00               	movlw	0
  3897  000C40  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  3898  000C42  0E06               	movlw	6
  3899  000C44  6F72               	movwf	determine_color_new@out& (0+255),b
  3900  000C46                     l3773:
  3901                           
  3902                           ;color.c: 166:     if (isbtw(RelR,0.9,1.1)==1 && isbtw(RelG,0.8,1.0)==1 && isbtw(RelB,0.
      +                          95,1.1)==1 && lumin>890)
  3903  000C46  C076  F00D         	movff	determine_color_new@RelR,isbtw@num
  3904  000C4A  C077  F00E         	movff	determine_color_new@RelR+1,isbtw@num+1
  3905  000C4E  C078  F00F         	movff	determine_color_new@RelR+2,isbtw@num+2
  3906  000C52  C079  F010         	movff	determine_color_new@RelR+3,isbtw@num+3
  3907  000C56  0E66               	movlw	102
  3908  000C58  6E11               	movwf	isbtw@low^0,c
  3909  000C5A  0E66               	movlw	102
  3910  000C5C  6E12               	movwf	(isbtw@low+1)^0,c
  3911  000C5E  0E66               	movlw	102
  3912  000C60  6E13               	movwf	(isbtw@low+2)^0,c
  3913  000C62  0E3F               	movlw	63
  3914  000C64  6E14               	movwf	(isbtw@low+3)^0,c
  3915  000C66  0ECD               	movlw	205
  3916  000C68  6E15               	movwf	isbtw@high^0,c
  3917  000C6A  0ECC               	movlw	204
  3918  000C6C  6E16               	movwf	(isbtw@high+1)^0,c
  3919  000C6E  0E8C               	movlw	140
  3920  000C70  6E17               	movwf	(isbtw@high+2)^0,c
  3921  000C72  0E3F               	movlw	63
  3922  000C74  6E18               	movwf	(isbtw@high+3)^0,c
  3923  000C76  EC55  F019         	call	_isbtw	;wreg free
  3924  000C7A  040D               	decf	?_isbtw^0,w,c
  3925  000C7C  100E               	iorwf	(?_isbtw+1)^0,w,c
  3926  000C7E  A4D8               	btfss	status,2,c
  3927  000C80  EF44  F006         	goto	u3701
  3928  000C84  EF46  F006         	goto	u3700
  3929  000C88                     u3701:
  3930  000C88  EF9C  F006         	goto	l3783
  3931  000C8C                     u3700:
  3932  000C8C  C07A  F00D         	movff	determine_color_new@RelG,isbtw@num
  3933  000C90  C07B  F00E         	movff	determine_color_new@RelG+1,isbtw@num+1
  3934  000C94  C07C  F00F         	movff	determine_color_new@RelG+2,isbtw@num+2
  3935  000C98  C07D  F010         	movff	determine_color_new@RelG+3,isbtw@num+3
  3936  000C9C  0ECD               	movlw	205
  3937  000C9E  6E11               	movwf	isbtw@low^0,c
  3938  000CA0  0ECC               	movlw	204
  3939  000CA2  6E12               	movwf	(isbtw@low+1)^0,c
  3940  000CA4  0E4C               	movlw	76
  3941  000CA6  6E13               	movwf	(isbtw@low+2)^0,c
  3942  000CA8  0E3F               	movlw	63
  3943  000CAA  6E14               	movwf	(isbtw@low+3)^0,c
  3944  000CAC  0E00               	movlw	0
  3945  000CAE  6E15               	movwf	isbtw@high^0,c
  3946  000CB0  0E00               	movlw	0
  3947  000CB2  6E16               	movwf	(isbtw@high+1)^0,c
  3948  000CB4  0E80               	movlw	128
  3949  000CB6  6E17               	movwf	(isbtw@high+2)^0,c
  3950  000CB8  0E3F               	movlw	63
  3951  000CBA  6E18               	movwf	(isbtw@high+3)^0,c
  3952  000CBC  EC55  F019         	call	_isbtw	;wreg free
  3953  000CC0  040D               	decf	?_isbtw^0,w,c
  3954  000CC2  100E               	iorwf	(?_isbtw+1)^0,w,c
  3955  000CC4  A4D8               	btfss	status,2,c
  3956  000CC6  EF67  F006         	goto	u3711
  3957  000CCA  EF69  F006         	goto	u3710
  3958  000CCE                     u3711:
  3959  000CCE  EF9C  F006         	goto	l3783
  3960  000CD2                     u3710:
  3961  000CD2  C07E  F00D         	movff	determine_color_new@RelB,isbtw@num
  3962  000CD6  C07F  F00E         	movff	determine_color_new@RelB+1,isbtw@num+1
  3963  000CDA  C080  F00F         	movff	determine_color_new@RelB+2,isbtw@num+2
  3964  000CDE  C081  F010         	movff	determine_color_new@RelB+3,isbtw@num+3
  3965  000CE2  0E33               	movlw	51
  3966  000CE4  6E11               	movwf	isbtw@low^0,c
  3967  000CE6  0E33               	movlw	51
  3968  000CE8  6E12               	movwf	(isbtw@low+1)^0,c
  3969  000CEA  0E73               	movlw	115
  3970  000CEC  6E13               	movwf	(isbtw@low+2)^0,c
  3971  000CEE  0E3F               	movlw	63
  3972  000CF0  6E14               	movwf	(isbtw@low+3)^0,c
  3973  000CF2  0ECD               	movlw	205
  3974  000CF4  6E15               	movwf	isbtw@high^0,c
  3975  000CF6  0ECC               	movlw	204
  3976  000CF8  6E16               	movwf	(isbtw@high+1)^0,c
  3977  000CFA  0E8C               	movlw	140
  3978  000CFC  6E17               	movwf	(isbtw@high+2)^0,c
  3979  000CFE  0E3F               	movlw	63
  3980  000D00  6E18               	movwf	(isbtw@high+3)^0,c
  3981  000D02  EC55  F019         	call	_isbtw	;wreg free
  3982  000D06  040D               	decf	?_isbtw^0,w,c
  3983  000D08  100E               	iorwf	(?_isbtw+1)^0,w,c
  3984  000D0A  A4D8               	btfss	status,2,c
  3985  000D0C  EF8A  F006         	goto	u3721
  3986  000D10  EF8C  F006         	goto	u3720
  3987  000D14                     u3721:
  3988  000D14  EF9C  F006         	goto	l3783
  3989  000D18                     u3720:
  3990  000D18  0E7B               	movlw	123
  3991  000D1A  0100               	movlb	0	; () banked
  3992  000D1C  5D74               	subwf	determine_color_new@lumin& (0+255),w,b
  3993  000D1E  0E03               	movlw	3
  3994  000D20  5975               	subwfb	(determine_color_new@lumin+1)& (0+255),w,b
  3995  000D22  A0D8               	btfss	status,0,c
  3996  000D24  EF96  F006         	goto	u3731
  3997  000D28  EF98  F006         	goto	u3730
  3998  000D2C                     u3731:
  3999  000D2C  EF9C  F006         	goto	l3783
  4000  000D30                     u3730:
  4001  000D30                     
  4002                           ; BSR set to: 0
  4003                           ;color.c: 167:     {out = 7;}
  4004  000D30  0E00               	movlw	0
  4005  000D32  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  4006  000D34  0E07               	movlw	7
  4007  000D36  6F72               	movwf	determine_color_new@out& (0+255),b
  4008  000D38                     l3783:
  4009                           
  4010                           ;color.c: 170:     if (RedRatio < 50 && GreenRatio < 50 && BlueRatio < 50) {out = 8;}
  4011  000D38  0100               	movlb	0	; () banked
  4012  000D3A  516D               	movf	(determine_color_new@RedRatio+1)& (0+255),w,b
  4013  000D3C  E107               	bnz	u3741
  4014  000D3E  0E32               	movlw	50
  4015  000D40  5D6C               	subwf	determine_color_new@RedRatio& (0+255),w,b
  4016  000D42  B0D8               	btfsc	status,0,c
  4017  000D44  EFA6  F006         	goto	u3741
  4018  000D48  EFA8  F006         	goto	u3740
  4019  000D4C                     u3741:
  4020  000D4C  EFC2  F006         	goto	l3791
  4021  000D50                     u3740:
  4022  000D50                     
  4023                           ; BSR set to: 0
  4024  000D50  516F               	movf	(determine_color_new@GreenRatio+1)& (0+255),w,b
  4025  000D52  E107               	bnz	u3751
  4026  000D54  0E32               	movlw	50
  4027  000D56  5D6E               	subwf	determine_color_new@GreenRatio& (0+255),w,b
  4028  000D58  B0D8               	btfsc	status,0,c
  4029  000D5A  EFB1  F006         	goto	u3751
  4030  000D5E  EFB3  F006         	goto	u3750
  4031  000D62                     u3751:
  4032  000D62  EFC2  F006         	goto	l3791
  4033  000D66                     u3750:
  4034  000D66                     
  4035                           ; BSR set to: 0
  4036  000D66  5171               	movf	(determine_color_new@BlueRatio+1)& (0+255),w,b
  4037  000D68  E107               	bnz	u3761
  4038  000D6A  0E32               	movlw	50
  4039  000D6C  5D70               	subwf	determine_color_new@BlueRatio& (0+255),w,b
  4040  000D6E  B0D8               	btfsc	status,0,c
  4041  000D70  EFBC  F006         	goto	u3761
  4042  000D74  EFBE  F006         	goto	u3760
  4043  000D78                     u3761:
  4044  000D78  EFC2  F006         	goto	l3791
  4045  000D7C                     u3760:
  4046  000D7C                     
  4047                           ; BSR set to: 0
  4048  000D7C  0E00               	movlw	0
  4049  000D7E  6F73               	movwf	(determine_color_new@out+1)& (0+255),b
  4050  000D80  0E08               	movlw	8
  4051  000D82  6F72               	movwf	determine_color_new@out& (0+255),b
  4052  000D84                     l3791:
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;color.c: 172:     return out;
  4056  000D84  C072  F05B         	movff	determine_color_new@out,?_determine_color_new
  4057  000D88  C073  F05C         	movff	determine_color_new@out+1,?_determine_color_new+1
  4058  000D8C                     
  4059                           ; BSR set to: 0
  4060  000D8C  0012               	return		;funcret
  4061  000D8E                     __end_of_determine_color_new:
  4062                           	callstack 0
  4063                           
  4064 ;; *************** function _isbtw *****************
  4065 ;; Defined at:
  4066 ;;		line 96 in file "color.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  num             4   12[COMRAM] float 
  4069 ;;  low             4   16[COMRAM] float 
  4070 ;;  high            4   20[COMRAM] float 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;		None
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  2   12[COMRAM] unsigned int 
  4075 ;; Registers used:
  4076 ;;		wreg, status,2, status,0, cstack
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4082 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4085 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4086 ;;Total ram usage:       12 bytes
  4087 ;; Hardware stack levels used: 1
  4088 ;; Hardware stack levels required when called: 2
  4089 ;; This function calls:
  4090 ;;		___flge
  4091 ;; This function is called by:
  4092 ;;		_determine_color_new
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           	psect	text9
  4097  0032AA                     __ptext9:
  4098                           	callstack 0
  4099  0032AA                     _isbtw:
  4100                           	callstack 27
  4101  0032AA                     
  4102                           ;color.c: 97:     if (num>=low && num<=high){return 1;}
  4103  0032AA  C00D  F001         	movff	isbtw@num,___flge@ff1
  4104  0032AE  C00E  F002         	movff	isbtw@num+1,___flge@ff1+1
  4105  0032B2  C00F  F003         	movff	isbtw@num+2,___flge@ff1+2
  4106  0032B6  C010  F004         	movff	isbtw@num+3,___flge@ff1+3
  4107  0032BA  C011  F005         	movff	isbtw@low,___flge@ff2
  4108  0032BE  C012  F006         	movff	isbtw@low+1,___flge@ff2+1
  4109  0032C2  C013  F007         	movff	isbtw@low+2,___flge@ff2+2
  4110  0032C6  C014  F008         	movff	isbtw@low+3,___flge@ff2+3
  4111  0032CA  EC9A  F017         	call	___flge	;wreg free
  4112  0032CE  A0D8               	btfss	status,0,c
  4113  0032D0  EF6C  F019         	goto	u2341
  4114  0032D4  EF6E  F019         	goto	u2340
  4115  0032D8                     u2341:
  4116  0032D8  EF8D  F019         	goto	l2893
  4117  0032DC                     u2340:
  4118  0032DC  C015  F001         	movff	isbtw@high,___flge@ff1
  4119  0032E0  C016  F002         	movff	isbtw@high+1,___flge@ff1+1
  4120  0032E4  C017  F003         	movff	isbtw@high+2,___flge@ff1+2
  4121  0032E8  C018  F004         	movff	isbtw@high+3,___flge@ff1+3
  4122  0032EC  C00D  F005         	movff	isbtw@num,___flge@ff2
  4123  0032F0  C00E  F006         	movff	isbtw@num+1,___flge@ff2+1
  4124  0032F4  C00F  F007         	movff	isbtw@num+2,___flge@ff2+2
  4125  0032F8  C010  F008         	movff	isbtw@num+3,___flge@ff2+3
  4126  0032FC  EC9A  F017         	call	___flge	;wreg free
  4127  003300  A0D8               	btfss	status,0,c
  4128  003302  EF85  F019         	goto	u2351
  4129  003306  EF87  F019         	goto	u2350
  4130  00330A                     u2351:
  4131  00330A  EF8D  F019         	goto	l2893
  4132  00330E                     u2350:
  4133  00330E  0E00               	movlw	0
  4134  003310  6E0E               	movwf	(?_isbtw+1)^0,c
  4135  003312  0E01               	movlw	1
  4136  003314  6E0D               	movwf	?_isbtw^0,c
  4137  003316  EF91  F019         	goto	l73
  4138  00331A                     l2893:
  4139  00331A  0E00               	movlw	0
  4140  00331C  6E0E               	movwf	(?_isbtw+1)^0,c
  4141  00331E  0E00               	movlw	0
  4142  003320  6E0D               	movwf	?_isbtw^0,c
  4143  003322                     l73:
  4144  003322  0012               	return		;funcret
  4145  003324                     __end_of_isbtw:
  4146                           	callstack 0
  4147                           
  4148 ;; *************** function ___flge *****************
  4149 ;; Defined at:
  4150 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  ff1             4    0[COMRAM] unsigned int 
  4153 ;;  ff2             4    4[COMRAM] unsigned int 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;		None
  4156 ;; Return value:  Size  Location     Type
  4157 ;;		None               void
  4158 ;; Registers used:
  4159 ;;		wreg, status,2, status,0
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4165 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4167 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4168 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4169 ;;Total ram usage:       12 bytes
  4170 ;; Hardware stack levels used: 1
  4171 ;; Hardware stack levels required when called: 1
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_isbtw
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text10
  4180  002F34                     __ptext10:
  4181                           	callstack 0
  4182  002F34                     ___flge:
  4183                           	callstack 27
  4184  002F34  0E00               	movlw	0
  4185  002F36  1401               	andwf	___flge@ff1^0,w,c
  4186  002F38  6E09               	movwf	??___flge^0,c
  4187  002F3A  0E00               	movlw	0
  4188  002F3C  1402               	andwf	(___flge@ff1+1)^0,w,c
  4189  002F3E  6E0A               	movwf	(??___flge+1)^0,c
  4190  002F40  0E80               	movlw	128
  4191  002F42  1403               	andwf	(___flge@ff1+2)^0,w,c
  4192  002F44  6E0B               	movwf	(??___flge+2)^0,c
  4193  002F46  0E7F               	movlw	127
  4194  002F48  1404               	andwf	(___flge@ff1+3)^0,w,c
  4195  002F4A  6E0C               	movwf	(??___flge+3)^0,c
  4196  002F4C  5009               	movf	??___flge^0,w,c
  4197  002F4E  100A               	iorwf	(??___flge+1)^0,w,c
  4198  002F50  100B               	iorwf	(??___flge+2)^0,w,c
  4199  002F52  100C               	iorwf	(??___flge+3)^0,w,c
  4200  002F54  A4D8               	btfss	status,2,c
  4201  002F56  EFAF  F017         	goto	u2291
  4202  002F5A  EFB1  F017         	goto	u2290
  4203  002F5E                     u2291:
  4204  002F5E  EFB9  F017         	goto	l2827
  4205  002F62                     u2290:
  4206  002F62  0E00               	movlw	0
  4207  002F64  6E01               	movwf	___flge@ff1^0,c
  4208  002F66  0E00               	movlw	0
  4209  002F68  6E02               	movwf	(___flge@ff1+1)^0,c
  4210  002F6A  0E00               	movlw	0
  4211  002F6C  6E03               	movwf	(___flge@ff1+2)^0,c
  4212  002F6E  0E00               	movlw	0
  4213  002F70  6E04               	movwf	(___flge@ff1+3)^0,c
  4214  002F72                     l2827:
  4215  002F72  0E00               	movlw	0
  4216  002F74  1405               	andwf	___flge@ff2^0,w,c
  4217  002F76  6E09               	movwf	??___flge^0,c
  4218  002F78  0E00               	movlw	0
  4219  002F7A  1406               	andwf	(___flge@ff2+1)^0,w,c
  4220  002F7C  6E0A               	movwf	(??___flge+1)^0,c
  4221  002F7E  0E80               	movlw	128
  4222  002F80  1407               	andwf	(___flge@ff2+2)^0,w,c
  4223  002F82  6E0B               	movwf	(??___flge+2)^0,c
  4224  002F84  0E7F               	movlw	127
  4225  002F86  1408               	andwf	(___flge@ff2+3)^0,w,c
  4226  002F88  6E0C               	movwf	(??___flge+3)^0,c
  4227  002F8A  5009               	movf	??___flge^0,w,c
  4228  002F8C  100A               	iorwf	(??___flge+1)^0,w,c
  4229  002F8E  100B               	iorwf	(??___flge+2)^0,w,c
  4230  002F90  100C               	iorwf	(??___flge+3)^0,w,c
  4231  002F92  A4D8               	btfss	status,2,c
  4232  002F94  EFCE  F017         	goto	u2301
  4233  002F98  EFD0  F017         	goto	u2300
  4234  002F9C                     u2301:
  4235  002F9C  EFD8  F017         	goto	l2831
  4236  002FA0                     u2300:
  4237  002FA0  0E00               	movlw	0
  4238  002FA2  6E05               	movwf	___flge@ff2^0,c
  4239  002FA4  0E00               	movlw	0
  4240  002FA6  6E06               	movwf	(___flge@ff2+1)^0,c
  4241  002FA8  0E00               	movlw	0
  4242  002FAA  6E07               	movwf	(___flge@ff2+2)^0,c
  4243  002FAC  0E00               	movlw	0
  4244  002FAE  6E08               	movwf	(___flge@ff2+3)^0,c
  4245  002FB0                     l2831:
  4246  002FB0  AE04               	btfss	(___flge@ff1+3)^0,7,c
  4247  002FB2  EFDD  F017         	goto	u2311
  4248  002FB6  EFDF  F017         	goto	u2310
  4249  002FBA                     u2311:
  4250  002FBA  EFE8  F017         	goto	l2835
  4251  002FBE                     u2310:
  4252  002FBE  6C01               	negf	___flge@ff1^0,c
  4253  002FC0  1E02               	comf	(___flge@ff1+1)^0,f,c
  4254  002FC2  B0D8               	btfsc	status,0,c
  4255  002FC4  2A02               	incf	(___flge@ff1+1)^0,f,c
  4256  002FC6  1E03               	comf	(___flge@ff1+2)^0,f,c
  4257  002FC8  B0D8               	btfsc	status,0,c
  4258  002FCA  2A03               	incf	(___flge@ff1+2)^0,f,c
  4259  002FCC  0E80               	movlw	128
  4260  002FCE  5604               	subfwb	(___flge@ff1+3)^0,f,c
  4261  002FD0                     l2835:
  4262  002FD0  AE08               	btfss	(___flge@ff2+3)^0,7,c
  4263  002FD2  EFED  F017         	goto	u2321
  4264  002FD6  EFEF  F017         	goto	u2320
  4265  002FDA                     u2321:
  4266  002FDA  EFF8  F017         	goto	l801
  4267  002FDE                     u2320:
  4268  002FDE  6C05               	negf	___flge@ff2^0,c
  4269  002FE0  1E06               	comf	(___flge@ff2+1)^0,f,c
  4270  002FE2  B0D8               	btfsc	status,0,c
  4271  002FE4  2A06               	incf	(___flge@ff2+1)^0,f,c
  4272  002FE6  1E07               	comf	(___flge@ff2+2)^0,f,c
  4273  002FE8  B0D8               	btfsc	status,0,c
  4274  002FEA  2A07               	incf	(___flge@ff2+2)^0,f,c
  4275  002FEC  0E80               	movlw	128
  4276  002FEE  5608               	subfwb	(___flge@ff2+3)^0,f,c
  4277  002FF0                     l801:
  4278  002FF0  0E00               	movlw	0
  4279  002FF2  1A01               	xorwf	___flge@ff1^0,f,c
  4280  002FF4  0E00               	movlw	0
  4281  002FF6  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  4282  002FF8  0E00               	movlw	0
  4283  002FFA  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  4284  002FFC  0E80               	movlw	128
  4285  002FFE  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  4286  003000  0E00               	movlw	0
  4287  003002  1A05               	xorwf	___flge@ff2^0,f,c
  4288  003004  0E00               	movlw	0
  4289  003006  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4290  003008  0E00               	movlw	0
  4291  00300A  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4292  00300C  0E80               	movlw	128
  4293  00300E  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4294  003010  5005               	movf	___flge@ff2^0,w,c
  4295  003012  5C01               	subwf	___flge@ff1^0,w,c
  4296  003014  5006               	movf	(___flge@ff2+1)^0,w,c
  4297  003016  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4298  003018  5007               	movf	(___flge@ff2+2)^0,w,c
  4299  00301A  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4300  00301C  5008               	movf	(___flge@ff2+3)^0,w,c
  4301  00301E  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4302  003020  B0D8               	btfsc	status,0,c
  4303  003022  EF15  F018         	goto	u2331
  4304  003026  EF17  F018         	goto	u2330
  4305  00302A                     u2331:
  4306  00302A  EF1A  F018         	goto	l2841
  4307  00302E                     u2330:
  4308  00302E  90D8               	bcf	status,0,c
  4309  003030  EF1B  F018         	goto	l806
  4310  003034                     l2841:
  4311  003034  80D8               	bsf	status,0,c
  4312  003036                     l806:
  4313  003036  0012               	return		;funcret
  4314  003038                     __end_of___flge:
  4315                           	callstack 0
  4316                           
  4317 ;; *************** function ___xxtofl *****************
  4318 ;; Defined at:
  4319 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;  sign            1    wreg     unsigned char 
  4322 ;;  val             4    0[COMRAM] long 
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  sign            1    8[COMRAM] unsigned char 
  4325 ;;  arg             4   10[COMRAM] unsigned long 
  4326 ;;  exp             1    9[COMRAM] unsigned char 
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  4    0[COMRAM] unsigned char 
  4329 ;; Registers used:
  4330 ;;		wreg, status,2, status,0
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4336 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4337 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4338 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4339 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4340 ;;Total ram usage:       14 bytes
  4341 ;; Hardware stack levels used: 1
  4342 ;; Hardware stack levels required when called: 1
  4343 ;; This function calls:
  4344 ;;		Nothing
  4345 ;; This function is called by:
  4346 ;;		_determine_color_new
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           	psect	text11
  4351  002646                     __ptext11:
  4352                           	callstack 0
  4353  002646                     ___xxtofl:
  4354                           	callstack 28
  4355                           
  4356                           ;incstack = 0
  4357                           ;___xxtofl@sign stored from wreg
  4358  002646  6E09               	movwf	___xxtofl@sign^0,c
  4359  002648  5009               	movf	___xxtofl@sign^0,w,c
  4360  00264A  B4D8               	btfsc	status,2,c
  4361  00264C  EF2A  F013         	goto	u3291
  4362  002650  EF2C  F013         	goto	u3290
  4363  002654                     u3291:
  4364  002654  EF4E  F013         	goto	l1191
  4365  002658                     u3290:
  4366  002658  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4367  00265A  EF33  F013         	goto	u3300
  4368  00265E  EF31  F013         	goto	u3301
  4369  002662                     u3301:
  4370  002662  EF4E  F013         	goto	l1191
  4371  002666                     u3300:
  4372  002666  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4373  00266A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4374  00266E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4375  002672  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4376  002676  1E05               	comf	??___xxtofl^0,f,c
  4377  002678  1E06               	comf	(??___xxtofl+1)^0,f,c
  4378  00267A  1E07               	comf	(??___xxtofl+2)^0,f,c
  4379  00267C  1E08               	comf	(??___xxtofl+3)^0,f,c
  4380  00267E  2A05               	incf	??___xxtofl^0,f,c
  4381  002680  0E00               	movlw	0
  4382  002682  2206               	addwfc	(??___xxtofl+1)^0,f,c
  4383  002684  2207               	addwfc	(??___xxtofl+2)^0,f,c
  4384  002686  2208               	addwfc	(??___xxtofl+3)^0,f,c
  4385  002688  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4386  00268C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4387  002690  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4388  002694  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4389  002698  EF56  F013         	goto	l3617
  4390  00269C                     l1191:
  4391  00269C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4392  0026A0  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4393  0026A4  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4394  0026A8  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4395  0026AC                     l3617:
  4396  0026AC  5001               	movf	___xxtofl@val^0,w,c
  4397  0026AE  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  4398  0026B0  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  4399  0026B2  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  4400  0026B4  A4D8               	btfss	status,2,c
  4401  0026B6  EF5F  F013         	goto	u3311
  4402  0026BA  EF61  F013         	goto	u3310
  4403  0026BE                     u3311:
  4404  0026BE  EF6B  F013         	goto	l3623
  4405  0026C2                     u3310:
  4406  0026C2  0E00               	movlw	0
  4407  0026C4  6E01               	movwf	?___xxtofl^0,c
  4408  0026C6  0E00               	movlw	0
  4409  0026C8  6E02               	movwf	(?___xxtofl+1)^0,c
  4410  0026CA  0E00               	movlw	0
  4411  0026CC  6E03               	movwf	(?___xxtofl+2)^0,c
  4412  0026CE  0E00               	movlw	0
  4413  0026D0  6E04               	movwf	(?___xxtofl+3)^0,c
  4414  0026D2  EFFC  F013         	goto	l1194
  4415  0026D6                     l3623:
  4416  0026D6  0E96               	movlw	150
  4417  0026D8  6E0A               	movwf	___xxtofl@exp^0,c
  4418  0026DA  EF75  F013         	goto	l3627
  4419  0026DE                     l3625:
  4420  0026DE  2A0A               	incf	___xxtofl@exp^0,f,c
  4421  0026E0  90D8               	bcf	status,0,c
  4422  0026E2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4423  0026E4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4424  0026E6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4425  0026E8  320B               	rrcf	___xxtofl@arg^0,f,c
  4426  0026EA                     l3627:
  4427  0026EA  0E00               	movlw	0
  4428  0026EC  140B               	andwf	___xxtofl@arg^0,w,c
  4429  0026EE  6E05               	movwf	??___xxtofl^0,c
  4430  0026F0  0E00               	movlw	0
  4431  0026F2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4432  0026F4  6E06               	movwf	(??___xxtofl+1)^0,c
  4433  0026F6  0E00               	movlw	0
  4434  0026F8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4435  0026FA  6E07               	movwf	(??___xxtofl+2)^0,c
  4436  0026FC  0EFE               	movlw	254
  4437  0026FE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4438  002700  6E08               	movwf	(??___xxtofl+3)^0,c
  4439  002702  5005               	movf	??___xxtofl^0,w,c
  4440  002704  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4441  002706  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4442  002708  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4443  00270A  A4D8               	btfss	status,2,c
  4444  00270C  EF8A  F013         	goto	u3321
  4445  002710  EF8C  F013         	goto	u3320
  4446  002714                     u3321:
  4447  002714  EF6F  F013         	goto	l3625
  4448  002718                     u3320:
  4449  002718  EF9A  F013         	goto	l1198
  4450  00271C                     l3629:
  4451  00271C  2A0A               	incf	___xxtofl@exp^0,f,c
  4452  00271E  0E01               	movlw	1
  4453  002720  260B               	addwf	___xxtofl@arg^0,f,c
  4454  002722  0E00               	movlw	0
  4455  002724  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  4456  002726  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  4457  002728  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  4458  00272A  90D8               	bcf	status,0,c
  4459  00272C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4460  00272E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4461  002730  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4462  002732  320B               	rrcf	___xxtofl@arg^0,f,c
  4463  002734                     l1198:
  4464  002734  0E00               	movlw	0
  4465  002736  140B               	andwf	___xxtofl@arg^0,w,c
  4466  002738  6E05               	movwf	??___xxtofl^0,c
  4467  00273A  0E00               	movlw	0
  4468  00273C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4469  00273E  6E06               	movwf	(??___xxtofl+1)^0,c
  4470  002740  0E00               	movlw	0
  4471  002742  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4472  002744  6E07               	movwf	(??___xxtofl+2)^0,c
  4473  002746  0EFF               	movlw	255
  4474  002748  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4475  00274A  6E08               	movwf	(??___xxtofl+3)^0,c
  4476  00274C  5005               	movf	??___xxtofl^0,w,c
  4477  00274E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4478  002750  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4479  002752  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4480  002754  A4D8               	btfss	status,2,c
  4481  002756  EFAF  F013         	goto	u3331
  4482  00275A  EFB1  F013         	goto	u3330
  4483  00275E                     u3331:
  4484  00275E  EF8E  F013         	goto	l3629
  4485  002762                     u3330:
  4486  002762  EFB9  F013         	goto	l3637
  4487  002766                     l3635:
  4488  002766  060A               	decf	___xxtofl@exp^0,f,c
  4489  002768  90D8               	bcf	status,0,c
  4490  00276A  360B               	rlcf	___xxtofl@arg^0,f,c
  4491  00276C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  4492  00276E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  4493  002770  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  4494  002772                     l3637:
  4495  002772  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  4496  002774  EFBE  F013         	goto	u3341
  4497  002778  EFC0  F013         	goto	u3340
  4498  00277C                     u3341:
  4499  00277C  EFC8  F013         	goto	l1205
  4500  002780                     u3340:
  4501  002780  0E02               	movlw	2
  4502  002782  600A               	cpfslt	___xxtofl@exp^0,c
  4503  002784  EFC6  F013         	goto	u3351
  4504  002788  EFC8  F013         	goto	u3350
  4505  00278C                     u3351:
  4506  00278C  EFB3  F013         	goto	l3635
  4507  002790                     u3350:
  4508  002790                     l1205:
  4509  002790  B00A               	btfsc	___xxtofl@exp^0,0,c
  4510  002792  EFCD  F013         	goto	u3361
  4511  002796  EFCF  F013         	goto	u3360
  4512  00279A                     u3361:
  4513  00279A  EFD0  F013         	goto	l3643
  4514  00279E                     u3360:
  4515  00279E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  4516  0027A0                     l3643:
  4517  0027A0  90D8               	bcf	status,0,c
  4518  0027A2  320A               	rrcf	___xxtofl@exp^0,f,c
  4519  0027A4  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  4520  0027A8  6A06               	clrf	(??___xxtofl+1)^0,c
  4521  0027AA  6A07               	clrf	(??___xxtofl+2)^0,c
  4522  0027AC  6A08               	clrf	(??___xxtofl+3)^0,c
  4523  0027AE  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  4524  0027B2  6A07               	clrf	(??___xxtofl+2)^0,c
  4525  0027B4  6A06               	clrf	(??___xxtofl+1)^0,c
  4526  0027B6  6A05               	clrf	??___xxtofl^0,c
  4527  0027B8  5005               	movf	??___xxtofl^0,w,c
  4528  0027BA  120B               	iorwf	___xxtofl@arg^0,f,c
  4529  0027BC  5006               	movf	(??___xxtofl+1)^0,w,c
  4530  0027BE  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  4531  0027C0  5007               	movf	(??___xxtofl+2)^0,w,c
  4532  0027C2  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  4533  0027C4  5008               	movf	(??___xxtofl+3)^0,w,c
  4534  0027C6  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  4535  0027C8  5009               	movf	___xxtofl@sign^0,w,c
  4536  0027CA  B4D8               	btfsc	status,2,c
  4537  0027CC  EFEA  F013         	goto	u3371
  4538  0027D0  EFEC  F013         	goto	u3370
  4539  0027D4                     u3371:
  4540  0027D4  EFF4  F013         	goto	l3653
  4541  0027D8                     u3370:
  4542  0027D8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4543  0027DA  EFF3  F013         	goto	u3380
  4544  0027DE  EFF1  F013         	goto	u3381
  4545  0027E2                     u3381:
  4546  0027E2  EFF4  F013         	goto	l3653
  4547  0027E6                     u3380:
  4548  0027E6  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  4549  0027E8                     l3653:
  4550  0027E8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  4551  0027EC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  4552  0027F0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  4553  0027F4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  4554  0027F8                     l1194:
  4555  0027F8  0012               	return		;funcret
  4556  0027FA                     __end_of___xxtofl:
  4557                           	callstack 0
  4558                           
  4559 ;; *************** function ___fltol *****************
  4560 ;; Defined at:
  4561 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  f1              4   80[COMRAM] unsigned char 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  exp1            1   89[COMRAM] unsigned char 
  4566 ;;  sign1           1   88[COMRAM] unsigned char 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  4   80[COMRAM] long 
  4569 ;; Registers used:
  4570 ;;		wreg, status,2, status,0
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4576 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4577 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4578 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4579 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4580 ;;Total ram usage:       10 bytes
  4581 ;; Hardware stack levels used: 1
  4582 ;; Hardware stack levels required when called: 1
  4583 ;; This function calls:
  4584 ;;		Nothing
  4585 ;; This function is called by:
  4586 ;;		_determine_color_new
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           	psect	text12
  4591  002E2E                     __ptext12:
  4592                           	callstack 0
  4593  002E2E                     ___fltol:
  4594                           	callstack 28
  4595  002E2E  3453               	rlcf	(___fltol@f1+2)^0,w,c
  4596  002E30  3454               	rlcf	(___fltol@f1+3)^0,w,c
  4597  002E32  6E5A               	movwf	___fltol@exp1^0,c
  4598  002E34  505A               	movf	___fltol@exp1^0,w,c
  4599  002E36  A4D8               	btfss	status,2,c
  4600  002E38  EF20  F017         	goto	u3221
  4601  002E3C  EF22  F017         	goto	u3220
  4602  002E40                     u3221:
  4603  002E40  EF2C  F017         	goto	l3573
  4604  002E44                     u3220:
  4605  002E44                     l3569:
  4606  002E44  0E00               	movlw	0
  4607  002E46  6E51               	movwf	?___fltol^0,c
  4608  002E48  0E00               	movlw	0
  4609  002E4A  6E52               	movwf	(?___fltol+1)^0,c
  4610  002E4C  0E00               	movlw	0
  4611  002E4E  6E53               	movwf	(?___fltol+2)^0,c
  4612  002E50  0E00               	movlw	0
  4613  002E52  6E54               	movwf	(?___fltol+3)^0,c
  4614  002E54  EF99  F017         	goto	l833
  4615  002E58                     l3573:
  4616  002E58  C051  F055         	movff	___fltol@f1,??___fltol
  4617  002E5C  C052  F056         	movff	___fltol@f1+1,??___fltol+1
  4618  002E60  C053  F057         	movff	___fltol@f1+2,??___fltol+2
  4619  002E64  C054  F058         	movff	___fltol@f1+3,??___fltol+3
  4620  002E68  0E20               	movlw	32
  4621  002E6A  EF3C  F017         	goto	u3230
  4622  002E6E                     u3235:
  4623  002E6E  90D8               	bcf	status,0,c
  4624  002E70  3258               	rrcf	(??___fltol+3)^0,f,c
  4625  002E72  3257               	rrcf	(??___fltol+2)^0,f,c
  4626  002E74  3256               	rrcf	(??___fltol+1)^0,f,c
  4627  002E76  3255               	rrcf	??___fltol^0,f,c
  4628  002E78                     u3230:
  4629  002E78  2EE8               	decfsz	wreg,f,c
  4630  002E7A  EF37  F017         	goto	u3235
  4631  002E7E  5055               	movf	??___fltol^0,w,c
  4632  002E80  6E59               	movwf	___fltol@sign1^0,c
  4633  002E82  8E53               	bsf	(___fltol@f1+2)^0,7,c
  4634  002E84  0EFF               	movlw	255
  4635  002E86  1651               	andwf	___fltol@f1^0,f,c
  4636  002E88  0EFF               	movlw	255
  4637  002E8A  1652               	andwf	(___fltol@f1+1)^0,f,c
  4638  002E8C  0EFF               	movlw	255
  4639  002E8E  1653               	andwf	(___fltol@f1+2)^0,f,c
  4640  002E90  0E00               	movlw	0
  4641  002E92  1654               	andwf	(___fltol@f1+3)^0,f,c
  4642  002E94  0E96               	movlw	150
  4643  002E96  5E5A               	subwf	___fltol@exp1^0,f,c
  4644  002E98  BE5A               	btfsc	___fltol@exp1^0,7,c
  4645  002E9A  EF53  F017         	goto	u3240
  4646  002E9E  EF51  F017         	goto	u3241
  4647  002EA2                     u3241:
  4648  002EA2  EF69  F017         	goto	l3593
  4649  002EA6                     u3240:
  4650  002EA6  505A               	movf	___fltol@exp1^0,w,c
  4651  002EA8  0A80               	xorlw	128
  4652  002EAA  0F97               	addlw	151
  4653  002EAC  B0D8               	btfsc	status,0,c
  4654  002EAE  EF5B  F017         	goto	u3251
  4655  002EB2  EF5D  F017         	goto	u3250
  4656  002EB6                     u3251:
  4657  002EB6  EF5F  F017         	goto	l3589
  4658  002EBA                     u3250:
  4659  002EBA  EF22  F017         	goto	l3569
  4660  002EBE                     l3589:
  4661  002EBE  90D8               	bcf	status,0,c
  4662  002EC0  3254               	rrcf	(___fltol@f1+3)^0,f,c
  4663  002EC2  3253               	rrcf	(___fltol@f1+2)^0,f,c
  4664  002EC4  3252               	rrcf	(___fltol@f1+1)^0,f,c
  4665  002EC6  3251               	rrcf	___fltol@f1^0,f,c
  4666  002EC8  3E5A               	incfsz	___fltol@exp1^0,f,c
  4667  002ECA  EF5F  F017         	goto	l3589
  4668  002ECE  EF81  F017         	goto	l3603
  4669  002ED2                     l3593:
  4670  002ED2  0E1F               	movlw	31
  4671  002ED4  645A               	cpfsgt	___fltol@exp1^0,c
  4672  002ED6  EF6F  F017         	goto	u3261
  4673  002EDA  EF71  F017         	goto	u3260
  4674  002EDE                     u3261:
  4675  002EDE  EF79  F017         	goto	l3601
  4676  002EE2                     u3260:
  4677  002EE2  EF22  F017         	goto	l3569
  4678  002EE6                     l3599:
  4679  002EE6  90D8               	bcf	status,0,c
  4680  002EE8  3651               	rlcf	___fltol@f1^0,f,c
  4681  002EEA  3652               	rlcf	(___fltol@f1+1)^0,f,c
  4682  002EEC  3653               	rlcf	(___fltol@f1+2)^0,f,c
  4683  002EEE  3654               	rlcf	(___fltol@f1+3)^0,f,c
  4684  002EF0  065A               	decf	___fltol@exp1^0,f,c
  4685  002EF2                     l3601:
  4686  002EF2  505A               	movf	___fltol@exp1^0,w,c
  4687  002EF4  A4D8               	btfss	status,2,c
  4688  002EF6  EF7F  F017         	goto	u3271
  4689  002EFA  EF81  F017         	goto	u3270
  4690  002EFE                     u3271:
  4691  002EFE  EF73  F017         	goto	l3599
  4692  002F02                     u3270:
  4693  002F02                     l3603:
  4694  002F02  5059               	movf	___fltol@sign1^0,w,c
  4695  002F04  B4D8               	btfsc	status,2,c
  4696  002F06  EF87  F017         	goto	u3281
  4697  002F0A  EF89  F017         	goto	u3280
  4698  002F0E                     u3281:
  4699  002F0E  EF91  F017         	goto	l3607
  4700  002F12                     u3280:
  4701  002F12  1E54               	comf	(___fltol@f1+3)^0,f,c
  4702  002F14  1E53               	comf	(___fltol@f1+2)^0,f,c
  4703  002F16  1E52               	comf	(___fltol@f1+1)^0,f,c
  4704  002F18  6C51               	negf	___fltol@f1^0,c
  4705  002F1A  0E00               	movlw	0
  4706  002F1C  2252               	addwfc	(___fltol@f1+1)^0,f,c
  4707  002F1E  2253               	addwfc	(___fltol@f1+2)^0,f,c
  4708  002F20  2254               	addwfc	(___fltol@f1+3)^0,f,c
  4709  002F22                     l3607:
  4710  002F22  C051  F051         	movff	___fltol@f1,?___fltol
  4711  002F26  C052  F052         	movff	___fltol@f1+1,?___fltol+1
  4712  002F2A  C053  F053         	movff	___fltol@f1+2,?___fltol+2
  4713  002F2E  C054  F054         	movff	___fltol@f1+3,?___fltol+3
  4714  002F32                     l833:
  4715  002F32  0012               	return		;funcret
  4716  002F34                     __end_of___fltol:
  4717                           	callstack 0
  4718                           
  4719 ;; *************** function ___flmul *****************
  4720 ;; Defined at:
  4721 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  b               4   39[COMRAM] long 
  4724 ;;  a               4   43[COMRAM] long 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  prod            4   58[COMRAM] struct .
  4727 ;;  grs             4   52[COMRAM] unsigned long 
  4728 ;;  temp            2   62[COMRAM] struct .
  4729 ;;  bexp            1   57[COMRAM] unsigned char 
  4730 ;;  aexp            1   56[COMRAM] unsigned char 
  4731 ;;  sign            1   51[COMRAM] unsigned char 
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  4   39[COMRAM] unsigned char 
  4734 ;; Registers used:
  4735 ;;		wreg, status,2, status,0, prodl, prodh
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4741 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4742 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4743 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4744 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4745 ;;Total ram usage:       25 bytes
  4746 ;; Hardware stack levels used: 1
  4747 ;; Hardware stack levels required when called: 1
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_determine_color_new
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text13
  4756  001CAE                     __ptext13:
  4757                           	callstack 0
  4758  001CAE                     ___flmul:
  4759                           	callstack 28
  4760  001CAE  502B               	movf	(___flmul@b+3)^0,w,c
  4761  001CB0  0B80               	andlw	128
  4762  001CB2  6E34               	movwf	___flmul@sign^0,c
  4763  001CB4  502B               	movf	(___flmul@b+3)^0,w,c
  4764  001CB6  242B               	addwf	(___flmul@b+3)^0,w,c
  4765  001CB8  6E3A               	movwf	___flmul@bexp^0,c
  4766  001CBA  AE2A               	btfss	(___flmul@b+2)^0,7,c
  4767  001CBC  EF62  F00E         	goto	u3031
  4768  001CC0  EF64  F00E         	goto	u3030
  4769  001CC4                     u3031:
  4770  001CC4  EF65  F00E         	goto	l3443
  4771  001CC8                     u3030:
  4772  001CC8  803A               	bsf	___flmul@bexp^0,0,c
  4773  001CCA                     l3443:
  4774  001CCA  503A               	movf	___flmul@bexp^0,w,c
  4775  001CCC  B4D8               	btfsc	status,2,c
  4776  001CCE  EF6B  F00E         	goto	u3041
  4777  001CD2  EF6D  F00E         	goto	u3040
  4778  001CD6                     u3041:
  4779  001CD6  EF80  F00E         	goto	l3451
  4780  001CDA                     u3040:
  4781  001CDA  283A               	incf	___flmul@bexp^0,w,c
  4782  001CDC  A4D8               	btfss	status,2,c
  4783  001CDE  EF73  F00E         	goto	u3051
  4784  001CE2  EF75  F00E         	goto	u3050
  4785  001CE6                     u3051:
  4786  001CE6  EF7D  F00E         	goto	l3449
  4787  001CEA                     u3050:
  4788  001CEA  0E00               	movlw	0
  4789  001CEC  6E28               	movwf	___flmul@b^0,c
  4790  001CEE  0E00               	movlw	0
  4791  001CF0  6E29               	movwf	(___flmul@b+1)^0,c
  4792  001CF2  0E00               	movlw	0
  4793  001CF4  6E2A               	movwf	(___flmul@b+2)^0,c
  4794  001CF6  0E00               	movlw	0
  4795  001CF8  6E2B               	movwf	(___flmul@b+3)^0,c
  4796  001CFA                     l3449:
  4797  001CFA  8E2A               	bsf	(___flmul@b+2)^0,7,c
  4798  001CFC  EF88  F00E         	goto	l3453
  4799  001D00                     l3451:
  4800  001D00  0E00               	movlw	0
  4801  001D02  6E28               	movwf	___flmul@b^0,c
  4802  001D04  0E00               	movlw	0
  4803  001D06  6E29               	movwf	(___flmul@b+1)^0,c
  4804  001D08  0E00               	movlw	0
  4805  001D0A  6E2A               	movwf	(___flmul@b+2)^0,c
  4806  001D0C  0E00               	movlw	0
  4807  001D0E  6E2B               	movwf	(___flmul@b+3)^0,c
  4808  001D10                     l3453:
  4809  001D10  502F               	movf	(___flmul@a+3)^0,w,c
  4810  001D12  0B80               	andlw	128
  4811  001D14  1A34               	xorwf	___flmul@sign^0,f,c
  4812  001D16  502F               	movf	(___flmul@a+3)^0,w,c
  4813  001D18  242F               	addwf	(___flmul@a+3)^0,w,c
  4814  001D1A  6E39               	movwf	___flmul@aexp^0,c
  4815  001D1C  AE2E               	btfss	(___flmul@a+2)^0,7,c
  4816  001D1E  EF93  F00E         	goto	u3061
  4817  001D22  EF95  F00E         	goto	u3060
  4818  001D26                     u3061:
  4819  001D26  EF96  F00E         	goto	l3461
  4820  001D2A                     u3060:
  4821  001D2A  8039               	bsf	___flmul@aexp^0,0,c
  4822  001D2C                     l3461:
  4823  001D2C  5039               	movf	___flmul@aexp^0,w,c
  4824  001D2E  B4D8               	btfsc	status,2,c
  4825  001D30  EF9C  F00E         	goto	u3071
  4826  001D34  EF9E  F00E         	goto	u3070
  4827  001D38                     u3071:
  4828  001D38  EFB1  F00E         	goto	l3469
  4829  001D3C                     u3070:
  4830  001D3C  2839               	incf	___flmul@aexp^0,w,c
  4831  001D3E  A4D8               	btfss	status,2,c
  4832  001D40  EFA4  F00E         	goto	u3081
  4833  001D44  EFA6  F00E         	goto	u3080
  4834  001D48                     u3081:
  4835  001D48  EFAE  F00E         	goto	l3467
  4836  001D4C                     u3080:
  4837  001D4C  0E00               	movlw	0
  4838  001D4E  6E2C               	movwf	___flmul@a^0,c
  4839  001D50  0E00               	movlw	0
  4840  001D52  6E2D               	movwf	(___flmul@a+1)^0,c
  4841  001D54  0E00               	movlw	0
  4842  001D56  6E2E               	movwf	(___flmul@a+2)^0,c
  4843  001D58  0E00               	movlw	0
  4844  001D5A  6E2F               	movwf	(___flmul@a+3)^0,c
  4845  001D5C                     l3467:
  4846  001D5C  8E2E               	bsf	(___flmul@a+2)^0,7,c
  4847  001D5E  EFB9  F00E         	goto	l1150
  4848  001D62                     l3469:
  4849  001D62  0E00               	movlw	0
  4850  001D64  6E2C               	movwf	___flmul@a^0,c
  4851  001D66  0E00               	movlw	0
  4852  001D68  6E2D               	movwf	(___flmul@a+1)^0,c
  4853  001D6A  0E00               	movlw	0
  4854  001D6C  6E2E               	movwf	(___flmul@a+2)^0,c
  4855  001D6E  0E00               	movlw	0
  4856  001D70  6E2F               	movwf	(___flmul@a+3)^0,c
  4857  001D72                     l1150:
  4858  001D72  5039               	movf	___flmul@aexp^0,w,c
  4859  001D74  B4D8               	btfsc	status,2,c
  4860  001D76  EFBF  F00E         	goto	u3091
  4861  001D7A  EFC1  F00E         	goto	u3090
  4862  001D7E                     u3091:
  4863  001D7E  EFC9  F00E         	goto	l3473
  4864  001D82                     u3090:
  4865  001D82  503A               	movf	___flmul@bexp^0,w,c
  4866  001D84  A4D8               	btfss	status,2,c
  4867  001D86  EFC7  F00E         	goto	u3101
  4868  001D8A  EFC9  F00E         	goto	u3100
  4869  001D8E                     u3101:
  4870  001D8E  EFD3  F00E         	goto	l3477
  4871  001D92                     u3100:
  4872  001D92                     l3473:
  4873  001D92  0E00               	movlw	0
  4874  001D94  6E28               	movwf	?___flmul^0,c
  4875  001D96  0E00               	movlw	0
  4876  001D98  6E29               	movwf	(?___flmul+1)^0,c
  4877  001D9A  0E00               	movlw	0
  4878  001D9C  6E2A               	movwf	(?___flmul+2)^0,c
  4879  001D9E  0E00               	movlw	0
  4880  001DA0  6E2B               	movwf	(?___flmul+3)^0,c
  4881  001DA2  EF6B  F010         	goto	l1154
  4882  001DA6                     l3477:
  4883  001DA6  502E               	movf	(___flmul@a+2)^0,w,c
  4884  001DA8  0228               	mulwf	___flmul@b^0,c
  4885  001DAA  CFF3 F03F          	movff	prodl,___flmul@temp
  4886  001DAE  CFF4 F040          	movff	prodh,___flmul@temp+1
  4887  001DB2  503F               	movf	___flmul@temp^0,w,c
  4888  001DB4  6E35               	movwf	___flmul@grs^0,c
  4889  001DB6  6A36               	clrf	(___flmul@grs+1)^0,c
  4890  001DB8  6A37               	clrf	(___flmul@grs+2)^0,c
  4891  001DBA  6A38               	clrf	(___flmul@grs+3)^0,c
  4892  001DBC  5040               	movf	(___flmul@temp+1)^0,w,c
  4893  001DBE  6E3B               	movwf	___flmul@prod^0,c
  4894  001DC0  6A3C               	clrf	(___flmul@prod+1)^0,c
  4895  001DC2  6A3D               	clrf	(___flmul@prod+2)^0,c
  4896  001DC4  6A3E               	clrf	(___flmul@prod+3)^0,c
  4897  001DC6  502D               	movf	(___flmul@a+1)^0,w,c
  4898  001DC8  0229               	mulwf	(___flmul@b+1)^0,c
  4899  001DCA  CFF3 F03F          	movff	prodl,___flmul@temp
  4900  001DCE  CFF4 F040          	movff	prodh,___flmul@temp+1
  4901  001DD2  503F               	movf	___flmul@temp^0,w,c
  4902  001DD4  2635               	addwf	___flmul@grs^0,f,c
  4903  001DD6  0E00               	movlw	0
  4904  001DD8  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4905  001DDA  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4906  001DDC  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4907  001DDE  5040               	movf	(___flmul@temp+1)^0,w,c
  4908  001DE0  263B               	addwf	___flmul@prod^0,f,c
  4909  001DE2  0E00               	movlw	0
  4910  001DE4  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4911  001DE6  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4912  001DE8  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4913  001DEA  502C               	movf	___flmul@a^0,w,c
  4914  001DEC  022A               	mulwf	(___flmul@b+2)^0,c
  4915  001DEE  CFF3 F03F          	movff	prodl,___flmul@temp
  4916  001DF2  CFF4 F040          	movff	prodh,___flmul@temp+1
  4917  001DF6  503F               	movf	___flmul@temp^0,w,c
  4918  001DF8  2635               	addwf	___flmul@grs^0,f,c
  4919  001DFA  0E00               	movlw	0
  4920  001DFC  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4921  001DFE  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4922  001E00  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4923  001E02  5040               	movf	(___flmul@temp+1)^0,w,c
  4924  001E04  263B               	addwf	___flmul@prod^0,f,c
  4925  001E06  0E00               	movlw	0
  4926  001E08  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4927  001E0A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4928  001E0C  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4929  001E0E  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4930  001E12  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4931  001E16  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4932  001E1A  6A35               	clrf	___flmul@grs^0,c
  4933  001E1C  502C               	movf	___flmul@a^0,w,c
  4934  001E1E  0229               	mulwf	(___flmul@b+1)^0,c
  4935  001E20  CFF3 F03F          	movff	prodl,___flmul@temp
  4936  001E24  CFF4 F040          	movff	prodh,___flmul@temp+1
  4937  001E28  503F               	movf	___flmul@temp^0,w,c
  4938  001E2A  2635               	addwf	___flmul@grs^0,f,c
  4939  001E2C  5040               	movf	(___flmul@temp+1)^0,w,c
  4940  001E2E  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4941  001E30  0E00               	movlw	0
  4942  001E32  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4943  001E34  0E00               	movlw	0
  4944  001E36  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4945  001E38  502D               	movf	(___flmul@a+1)^0,w,c
  4946  001E3A  0228               	mulwf	___flmul@b^0,c
  4947  001E3C  CFF3 F03F          	movff	prodl,___flmul@temp
  4948  001E40  CFF4 F040          	movff	prodh,___flmul@temp+1
  4949  001E44  503F               	movf	___flmul@temp^0,w,c
  4950  001E46  2635               	addwf	___flmul@grs^0,f,c
  4951  001E48  5040               	movf	(___flmul@temp+1)^0,w,c
  4952  001E4A  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4953  001E4C  0E00               	movlw	0
  4954  001E4E  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4955  001E50  0E00               	movlw	0
  4956  001E52  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4957  001E54  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4958  001E58  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4959  001E5C  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4960  001E60  6A35               	clrf	___flmul@grs^0,c
  4961  001E62  502C               	movf	___flmul@a^0,w,c
  4962  001E64  0228               	mulwf	___flmul@b^0,c
  4963  001E66  CFF3 F03F          	movff	prodl,___flmul@temp
  4964  001E6A  CFF4 F040          	movff	prodh,___flmul@temp+1
  4965  001E6E  503F               	movf	___flmul@temp^0,w,c
  4966  001E70  2635               	addwf	___flmul@grs^0,f,c
  4967  001E72  5040               	movf	(___flmul@temp+1)^0,w,c
  4968  001E74  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4969  001E76  0E00               	movlw	0
  4970  001E78  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4971  001E7A  0E00               	movlw	0
  4972  001E7C  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4973  001E7E  502E               	movf	(___flmul@a+2)^0,w,c
  4974  001E80  0229               	mulwf	(___flmul@b+1)^0,c
  4975  001E82  CFF3 F03F          	movff	prodl,___flmul@temp
  4976  001E86  CFF4 F040          	movff	prodh,___flmul@temp+1
  4977  001E8A  503F               	movf	___flmul@temp^0,w,c
  4978  001E8C  263B               	addwf	___flmul@prod^0,f,c
  4979  001E8E  5040               	movf	(___flmul@temp+1)^0,w,c
  4980  001E90  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4981  001E92  0E00               	movlw	0
  4982  001E94  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4983  001E96  0E00               	movlw	0
  4984  001E98  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4985  001E9A  502D               	movf	(___flmul@a+1)^0,w,c
  4986  001E9C  022A               	mulwf	(___flmul@b+2)^0,c
  4987  001E9E  CFF3 F03F          	movff	prodl,___flmul@temp
  4988  001EA2  CFF4 F040          	movff	prodh,___flmul@temp+1
  4989  001EA6  503F               	movf	___flmul@temp^0,w,c
  4990  001EA8  263B               	addwf	___flmul@prod^0,f,c
  4991  001EAA  5040               	movf	(___flmul@temp+1)^0,w,c
  4992  001EAC  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4993  001EAE  0E00               	movlw	0
  4994  001EB0  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4995  001EB2  0E00               	movlw	0
  4996  001EB4  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4997  001EB6  502E               	movf	(___flmul@a+2)^0,w,c
  4998  001EB8  022A               	mulwf	(___flmul@b+2)^0,c
  4999  001EBA  CFF3 F03F          	movff	prodl,___flmul@temp
  5000  001EBE  CFF4 F040          	movff	prodh,___flmul@temp+1
  5001  001EC2  503F               	movf	___flmul@temp^0,w,c
  5002  001EC4  6E30               	movwf	??___flmul^0,c
  5003  001EC6  5040               	movf	(___flmul@temp+1)^0,w,c
  5004  001EC8  6E31               	movwf	(??___flmul+1)^0,c
  5005  001ECA  6A32               	clrf	(??___flmul+2)^0,c
  5006  001ECC  6A33               	clrf	(??___flmul+3)^0,c
  5007  001ECE  C032  F033         	movff	??___flmul+2,??___flmul+3
  5008  001ED2  C031  F032         	movff	??___flmul+1,??___flmul+2
  5009  001ED6  C030  F031         	movff	??___flmul,??___flmul+1
  5010  001EDA  6A30               	clrf	??___flmul^0,c
  5011  001EDC  5030               	movf	??___flmul^0,w,c
  5012  001EDE  263B               	addwf	___flmul@prod^0,f,c
  5013  001EE0  5031               	movf	(??___flmul+1)^0,w,c
  5014  001EE2  223C               	addwfc	(___flmul@prod+1)^0,f,c
  5015  001EE4  5032               	movf	(??___flmul+2)^0,w,c
  5016  001EE6  223D               	addwfc	(___flmul@prod+2)^0,f,c
  5017  001EE8  5033               	movf	(??___flmul+3)^0,w,c
  5018  001EEA  223E               	addwfc	(___flmul@prod+3)^0,f,c
  5019  001EEC  C035  F030         	movff	___flmul@grs,??___flmul
  5020  001EF0  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  5021  001EF4  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  5022  001EF8  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  5023  001EFC  0E19               	movlw	25
  5024  001EFE  EF86  F00F         	goto	u3110
  5025  001F02                     u3115:
  5026  001F02  90D8               	bcf	status,0,c
  5027  001F04  3233               	rrcf	(??___flmul+3)^0,f,c
  5028  001F06  3232               	rrcf	(??___flmul+2)^0,f,c
  5029  001F08  3231               	rrcf	(??___flmul+1)^0,f,c
  5030  001F0A  3230               	rrcf	??___flmul^0,f,c
  5031  001F0C                     u3110:
  5032  001F0C  2EE8               	decfsz	wreg,f,c
  5033  001F0E  EF81  F00F         	goto	u3115
  5034  001F12  5030               	movf	??___flmul^0,w,c
  5035  001F14  263B               	addwf	___flmul@prod^0,f,c
  5036  001F16  5031               	movf	(??___flmul+1)^0,w,c
  5037  001F18  223C               	addwfc	(___flmul@prod+1)^0,f,c
  5038  001F1A  5032               	movf	(??___flmul+2)^0,w,c
  5039  001F1C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  5040  001F1E  5033               	movf	(??___flmul+3)^0,w,c
  5041  001F20  223E               	addwfc	(___flmul@prod+3)^0,f,c
  5042  001F22  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  5043  001F26  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  5044  001F2A  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  5045  001F2E  6A35               	clrf	___flmul@grs^0,c
  5046  001F30  5039               	movf	___flmul@aexp^0,w,c
  5047  001F32  C03A  F030         	movff	___flmul@bexp,??___flmul
  5048  001F36  6A31               	clrf	(??___flmul+1)^0,c
  5049  001F38  2630               	addwf	??___flmul^0,f,c
  5050  001F3A  0E00               	movlw	0
  5051  001F3C  2231               	addwfc	(??___flmul+1)^0,f,c
  5052  001F3E  0E82               	movlw	130
  5053  001F40  2430               	addwf	??___flmul^0,w,c
  5054  001F42  6E3F               	movwf	___flmul@temp^0,c
  5055  001F44  0EFF               	movlw	255
  5056  001F46  2031               	addwfc	(??___flmul+1)^0,w,c
  5057  001F48  6E40               	movwf	(___flmul@temp+1)^0,c
  5058  001F4A  EFBC  F00F         	goto	l3525
  5059  001F4E                     l3519:
  5060  001F4E  90D8               	bcf	status,0,c
  5061  001F50  363B               	rlcf	___flmul@prod^0,f,c
  5062  001F52  363C               	rlcf	(___flmul@prod+1)^0,f,c
  5063  001F54  363D               	rlcf	(___flmul@prod+2)^0,f,c
  5064  001F56  363E               	rlcf	(___flmul@prod+3)^0,f,c
  5065  001F58  AE38               	btfss	(___flmul@grs+3)^0,7,c
  5066  001F5A  EFB1  F00F         	goto	u3121
  5067  001F5E  EFB3  F00F         	goto	u3120
  5068  001F62                     u3121:
  5069  001F62  EFB4  F00F         	goto	l1157
  5070  001F66                     u3120:
  5071  001F66  803B               	bsf	___flmul@prod^0,0,c
  5072  001F68                     l1157:
  5073  001F68  90D8               	bcf	status,0,c
  5074  001F6A  3635               	rlcf	___flmul@grs^0,f,c
  5075  001F6C  3636               	rlcf	(___flmul@grs+1)^0,f,c
  5076  001F6E  3637               	rlcf	(___flmul@grs+2)^0,f,c
  5077  001F70  3638               	rlcf	(___flmul@grs+3)^0,f,c
  5078  001F72  063F               	decf	___flmul@temp^0,f,c
  5079  001F74  A0D8               	btfss	status,0,c
  5080  001F76  0640               	decf	(___flmul@temp+1)^0,f,c
  5081  001F78                     l3525:
  5082  001F78  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  5083  001F7A  EFC1  F00F         	goto	u3131
  5084  001F7E  EFC3  F00F         	goto	u3130
  5085  001F82                     u3131:
  5086  001F82  EFA7  F00F         	goto	l3519
  5087  001F86                     u3130:
  5088  001F86  0E00               	movlw	0
  5089  001F88  6E39               	movwf	___flmul@aexp^0,c
  5090  001F8A  AE38               	btfss	(___flmul@grs+3)^0,7,c
  5091  001F8C  EFCA  F00F         	goto	u3141
  5092  001F90  EFCC  F00F         	goto	u3140
  5093  001F94                     u3141:
  5094  001F94  EFF0  F00F         	goto	l1159
  5095  001F98                     u3140:
  5096  001F98  0EFF               	movlw	255
  5097  001F9A  1435               	andwf	___flmul@grs^0,w,c
  5098  001F9C  6E30               	movwf	??___flmul^0,c
  5099  001F9E  0EFF               	movlw	255
  5100  001FA0  1436               	andwf	(___flmul@grs+1)^0,w,c
  5101  001FA2  6E31               	movwf	(??___flmul+1)^0,c
  5102  001FA4  0EFF               	movlw	255
  5103  001FA6  1437               	andwf	(___flmul@grs+2)^0,w,c
  5104  001FA8  6E32               	movwf	(??___flmul+2)^0,c
  5105  001FAA  0E7F               	movlw	127
  5106  001FAC  1438               	andwf	(___flmul@grs+3)^0,w,c
  5107  001FAE  6E33               	movwf	(??___flmul+3)^0,c
  5108  001FB0  5030               	movf	??___flmul^0,w,c
  5109  001FB2  1031               	iorwf	(??___flmul+1)^0,w,c
  5110  001FB4  1032               	iorwf	(??___flmul+2)^0,w,c
  5111  001FB6  1033               	iorwf	(??___flmul+3)^0,w,c
  5112  001FB8  B4D8               	btfsc	status,2,c
  5113  001FBA  EFE1  F00F         	goto	u3151
  5114  001FBE  EFE3  F00F         	goto	u3150
  5115  001FC2                     u3151:
  5116  001FC2  EFE7  F00F         	goto	l1160
  5117  001FC6                     u3150:
  5118  001FC6                     l3533:
  5119  001FC6  0E01               	movlw	1
  5120  001FC8  6E39               	movwf	___flmul@aexp^0,c
  5121  001FCA  EFF0  F00F         	goto	l1159
  5122  001FCE                     l1160:
  5123  001FCE  A03B               	btfss	___flmul@prod^0,0,c
  5124  001FD0  EFEC  F00F         	goto	u3161
  5125  001FD4  EFEE  F00F         	goto	u3160
  5126  001FD8                     u3161:
  5127  001FD8  EFF0  F00F         	goto	l1159
  5128  001FDC                     u3160:
  5129  001FDC  EFE3  F00F         	goto	l3533
  5130  001FE0                     l1159:
  5131  001FE0  5039               	movf	___flmul@aexp^0,w,c
  5132  001FE2  B4D8               	btfsc	status,2,c
  5133  001FE4  EFF6  F00F         	goto	u3171
  5134  001FE8  EFF8  F00F         	goto	u3170
  5135  001FEC                     u3171:
  5136  001FEC  EF1C  F010         	goto	l3545
  5137  001FF0                     u3170:
  5138  001FF0  0E01               	movlw	1
  5139  001FF2  263B               	addwf	___flmul@prod^0,f,c
  5140  001FF4  0E00               	movlw	0
  5141  001FF6  223C               	addwfc	(___flmul@prod+1)^0,f,c
  5142  001FF8  223D               	addwfc	(___flmul@prod+2)^0,f,c
  5143  001FFA  223E               	addwfc	(___flmul@prod+3)^0,f,c
  5144  001FFC  A03E               	btfss	(___flmul@prod+3)^0,0,c
  5145  001FFE  EF03  F010         	goto	u3181
  5146  002002  EF05  F010         	goto	u3180
  5147  002006                     u3181:
  5148  002006  EF1C  F010         	goto	l3545
  5149  00200A                     u3180:
  5150  00200A  C03B  F030         	movff	___flmul@prod,??___flmul
  5151  00200E  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  5152  002012  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  5153  002016  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  5154  00201A  3433               	rlcf	(??___flmul+3)^0,w,c
  5155  00201C  3233               	rrcf	(??___flmul+3)^0,f,c
  5156  00201E  3232               	rrcf	(??___flmul+2)^0,f,c
  5157  002020  3231               	rrcf	(??___flmul+1)^0,f,c
  5158  002022  3230               	rrcf	??___flmul^0,f,c
  5159  002024  C030  F03B         	movff	??___flmul,___flmul@prod
  5160  002028  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  5161  00202C  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  5162  002030  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  5163  002034  4A3F               	infsnz	___flmul@temp^0,f,c
  5164  002036  2A40               	incf	(___flmul@temp+1)^0,f,c
  5165  002038                     l3545:
  5166  002038  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  5167  00203A  EF27  F010         	goto	u3191
  5168  00203E  5040               	movf	(___flmul@temp+1)^0,w,c
  5169  002040  E108               	bnz	u3190
  5170  002042  283F               	incf	___flmul@temp^0,w,c
  5171  002044  A0D8               	btfss	status,0,c
  5172  002046  EF27  F010         	goto	u3191
  5173  00204A  EF29  F010         	goto	u3190
  5174  00204E                     u3191:
  5175  00204E  EF33  F010         	goto	l3549
  5176  002052                     u3190:
  5177  002052  0E00               	movlw	0
  5178  002054  6E3B               	movwf	___flmul@prod^0,c
  5179  002056  0E00               	movlw	0
  5180  002058  6E3C               	movwf	(___flmul@prod+1)^0,c
  5181  00205A  0E80               	movlw	128
  5182  00205C  6E3D               	movwf	(___flmul@prod+2)^0,c
  5183  00205E  0E7F               	movlw	127
  5184  002060  6E3E               	movwf	(___flmul@prod+3)^0,c
  5185  002062  EF61  F010         	goto	l3561
  5186  002066                     l3549:
  5187  002066  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  5188  002068  EF40  F010         	goto	u3200
  5189  00206C  5040               	movf	(___flmul@temp+1)^0,w,c
  5190  00206E  E106               	bnz	u3201
  5191  002070  043F               	decf	___flmul@temp^0,w,c
  5192  002072  B0D8               	btfsc	status,0,c
  5193  002074  EF3E  F010         	goto	u3201
  5194  002078  EF40  F010         	goto	u3200
  5195  00207C                     u3201:
  5196  00207C  EF4C  F010         	goto	l1167
  5197  002080                     u3200:
  5198  002080  0E00               	movlw	0
  5199  002082  6E3B               	movwf	___flmul@prod^0,c
  5200  002084  0E00               	movlw	0
  5201  002086  6E3C               	movwf	(___flmul@prod+1)^0,c
  5202  002088  0E00               	movlw	0
  5203  00208A  6E3D               	movwf	(___flmul@prod+2)^0,c
  5204  00208C  0E00               	movlw	0
  5205  00208E  6E3E               	movwf	(___flmul@prod+3)^0,c
  5206  002090  0E00               	movlw	0
  5207  002092  6E34               	movwf	___flmul@sign^0,c
  5208  002094  EF61  F010         	goto	l3561
  5209  002098                     l1167:
  5210  002098  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  5211  00209C  0EFF               	movlw	255
  5212  00209E  163B               	andwf	___flmul@prod^0,f,c
  5213  0020A0  0EFF               	movlw	255
  5214  0020A2  163C               	andwf	(___flmul@prod+1)^0,f,c
  5215  0020A4  0E7F               	movlw	127
  5216  0020A6  163D               	andwf	(___flmul@prod+2)^0,f,c
  5217  0020A8  0E00               	movlw	0
  5218  0020AA  163E               	andwf	(___flmul@prod+3)^0,f,c
  5219  0020AC  A03A               	btfss	___flmul@bexp^0,0,c
  5220  0020AE  EF5B  F010         	goto	u3211
  5221  0020B2  EF5D  F010         	goto	u3210
  5222  0020B6                     u3211:
  5223  0020B6  EF5E  F010         	goto	l3559
  5224  0020BA                     u3210:
  5225  0020BA  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  5226  0020BC                     l3559:
  5227  0020BC  90D8               	bcf	status,0,c
  5228  0020BE  303A               	rrcf	___flmul@bexp^0,w,c
  5229  0020C0  6E3E               	movwf	(___flmul@prod+3)^0,c
  5230  0020C2                     l3561:
  5231  0020C2  5034               	movf	___flmul@sign^0,w,c
  5232  0020C4  123E               	iorwf	(___flmul@prod+3)^0,f,c
  5233  0020C6  C03B  F028         	movff	___flmul@prod,?___flmul
  5234  0020CA  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  5235  0020CE  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  5236  0020D2  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  5237  0020D6                     l1154:
  5238  0020D6  0012               	return		;funcret
  5239  0020D8                     __end_of___flmul:
  5240                           	callstack 0
  5241                           
  5242 ;; *************** function ___fldiv *****************
  5243 ;; Defined at:
  5244 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  b               4   14[COMRAM] unsigned char 
  5247 ;;  a               4   18[COMRAM] unsigned char 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;  grs             4   33[COMRAM] unsigned long 
  5250 ;;  rem             4   26[COMRAM] unsigned long 
  5251 ;;  new_exp         2   31[COMRAM] short 
  5252 ;;  aexp            1   38[COMRAM] unsigned char 
  5253 ;;  bexp            1   37[COMRAM] unsigned char 
  5254 ;;  sign            1   30[COMRAM] unsigned char 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  4   14[COMRAM] unsigned char 
  5257 ;; Registers used:
  5258 ;;		wreg, status,2, status,0
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5264 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5265 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5266 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5267 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5268 ;;Total ram usage:       25 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; Hardware stack levels required when called: 1
  5271 ;; This function calls:
  5272 ;;		Nothing
  5273 ;; This function is called by:
  5274 ;;		_determine_color_new
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text14
  5279  0020D8                     __ptext14:
  5280                           	callstack 0
  5281  0020D8                     ___fldiv:
  5282                           	callstack 28
  5283  0020D8  5012               	movf	(___fldiv@b+3)^0,w,c
  5284  0020DA  0B80               	andlw	128
  5285  0020DC  6E1F               	movwf	___fldiv@sign^0,c
  5286  0020DE  5012               	movf	(___fldiv@b+3)^0,w,c
  5287  0020E0  2412               	addwf	(___fldiv@b+3)^0,w,c
  5288  0020E2  6E26               	movwf	___fldiv@bexp^0,c
  5289  0020E4  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5290  0020E6  EF77  F010         	goto	u2801
  5291  0020EA  EF79  F010         	goto	u2800
  5292  0020EE                     u2801:
  5293  0020EE  EF7A  F010         	goto	l3305
  5294  0020F2                     u2800:
  5295  0020F2  8026               	bsf	___fldiv@bexp^0,0,c
  5296  0020F4                     l3305:
  5297  0020F4  5026               	movf	___fldiv@bexp^0,w,c
  5298  0020F6  B4D8               	btfsc	status,2,c
  5299  0020F8  EF80  F010         	goto	u2811
  5300  0020FC  EF82  F010         	goto	u2810
  5301  002100                     u2811:
  5302  002100  EF97  F010         	goto	l3315
  5303  002104                     u2810:
  5304  002104  2826               	incf	___fldiv@bexp^0,w,c
  5305  002106  A4D8               	btfss	status,2,c
  5306  002108  EF88  F010         	goto	u2821
  5307  00210C  EF8A  F010         	goto	u2820
  5308  002110                     u2821:
  5309  002110  EF92  F010         	goto	l3311
  5310  002114                     u2820:
  5311  002114  0E00               	movlw	0
  5312  002116  6E0F               	movwf	___fldiv@b^0,c
  5313  002118  0E00               	movlw	0
  5314  00211A  6E10               	movwf	(___fldiv@b+1)^0,c
  5315  00211C  0E00               	movlw	0
  5316  00211E  6E11               	movwf	(___fldiv@b+2)^0,c
  5317  002120  0E00               	movlw	0
  5318  002122  6E12               	movwf	(___fldiv@b+3)^0,c
  5319  002124                     l3311:
  5320  002124  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5321  002126  0E00               	movlw	0
  5322  002128  6E12               	movwf	(___fldiv@b+3)^0,c
  5323  00212A  EF9F  F010         	goto	l3317
  5324  00212E                     l3315:
  5325  00212E  0E00               	movlw	0
  5326  002130  6E0F               	movwf	___fldiv@b^0,c
  5327  002132  0E00               	movlw	0
  5328  002134  6E10               	movwf	(___fldiv@b+1)^0,c
  5329  002136  0E00               	movlw	0
  5330  002138  6E11               	movwf	(___fldiv@b+2)^0,c
  5331  00213A  0E00               	movlw	0
  5332  00213C  6E12               	movwf	(___fldiv@b+3)^0,c
  5333  00213E                     l3317:
  5334  00213E  5016               	movf	(___fldiv@a+3)^0,w,c
  5335  002140  0B80               	andlw	128
  5336  002142  1A1F               	xorwf	___fldiv@sign^0,f,c
  5337  002144  5016               	movf	(___fldiv@a+3)^0,w,c
  5338  002146  2416               	addwf	(___fldiv@a+3)^0,w,c
  5339  002148  6E27               	movwf	___fldiv@aexp^0,c
  5340  00214A  AE15               	btfss	(___fldiv@a+2)^0,7,c
  5341  00214C  EFAA  F010         	goto	u2831
  5342  002150  EFAC  F010         	goto	u2830
  5343  002154                     u2831:
  5344  002154  EFAD  F010         	goto	l3325
  5345  002158                     u2830:
  5346  002158  8027               	bsf	___fldiv@aexp^0,0,c
  5347  00215A                     l3325:
  5348  00215A  5027               	movf	___fldiv@aexp^0,w,c
  5349  00215C  B4D8               	btfsc	status,2,c
  5350  00215E  EFB3  F010         	goto	u2841
  5351  002162  EFB5  F010         	goto	u2840
  5352  002166                     u2841:
  5353  002166  EFCA  F010         	goto	l3335
  5354  00216A                     u2840:
  5355  00216A  2827               	incf	___fldiv@aexp^0,w,c
  5356  00216C  A4D8               	btfss	status,2,c
  5357  00216E  EFBB  F010         	goto	u2851
  5358  002172  EFBD  F010         	goto	u2850
  5359  002176                     u2851:
  5360  002176  EFC5  F010         	goto	l3331
  5361  00217A                     u2850:
  5362  00217A  0E00               	movlw	0
  5363  00217C  6E13               	movwf	___fldiv@a^0,c
  5364  00217E  0E00               	movlw	0
  5365  002180  6E14               	movwf	(___fldiv@a+1)^0,c
  5366  002182  0E00               	movlw	0
  5367  002184  6E15               	movwf	(___fldiv@a+2)^0,c
  5368  002186  0E00               	movlw	0
  5369  002188  6E16               	movwf	(___fldiv@a+3)^0,c
  5370  00218A                     l3331:
  5371  00218A  8E15               	bsf	(___fldiv@a+2)^0,7,c
  5372  00218C  0E00               	movlw	0
  5373  00218E  6E16               	movwf	(___fldiv@a+3)^0,c
  5374  002190  EFD2  F010         	goto	l3337
  5375  002194                     l3335:
  5376  002194  0E00               	movlw	0
  5377  002196  6E13               	movwf	___fldiv@a^0,c
  5378  002198  0E00               	movlw	0
  5379  00219A  6E14               	movwf	(___fldiv@a+1)^0,c
  5380  00219C  0E00               	movlw	0
  5381  00219E  6E15               	movwf	(___fldiv@a+2)^0,c
  5382  0021A0  0E00               	movlw	0
  5383  0021A2  6E16               	movwf	(___fldiv@a+3)^0,c
  5384  0021A4                     l3337:
  5385  0021A4  5013               	movf	___fldiv@a^0,w,c
  5386  0021A6  1014               	iorwf	(___fldiv@a+1)^0,w,c
  5387  0021A8  1015               	iorwf	(___fldiv@a+2)^0,w,c
  5388  0021AA  1016               	iorwf	(___fldiv@a+3)^0,w,c
  5389  0021AC  A4D8               	btfss	status,2,c
  5390  0021AE  EFDB  F010         	goto	u2861
  5391  0021B2  EFDD  F010         	goto	u2860
  5392  0021B6                     u2861:
  5393  0021B6  EFF5  F010         	goto	l3349
  5394  0021BA                     u2860:
  5395  0021BA  0E00               	movlw	0
  5396  0021BC  6E0F               	movwf	___fldiv@b^0,c
  5397  0021BE  0E00               	movlw	0
  5398  0021C0  6E10               	movwf	(___fldiv@b+1)^0,c
  5399  0021C2  0E00               	movlw	0
  5400  0021C4  6E11               	movwf	(___fldiv@b+2)^0,c
  5401  0021C6  0E00               	movlw	0
  5402  0021C8  6E12               	movwf	(___fldiv@b+3)^0,c
  5403  0021CA  0E80               	movlw	128
  5404  0021CC  1211               	iorwf	(___fldiv@b+2)^0,f,c
  5405  0021CE  0E7F               	movlw	127
  5406  0021D0  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5407  0021D2                     l3343:
  5408  0021D2  501F               	movf	___fldiv@sign^0,w,c
  5409  0021D4  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5410  0021D6  C00F  F00F         	movff	___fldiv@b,?___fldiv
  5411  0021DA  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  5412  0021DE  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  5413  0021E2  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  5414  0021E6  EF38  F012         	goto	l1118
  5415  0021EA                     l3349:
  5416  0021EA  5026               	movf	___fldiv@bexp^0,w,c
  5417  0021EC  A4D8               	btfss	status,2,c
  5418  0021EE  EFFB  F010         	goto	u2871
  5419  0021F2  EFFD  F010         	goto	u2870
  5420  0021F6                     u2871:
  5421  0021F6  EF07  F011         	goto	l3357
  5422  0021FA                     u2870:
  5423  0021FA  0E00               	movlw	0
  5424  0021FC  6E0F               	movwf	?___fldiv^0,c
  5425  0021FE  0E00               	movlw	0
  5426  002200  6E10               	movwf	(?___fldiv+1)^0,c
  5427  002202  0E00               	movlw	0
  5428  002204  6E11               	movwf	(?___fldiv+2)^0,c
  5429  002206  0E00               	movlw	0
  5430  002208  6E12               	movwf	(?___fldiv+3)^0,c
  5431  00220A  EF38  F012         	goto	l1118
  5432  00220E                     l3357:
  5433  00220E  5027               	movf	___fldiv@aexp^0,w,c
  5434  002210  C026  F017         	movff	___fldiv@bexp,??___fldiv
  5435  002214  6A18               	clrf	(??___fldiv+1)^0,c
  5436  002216  5E17               	subwf	??___fldiv^0,f,c
  5437  002218  0E00               	movlw	0
  5438  00221A  5A18               	subwfb	(??___fldiv+1)^0,f,c
  5439  00221C  0E7F               	movlw	127
  5440  00221E  2417               	addwf	??___fldiv^0,w,c
  5441  002220  6E20               	movwf	___fldiv@new_exp^0,c
  5442  002222  0E00               	movlw	0
  5443  002224  2018               	addwfc	(??___fldiv+1)^0,w,c
  5444  002226  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5445  002228  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  5446  00222C  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  5447  002230  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  5448  002234  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  5449  002238  0E00               	movlw	0
  5450  00223A  6E0F               	movwf	___fldiv@b^0,c
  5451  00223C  0E00               	movlw	0
  5452  00223E  6E10               	movwf	(___fldiv@b+1)^0,c
  5453  002240  0E00               	movlw	0
  5454  002242  6E11               	movwf	(___fldiv@b+2)^0,c
  5455  002244  0E00               	movlw	0
  5456  002246  6E12               	movwf	(___fldiv@b+3)^0,c
  5457  002248  0E00               	movlw	0
  5458  00224A  6E22               	movwf	___fldiv@grs^0,c
  5459  00224C  0E00               	movlw	0
  5460  00224E  6E23               	movwf	(___fldiv@grs+1)^0,c
  5461  002250  0E00               	movlw	0
  5462  002252  6E24               	movwf	(___fldiv@grs+2)^0,c
  5463  002254  0E00               	movlw	0
  5464  002256  6E25               	movwf	(___fldiv@grs+3)^0,c
  5465  002258  0E00               	movlw	0
  5466  00225A  6E27               	movwf	___fldiv@aexp^0,c
  5467  00225C  EF68  F011         	goto	l1120
  5468  002260                     l3367:
  5469  002260  5027               	movf	___fldiv@aexp^0,w,c
  5470  002262  B4D8               	btfsc	status,2,c
  5471  002264  EF36  F011         	goto	u2881
  5472  002268  EF38  F011         	goto	u2880
  5473  00226C                     u2881:
  5474  00226C  EF4F  F011         	goto	l3375
  5475  002270                     u2880:
  5476  002270  90D8               	bcf	status,0,c
  5477  002272  361B               	rlcf	___fldiv@rem^0,f,c
  5478  002274  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  5479  002276  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  5480  002278  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  5481  00227A  90D8               	bcf	status,0,c
  5482  00227C  360F               	rlcf	___fldiv@b^0,f,c
  5483  00227E  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5484  002280  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5485  002282  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5486  002284  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5487  002286  EF47  F011         	goto	u2891
  5488  00228A  EF49  F011         	goto	u2890
  5489  00228E                     u2891:
  5490  00228E  EF4A  F011         	goto	l1123
  5491  002292                     u2890:
  5492  002292  800F               	bsf	___fldiv@b^0,0,c
  5493  002294                     l1123:
  5494  002294  90D8               	bcf	status,0,c
  5495  002296  3622               	rlcf	___fldiv@grs^0,f,c
  5496  002298  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5497  00229A  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5498  00229C  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5499  00229E                     l3375:
  5500  00229E  5013               	movf	___fldiv@a^0,w,c
  5501  0022A0  5C1B               	subwf	___fldiv@rem^0,w,c
  5502  0022A2  5014               	movf	(___fldiv@a+1)^0,w,c
  5503  0022A4  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  5504  0022A6  5015               	movf	(___fldiv@a+2)^0,w,c
  5505  0022A8  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  5506  0022AA  5016               	movf	(___fldiv@a+3)^0,w,c
  5507  0022AC  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  5508  0022AE  A0D8               	btfss	status,0,c
  5509  0022B0  EF5C  F011         	goto	u2901
  5510  0022B4  EF5E  F011         	goto	u2900
  5511  0022B8                     u2901:
  5512  0022B8  EF67  F011         	goto	l3381
  5513  0022BC                     u2900:
  5514  0022BC  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  5515  0022BE  5013               	movf	___fldiv@a^0,w,c
  5516  0022C0  5E1B               	subwf	___fldiv@rem^0,f,c
  5517  0022C2  5014               	movf	(___fldiv@a+1)^0,w,c
  5518  0022C4  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  5519  0022C6  5015               	movf	(___fldiv@a+2)^0,w,c
  5520  0022C8  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  5521  0022CA  5016               	movf	(___fldiv@a+3)^0,w,c
  5522  0022CC  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  5523  0022CE                     l3381:
  5524  0022CE  2A27               	incf	___fldiv@aexp^0,f,c
  5525  0022D0                     l1120:
  5526  0022D0  0E19               	movlw	25
  5527  0022D2  6427               	cpfsgt	___fldiv@aexp^0,c
  5528  0022D4  EF6E  F011         	goto	u2911
  5529  0022D8  EF70  F011         	goto	u2910
  5530  0022DC                     u2911:
  5531  0022DC  EF30  F011         	goto	l3367
  5532  0022E0                     u2910:
  5533  0022E0  501B               	movf	___fldiv@rem^0,w,c
  5534  0022E2  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  5535  0022E4  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  5536  0022E6  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  5537  0022E8  B4D8               	btfsc	status,2,c
  5538  0022EA  EF79  F011         	goto	u2921
  5539  0022EE  EF7B  F011         	goto	u2920
  5540  0022F2                     u2921:
  5541  0022F2  EF93  F011         	goto	l3393
  5542  0022F6                     u2920:
  5543  0022F6  8022               	bsf	___fldiv@grs^0,0,c
  5544  0022F8  EF93  F011         	goto	l3393
  5545  0022FC                     l3387:
  5546  0022FC  90D8               	bcf	status,0,c
  5547  0022FE  360F               	rlcf	___fldiv@b^0,f,c
  5548  002300  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5549  002302  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5550  002304  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5551  002306  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5552  002308  EF88  F011         	goto	u2931
  5553  00230C  EF8A  F011         	goto	u2930
  5554  002310                     u2931:
  5555  002310  EF8B  F011         	goto	l1129
  5556  002314                     u2930:
  5557  002314  800F               	bsf	___fldiv@b^0,0,c
  5558  002316                     l1129:
  5559  002316  90D8               	bcf	status,0,c
  5560  002318  3622               	rlcf	___fldiv@grs^0,f,c
  5561  00231A  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5562  00231C  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5563  00231E  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5564  002320  0620               	decf	___fldiv@new_exp^0,f,c
  5565  002322  A0D8               	btfss	status,0,c
  5566  002324  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  5567  002326                     l3393:
  5568  002326  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5569  002328  EF98  F011         	goto	u2941
  5570  00232C  EF9A  F011         	goto	u2940
  5571  002330                     u2941:
  5572  002330  EF7E  F011         	goto	l3387
  5573  002334                     u2940:
  5574  002334  0E00               	movlw	0
  5575  002336  6E27               	movwf	___fldiv@aexp^0,c
  5576  002338  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5577  00233A  EFA1  F011         	goto	u2951
  5578  00233E  EFA3  F011         	goto	u2950
  5579  002342                     u2951:
  5580  002342  EFC7  F011         	goto	l1131
  5581  002346                     u2950:
  5582  002346  0EFF               	movlw	255
  5583  002348  1422               	andwf	___fldiv@grs^0,w,c
  5584  00234A  6E17               	movwf	??___fldiv^0,c
  5585  00234C  0EFF               	movlw	255
  5586  00234E  1423               	andwf	(___fldiv@grs+1)^0,w,c
  5587  002350  6E18               	movwf	(??___fldiv+1)^0,c
  5588  002352  0EFF               	movlw	255
  5589  002354  1424               	andwf	(___fldiv@grs+2)^0,w,c
  5590  002356  6E19               	movwf	(??___fldiv+2)^0,c
  5591  002358  0E7F               	movlw	127
  5592  00235A  1425               	andwf	(___fldiv@grs+3)^0,w,c
  5593  00235C  6E1A               	movwf	(??___fldiv+3)^0,c
  5594  00235E  5017               	movf	??___fldiv^0,w,c
  5595  002360  1018               	iorwf	(??___fldiv+1)^0,w,c
  5596  002362  1019               	iorwf	(??___fldiv+2)^0,w,c
  5597  002364  101A               	iorwf	(??___fldiv+3)^0,w,c
  5598  002366  B4D8               	btfsc	status,2,c
  5599  002368  EFB8  F011         	goto	u2961
  5600  00236C  EFBA  F011         	goto	u2960
  5601  002370                     u2961:
  5602  002370  EFBE  F011         	goto	l1132
  5603  002374                     u2960:
  5604  002374                     l3401:
  5605  002374  0E01               	movlw	1
  5606  002376  6E27               	movwf	___fldiv@aexp^0,c
  5607  002378  EFC7  F011         	goto	l1131
  5608  00237C                     l1132:
  5609  00237C  A00F               	btfss	___fldiv@b^0,0,c
  5610  00237E  EFC3  F011         	goto	u2971
  5611  002382  EFC5  F011         	goto	u2970
  5612  002386                     u2971:
  5613  002386  EFC7  F011         	goto	l1131
  5614  00238A                     u2970:
  5615  00238A  EFBA  F011         	goto	l3401
  5616  00238E                     l1131:
  5617  00238E  5027               	movf	___fldiv@aexp^0,w,c
  5618  002390  B4D8               	btfsc	status,2,c
  5619  002392  EFCD  F011         	goto	u2981
  5620  002396  EFCF  F011         	goto	u2980
  5621  00239A                     u2981:
  5622  00239A  EFF3  F011         	goto	l3413
  5623  00239E                     u2980:
  5624  00239E  0E01               	movlw	1
  5625  0023A0  260F               	addwf	___fldiv@b^0,f,c
  5626  0023A2  0E00               	movlw	0
  5627  0023A4  2210               	addwfc	(___fldiv@b+1)^0,f,c
  5628  0023A6  2211               	addwfc	(___fldiv@b+2)^0,f,c
  5629  0023A8  2212               	addwfc	(___fldiv@b+3)^0,f,c
  5630  0023AA  A012               	btfss	(___fldiv@b+3)^0,0,c
  5631  0023AC  EFDA  F011         	goto	u2991
  5632  0023B0  EFDC  F011         	goto	u2990
  5633  0023B4                     u2991:
  5634  0023B4  EFF3  F011         	goto	l3413
  5635  0023B8                     u2990:
  5636  0023B8  C00F  F017         	movff	___fldiv@b,??___fldiv
  5637  0023BC  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  5638  0023C0  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  5639  0023C4  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  5640  0023C8  341A               	rlcf	(??___fldiv+3)^0,w,c
  5641  0023CA  321A               	rrcf	(??___fldiv+3)^0,f,c
  5642  0023CC  3219               	rrcf	(??___fldiv+2)^0,f,c
  5643  0023CE  3218               	rrcf	(??___fldiv+1)^0,f,c
  5644  0023D0  3217               	rrcf	??___fldiv^0,f,c
  5645  0023D2  C017  F00F         	movff	??___fldiv,___fldiv@b
  5646  0023D6  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  5647  0023DA  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  5648  0023DE  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  5649  0023E2  4A20               	infsnz	___fldiv@new_exp^0,f,c
  5650  0023E4  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  5651  0023E6                     l3413:
  5652  0023E6  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5653  0023E8  EFFE  F011         	goto	u3001
  5654  0023EC  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5655  0023EE  E108               	bnz	u3000
  5656  0023F0  2820               	incf	___fldiv@new_exp^0,w,c
  5657  0023F2  A0D8               	btfss	status,0,c
  5658  0023F4  EFFE  F011         	goto	u3001
  5659  0023F8  EF00  F012         	goto	u3000
  5660  0023FC                     u3001:
  5661  0023FC  EF0B  F012         	goto	l3417
  5662  002400                     u3000:
  5663  002400  0E00               	movlw	0
  5664  002402  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5665  002404  6820               	setf	___fldiv@new_exp^0,c
  5666  002406  0E00               	movlw	0
  5667  002408  6E0F               	movwf	___fldiv@b^0,c
  5668  00240A  0E00               	movlw	0
  5669  00240C  6E10               	movwf	(___fldiv@b+1)^0,c
  5670  00240E  0E00               	movlw	0
  5671  002410  6E11               	movwf	(___fldiv@b+2)^0,c
  5672  002412  0E00               	movlw	0
  5673  002414  6E12               	movwf	(___fldiv@b+3)^0,c
  5674  002416                     l3417:
  5675  002416  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5676  002418  EF18  F012         	goto	u3010
  5677  00241C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5678  00241E  E106               	bnz	u3011
  5679  002420  0420               	decf	___fldiv@new_exp^0,w,c
  5680  002422  B0D8               	btfsc	status,0,c
  5681  002424  EF16  F012         	goto	u3011
  5682  002428  EF18  F012         	goto	u3010
  5683  00242C                     u3011:
  5684  00242C  EF26  F012         	goto	l3421
  5685  002430                     u3010:
  5686  002430  0E00               	movlw	0
  5687  002432  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5688  002434  0E00               	movlw	0
  5689  002436  6E20               	movwf	___fldiv@new_exp^0,c
  5690  002438  0E00               	movlw	0
  5691  00243A  6E0F               	movwf	___fldiv@b^0,c
  5692  00243C  0E00               	movlw	0
  5693  00243E  6E10               	movwf	(___fldiv@b+1)^0,c
  5694  002440  0E00               	movlw	0
  5695  002442  6E11               	movwf	(___fldiv@b+2)^0,c
  5696  002444  0E00               	movlw	0
  5697  002446  6E12               	movwf	(___fldiv@b+3)^0,c
  5698  002448  0E00               	movlw	0
  5699  00244A  6E1F               	movwf	___fldiv@sign^0,c
  5700  00244C                     l3421:
  5701  00244C  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  5702  002450  A026               	btfss	___fldiv@bexp^0,0,c
  5703  002452  EF2D  F012         	goto	u3021
  5704  002456  EF2F  F012         	goto	u3020
  5705  00245A                     u3021:
  5706  00245A  EF32  F012         	goto	l3427
  5707  00245E                     u3020:
  5708  00245E  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5709  002460  EF33  F012         	goto	l3429
  5710  002464                     l3427:
  5711  002464  9E11               	bcf	(___fldiv@b+2)^0,7,c
  5712  002466                     l3429:
  5713  002466  90D8               	bcf	status,0,c
  5714  002468  3026               	rrcf	___fldiv@bexp^0,w,c
  5715  00246A  6E12               	movwf	(___fldiv@b+3)^0,c
  5716  00246C  EFE9  F010         	goto	l3343
  5717  002470                     l1118:
  5718  002470  0012               	return		;funcret
  5719  002472                     __end_of___fldiv:
  5720                           	callstack 0
  5721                           
  5722 ;; *************** function ___fladd *****************
  5723 ;; Defined at:
  5724 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  b               4   64[COMRAM] unsigned char 
  5727 ;;  a               4   68[COMRAM] unsigned char 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;  grs             1   79[COMRAM] unsigned char 
  5730 ;;  bexp            1   78[COMRAM] unsigned char 
  5731 ;;  aexp            1   77[COMRAM] unsigned char 
  5732 ;;  signs           1   76[COMRAM] unsigned char 
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  4   64[COMRAM] unsigned char 
  5735 ;; Registers used:
  5736 ;;		wreg, status,2, status,0
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5742 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5743 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5744 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5745 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5746 ;;Total ram usage:       16 bytes
  5747 ;; Hardware stack levels used: 1
  5748 ;; Hardware stack levels required when called: 1
  5749 ;; This function calls:
  5750 ;;		Nothing
  5751 ;; This function is called by:
  5752 ;;		_determine_color_new
  5753 ;; This function uses a non-reentrant model
  5754 ;;
  5755                           
  5756                           	psect	text15
  5757  0013BC                     __ptext15:
  5758                           	callstack 0
  5759  0013BC                     ___fladd:
  5760                           	callstack 28
  5761  0013BC  5044               	movf	(___fladd@b+3)^0,w,c
  5762  0013BE  0B80               	andlw	128
  5763  0013C0  6E4D               	movwf	___fladd@signs^0,c
  5764  0013C2  5044               	movf	(___fladd@b+3)^0,w,c
  5765  0013C4  2444               	addwf	(___fladd@b+3)^0,w,c
  5766  0013C6  6E4F               	movwf	___fladd@bexp^0,c
  5767  0013C8  AE43               	btfss	(___fladd@b+2)^0,7,c
  5768  0013CA  EFE9  F009         	goto	u2411
  5769  0013CE  EFEB  F009         	goto	u2410
  5770  0013D2                     u2411:
  5771  0013D2  EFEC  F009         	goto	l3103
  5772  0013D6                     u2410:
  5773  0013D6  804F               	bsf	___fladd@bexp^0,0,c
  5774  0013D8                     l3103:
  5775  0013D8  504F               	movf	___fladd@bexp^0,w,c
  5776  0013DA  B4D8               	btfsc	status,2,c
  5777  0013DC  EFF2  F009         	goto	u2421
  5778  0013E0  EFF4  F009         	goto	u2420
  5779  0013E4                     u2421:
  5780  0013E4  EF09  F00A         	goto	l3113
  5781  0013E8                     u2420:
  5782  0013E8  284F               	incf	___fladd@bexp^0,w,c
  5783  0013EA  A4D8               	btfss	status,2,c
  5784  0013EC  EFFA  F009         	goto	u2431
  5785  0013F0  EFFC  F009         	goto	u2430
  5786  0013F4                     u2431:
  5787  0013F4  EF04  F00A         	goto	l3109
  5788  0013F8                     u2430:
  5789  0013F8  0E00               	movlw	0
  5790  0013FA  6E41               	movwf	___fladd@b^0,c
  5791  0013FC  0E00               	movlw	0
  5792  0013FE  6E42               	movwf	(___fladd@b+1)^0,c
  5793  001400  0E00               	movlw	0
  5794  001402  6E43               	movwf	(___fladd@b+2)^0,c
  5795  001404  0E00               	movlw	0
  5796  001406  6E44               	movwf	(___fladd@b+3)^0,c
  5797  001408                     l3109:
  5798  001408  8E43               	bsf	(___fladd@b+2)^0,7,c
  5799  00140A  0E00               	movlw	0
  5800  00140C  6E44               	movwf	(___fladd@b+3)^0,c
  5801  00140E  EF11  F00A         	goto	l3115
  5802  001412                     l3113:
  5803  001412  0E00               	movlw	0
  5804  001414  6E41               	movwf	___fladd@b^0,c
  5805  001416  0E00               	movlw	0
  5806  001418  6E42               	movwf	(___fladd@b+1)^0,c
  5807  00141A  0E00               	movlw	0
  5808  00141C  6E43               	movwf	(___fladd@b+2)^0,c
  5809  00141E  0E00               	movlw	0
  5810  001420  6E44               	movwf	(___fladd@b+3)^0,c
  5811  001422                     l3115:
  5812  001422  5048               	movf	(___fladd@a+3)^0,w,c
  5813  001424  0B80               	andlw	128
  5814  001426  6E4E               	movwf	___fladd@aexp^0,c
  5815  001428  504D               	movf	___fladd@signs^0,w,c
  5816  00142A  184E               	xorwf	___fladd@aexp^0,w,c
  5817  00142C  B4D8               	btfsc	status,2,c
  5818  00142E  EF1B  F00A         	goto	u2441
  5819  001432  EF1D  F00A         	goto	u2440
  5820  001436                     u2441:
  5821  001436  EF1E  F00A         	goto	l3121
  5822  00143A                     u2440:
  5823  00143A  8C4D               	bsf	___fladd@signs^0,6,c
  5824  00143C                     l3121:
  5825  00143C  5048               	movf	(___fladd@a+3)^0,w,c
  5826  00143E  2448               	addwf	(___fladd@a+3)^0,w,c
  5827  001440  6E4E               	movwf	___fladd@aexp^0,c
  5828  001442  AE47               	btfss	(___fladd@a+2)^0,7,c
  5829  001444  EF26  F00A         	goto	u2451
  5830  001448  EF28  F00A         	goto	u2450
  5831  00144C                     u2451:
  5832  00144C  EF29  F00A         	goto	l3127
  5833  001450                     u2450:
  5834  001450  804E               	bsf	___fladd@aexp^0,0,c
  5835  001452                     l3127:
  5836  001452  504E               	movf	___fladd@aexp^0,w,c
  5837  001454  B4D8               	btfsc	status,2,c
  5838  001456  EF2F  F00A         	goto	u2461
  5839  00145A  EF31  F00A         	goto	u2460
  5840  00145E                     u2461:
  5841  00145E  EF46  F00A         	goto	l3137
  5842  001462                     u2460:
  5843  001462  284E               	incf	___fladd@aexp^0,w,c
  5844  001464  A4D8               	btfss	status,2,c
  5845  001466  EF37  F00A         	goto	u2471
  5846  00146A  EF39  F00A         	goto	u2470
  5847  00146E                     u2471:
  5848  00146E  EF41  F00A         	goto	l3133
  5849  001472                     u2470:
  5850  001472  0E00               	movlw	0
  5851  001474  6E45               	movwf	___fladd@a^0,c
  5852  001476  0E00               	movlw	0
  5853  001478  6E46               	movwf	(___fladd@a+1)^0,c
  5854  00147A  0E00               	movlw	0
  5855  00147C  6E47               	movwf	(___fladd@a+2)^0,c
  5856  00147E  0E00               	movlw	0
  5857  001480  6E48               	movwf	(___fladd@a+3)^0,c
  5858  001482                     l3133:
  5859  001482  8E47               	bsf	(___fladd@a+2)^0,7,c
  5860  001484  0E00               	movlw	0
  5861  001486  6E48               	movwf	(___fladd@a+3)^0,c
  5862  001488  EF4E  F00A         	goto	l3139
  5863  00148C                     l3137:
  5864  00148C  0E00               	movlw	0
  5865  00148E  6E45               	movwf	___fladd@a^0,c
  5866  001490  0E00               	movlw	0
  5867  001492  6E46               	movwf	(___fladd@a+1)^0,c
  5868  001494  0E00               	movlw	0
  5869  001496  6E47               	movwf	(___fladd@a+2)^0,c
  5870  001498  0E00               	movlw	0
  5871  00149A  6E48               	movwf	(___fladd@a+3)^0,c
  5872  00149C                     l3139:
  5873  00149C  504F               	movf	___fladd@bexp^0,w,c
  5874  00149E  5C4E               	subwf	___fladd@aexp^0,w,c
  5875  0014A0  B0D8               	btfsc	status,0,c
  5876  0014A2  EF55  F00A         	goto	u2481
  5877  0014A6  EF57  F00A         	goto	u2480
  5878  0014AA                     u2481:
  5879  0014AA  EF7E  F00A         	goto	l3175
  5880  0014AE                     u2480:
  5881  0014AE  AC4D               	btfss	___fladd@signs^0,6,c
  5882  0014B0  EF5C  F00A         	goto	u2491
  5883  0014B4  EF5E  F00A         	goto	u2490
  5884  0014B8                     u2491:
  5885  0014B8  EF60  F00A         	goto	l3145
  5886  0014BC                     u2490:
  5887  0014BC  0E80               	movlw	128
  5888  0014BE  1A4D               	xorwf	___fladd@signs^0,f,c
  5889  0014C0                     l3145:
  5890  0014C0  C04F  F050         	movff	___fladd@bexp,___fladd@grs
  5891  0014C4  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  5892  0014C8  C050  F04E         	movff	___fladd@grs,___fladd@aexp
  5893  0014CC  C041  F050         	movff	___fladd@b,___fladd@grs
  5894  0014D0  C045  F041         	movff	___fladd@a,___fladd@b
  5895  0014D4  C050  F045         	movff	___fladd@grs,___fladd@a
  5896  0014D8  C042  F050         	movff	___fladd@b+1,___fladd@grs
  5897  0014DC  C046  F042         	movff	___fladd@a+1,___fladd@b+1
  5898  0014E0  C050  F046         	movff	___fladd@grs,___fladd@a+1
  5899  0014E4  C043  F050         	movff	___fladd@b+2,___fladd@grs
  5900  0014E8  C047  F043         	movff	___fladd@a+2,___fladd@b+2
  5901  0014EC  C050  F047         	movff	___fladd@grs,___fladd@a+2
  5902  0014F0  C044  F050         	movff	___fladd@b+3,___fladd@grs
  5903  0014F4  C048  F044         	movff	___fladd@a+3,___fladd@b+3
  5904  0014F8  C050  F048         	movff	___fladd@grs,___fladd@a+3
  5905  0014FC                     l3175:
  5906  0014FC  0E00               	movlw	0
  5907  0014FE  6E50               	movwf	___fladd@grs^0,c
  5908  001500  504F               	movf	___fladd@bexp^0,w,c
  5909  001502  C04E  F049         	movff	___fladd@aexp,??___fladd
  5910  001506  6A4A               	clrf	(??___fladd+1)^0,c
  5911  001508  5E49               	subwf	??___fladd^0,f,c
  5912  00150A  0E00               	movlw	0
  5913  00150C  5A4A               	subwfb	(??___fladd+1)^0,f,c
  5914  00150E  BE4A               	btfsc	(??___fladd+1)^0,7,c
  5915  001510  EF93  F00A         	goto	u2501
  5916  001514  504A               	movf	(??___fladd+1)^0,w,c
  5917  001516  E109               	bnz	u2500
  5918  001518  0E1A               	movlw	26
  5919  00151A  5C49               	subwf	??___fladd^0,w,c
  5920  00151C  A0D8               	btfss	status,0,c
  5921  00151E  EF93  F00A         	goto	u2501
  5922  001522  EF95  F00A         	goto	u2500
  5923  001526                     u2501:
  5924  001526  EFCC  F00A         	goto	l1065
  5925  00152A                     u2500:
  5926  00152A  5041               	movf	___fladd@b^0,w,c
  5927  00152C  1042               	iorwf	(___fladd@b+1)^0,w,c
  5928  00152E  1043               	iorwf	(___fladd@b+2)^0,w,c
  5929  001530  1044               	iorwf	(___fladd@b+3)^0,w,c
  5930  001532  A4D8               	btfss	status,2,c
  5931  001534  EF9E  F00A         	goto	u2511
  5932  001538  EFA1  F00A         	goto	u2510
  5933  00153C                     u2511:
  5934  00153C  0E01               	movlw	1
  5935  00153E  EFA2  F00A         	goto	u2520
  5936  001542                     u2510:
  5937  001542  0E00               	movlw	0
  5938  001544                     u2520:
  5939  001544  6E50               	movwf	___fladd@grs^0,c
  5940  001546  0E00               	movlw	0
  5941  001548  6E41               	movwf	___fladd@b^0,c
  5942  00154A  0E00               	movlw	0
  5943  00154C  6E42               	movwf	(___fladd@b+1)^0,c
  5944  00154E  0E00               	movlw	0
  5945  001550  6E43               	movwf	(___fladd@b+2)^0,c
  5946  001552  0E00               	movlw	0
  5947  001554  6E44               	movwf	(___fladd@b+3)^0,c
  5948  001556  C04E  F04F         	movff	___fladd@aexp,___fladd@bexp
  5949  00155A  EFD5  F00A         	goto	l1064
  5950  00155E                     l1066:
  5951  00155E  A050               	btfss	___fladd@grs^0,0,c
  5952  001560  EFB4  F00A         	goto	u2531
  5953  001564  EFB6  F00A         	goto	u2530
  5954  001568                     u2531:
  5955  001568  EFBC  F00A         	goto	l3187
  5956  00156C                     u2530:
  5957  00156C  90D8               	bcf	status,0,c
  5958  00156E  3050               	rrcf	___fladd@grs^0,w,c
  5959  001570  0901               	iorlw	1
  5960  001572  6E50               	movwf	___fladd@grs^0,c
  5961  001574  EFBE  F00A         	goto	l3189
  5962  001578                     l3187:
  5963  001578  90D8               	bcf	status,0,c
  5964  00157A  3250               	rrcf	___fladd@grs^0,f,c
  5965  00157C                     l3189:
  5966  00157C  A041               	btfss	___fladd@b^0,0,c
  5967  00157E  EFC3  F00A         	goto	u2541
  5968  001582  EFC5  F00A         	goto	u2540
  5969  001586                     u2541:
  5970  001586  EFC6  F00A         	goto	l3193
  5971  00158A                     u2540:
  5972  00158A  8E50               	bsf	___fladd@grs^0,7,c
  5973  00158C                     l3193:
  5974  00158C  3444               	rlcf	(___fladd@b+3)^0,w,c
  5975  00158E  3244               	rrcf	(___fladd@b+3)^0,f,c
  5976  001590  3243               	rrcf	(___fladd@b+2)^0,f,c
  5977  001592  3242               	rrcf	(___fladd@b+1)^0,f,c
  5978  001594  3241               	rrcf	___fladd@b^0,f,c
  5979  001596  2A4F               	incf	___fladd@bexp^0,f,c
  5980  001598                     l1065:
  5981  001598  504E               	movf	___fladd@aexp^0,w,c
  5982  00159A  5C4F               	subwf	___fladd@bexp^0,w,c
  5983  00159C  A0D8               	btfss	status,0,c
  5984  00159E  EFD3  F00A         	goto	u2551
  5985  0015A2  EFD5  F00A         	goto	u2550
  5986  0015A6                     u2551:
  5987  0015A6  EFAF  F00A         	goto	l1066
  5988  0015AA                     u2550:
  5989  0015AA                     l1064:
  5990  0015AA  BC4D               	btfsc	___fladd@signs^0,6,c
  5991  0015AC  EFDA  F00A         	goto	u2561
  5992  0015B0  EFDC  F00A         	goto	u2560
  5993  0015B4                     u2561:
  5994  0015B4  EF1C  F00B         	goto	l3221
  5995  0015B8                     u2560:
  5996  0015B8  504F               	movf	___fladd@bexp^0,w,c
  5997  0015BA  A4D8               	btfss	status,2,c
  5998  0015BC  EFE2  F00A         	goto	u2571
  5999  0015C0  EFE4  F00A         	goto	u2570
  6000  0015C4                     u2571:
  6001  0015C4  EFEE  F00A         	goto	l3203
  6002  0015C8                     u2570:
  6003  0015C8  0E00               	movlw	0
  6004  0015CA  6E41               	movwf	?___fladd^0,c
  6005  0015CC  0E00               	movlw	0
  6006  0015CE  6E42               	movwf	(?___fladd+1)^0,c
  6007  0015D0  0E00               	movlw	0
  6008  0015D2  6E43               	movwf	(?___fladd+2)^0,c
  6009  0015D4  0E00               	movlw	0
  6010  0015D6  6E44               	movwf	(?___fladd+3)^0,c
  6011  0015D8  EF3D  F00C         	goto	l1073
  6012  0015DC                     l3203:
  6013  0015DC  5045               	movf	___fladd@a^0,w,c
  6014  0015DE  2641               	addwf	___fladd@b^0,f,c
  6015  0015E0  5046               	movf	(___fladd@a+1)^0,w,c
  6016  0015E2  2242               	addwfc	(___fladd@b+1)^0,f,c
  6017  0015E4  5047               	movf	(___fladd@a+2)^0,w,c
  6018  0015E6  2243               	addwfc	(___fladd@b+2)^0,f,c
  6019  0015E8  5048               	movf	(___fladd@a+3)^0,w,c
  6020  0015EA  2244               	addwfc	(___fladd@b+3)^0,f,c
  6021  0015EC  A044               	btfss	(___fladd@b+3)^0,0,c
  6022  0015EE  EFFB  F00A         	goto	u2581
  6023  0015F2  EFFD  F00A         	goto	u2580
  6024  0015F6                     u2581:
  6025  0015F6  EFA9  F00B         	goto	l3257
  6026  0015FA                     u2580:
  6027  0015FA  A050               	btfss	___fladd@grs^0,0,c
  6028  0015FC  EF02  F00B         	goto	u2591
  6029  001600  EF04  F00B         	goto	u2590
  6030  001604                     u2591:
  6031  001604  EF0A  F00B         	goto	l3211
  6032  001608                     u2590:
  6033  001608  90D8               	bcf	status,0,c
  6034  00160A  3050               	rrcf	___fladd@grs^0,w,c
  6035  00160C  0901               	iorlw	1
  6036  00160E  6E50               	movwf	___fladd@grs^0,c
  6037  001610  EF0C  F00B         	goto	l3213
  6038  001614                     l3211:
  6039  001614  90D8               	bcf	status,0,c
  6040  001616  3250               	rrcf	___fladd@grs^0,f,c
  6041  001618                     l3213:
  6042  001618  A041               	btfss	___fladd@b^0,0,c
  6043  00161A  EF11  F00B         	goto	u2601
  6044  00161E  EF13  F00B         	goto	u2600
  6045  001622                     u2601:
  6046  001622  EF14  F00B         	goto	l3217
  6047  001626                     u2600:
  6048  001626  8E50               	bsf	___fladd@grs^0,7,c
  6049  001628                     l3217:
  6050  001628  3444               	rlcf	(___fladd@b+3)^0,w,c
  6051  00162A  3244               	rrcf	(___fladd@b+3)^0,f,c
  6052  00162C  3243               	rrcf	(___fladd@b+2)^0,f,c
  6053  00162E  3242               	rrcf	(___fladd@b+1)^0,f,c
  6054  001630  3241               	rrcf	___fladd@b^0,f,c
  6055  001632  2A4F               	incf	___fladd@bexp^0,f,c
  6056  001634  EFA9  F00B         	goto	l3257
  6057  001638                     l3221:
  6058  001638  5045               	movf	___fladd@a^0,w,c
  6059  00163A  5C41               	subwf	___fladd@b^0,w,c
  6060  00163C  5046               	movf	(___fladd@a+1)^0,w,c
  6061  00163E  5842               	subwfb	(___fladd@b+1)^0,w,c
  6062  001640  5047               	movf	(___fladd@a+2)^0,w,c
  6063  001642  5843               	subwfb	(___fladd@b+2)^0,w,c
  6064  001644  5044               	movf	(___fladd@b+3)^0,w,c
  6065  001646  0A80               	xorlw	128
  6066  001648  6E49               	movwf	??___fladd^0,c
  6067  00164A  5048               	movf	(___fladd@a+3)^0,w,c
  6068  00164C  0A80               	xorlw	128
  6069  00164E  5849               	subwfb	??___fladd^0,w,c
  6070  001650  B0D8               	btfsc	status,0,c
  6071  001652  EF2D  F00B         	goto	u2611
  6072  001656  EF2F  F00B         	goto	u2610
  6073  00165A                     u2611:
  6074  00165A  EF5A  F00B         	goto	l3231
  6075  00165E                     u2610:
  6076  00165E  5041               	movf	___fladd@b^0,w,c
  6077  001660  5C45               	subwf	___fladd@a^0,w,c
  6078  001662  6E49               	movwf	??___fladd^0,c
  6079  001664  5042               	movf	(___fladd@b+1)^0,w,c
  6080  001666  5846               	subwfb	(___fladd@a+1)^0,w,c
  6081  001668  6E4A               	movwf	(??___fladd+1)^0,c
  6082  00166A  5043               	movf	(___fladd@b+2)^0,w,c
  6083  00166C  5847               	subwfb	(___fladd@a+2)^0,w,c
  6084  00166E  6E4B               	movwf	(??___fladd+2)^0,c
  6085  001670  5044               	movf	(___fladd@b+3)^0,w,c
  6086  001672  5848               	subwfb	(___fladd@a+3)^0,w,c
  6087  001674  6E4C               	movwf	(??___fladd+3)^0,c
  6088  001676  0EFF               	movlw	255
  6089  001678  2449               	addwf	??___fladd^0,w,c
  6090  00167A  6E41               	movwf	___fladd@b^0,c
  6091  00167C  0EFF               	movlw	255
  6092  00167E  204A               	addwfc	(??___fladd+1)^0,w,c
  6093  001680  6E42               	movwf	(___fladd@b+1)^0,c
  6094  001682  0EFF               	movlw	255
  6095  001684  204B               	addwfc	(??___fladd+2)^0,w,c
  6096  001686  6E43               	movwf	(___fladd@b+2)^0,c
  6097  001688  0EFF               	movlw	255
  6098  00168A  204C               	addwfc	(??___fladd+3)^0,w,c
  6099  00168C  6E44               	movwf	(___fladd@b+3)^0,c
  6100  00168E  0E80               	movlw	128
  6101  001690  1A4D               	xorwf	___fladd@signs^0,f,c
  6102  001692  6C50               	negf	___fladd@grs^0,c
  6103  001694  5050               	movf	___fladd@grs^0,w,c
  6104  001696  A4D8               	btfss	status,2,c
  6105  001698  EF50  F00B         	goto	u2621
  6106  00169C  EF52  F00B         	goto	u2620
  6107  0016A0                     u2621:
  6108  0016A0  EF62  F00B         	goto	l1081
  6109  0016A4                     u2620:
  6110  0016A4  0E01               	movlw	1
  6111  0016A6  2641               	addwf	___fladd@b^0,f,c
  6112  0016A8  0E00               	movlw	0
  6113  0016AA  2242               	addwfc	(___fladd@b+1)^0,f,c
  6114  0016AC  2243               	addwfc	(___fladd@b+2)^0,f,c
  6115  0016AE  2244               	addwfc	(___fladd@b+3)^0,f,c
  6116  0016B0  EF62  F00B         	goto	l1081
  6117  0016B4                     l3231:
  6118  0016B4  5045               	movf	___fladd@a^0,w,c
  6119  0016B6  5E41               	subwf	___fladd@b^0,f,c
  6120  0016B8  5046               	movf	(___fladd@a+1)^0,w,c
  6121  0016BA  5A42               	subwfb	(___fladd@b+1)^0,f,c
  6122  0016BC  5047               	movf	(___fladd@a+2)^0,w,c
  6123  0016BE  5A43               	subwfb	(___fladd@b+2)^0,f,c
  6124  0016C0  5048               	movf	(___fladd@a+3)^0,w,c
  6125  0016C2  5A44               	subwfb	(___fladd@b+3)^0,f,c
  6126  0016C4                     l1081:
  6127  0016C4  5041               	movf	___fladd@b^0,w,c
  6128  0016C6  1042               	iorwf	(___fladd@b+1)^0,w,c
  6129  0016C8  1043               	iorwf	(___fladd@b+2)^0,w,c
  6130  0016CA  1044               	iorwf	(___fladd@b+3)^0,w,c
  6131  0016CC  A4D8               	btfss	status,2,c
  6132  0016CE  EF6B  F00B         	goto	u2631
  6133  0016D2  EF6D  F00B         	goto	u2630
  6134  0016D6                     u2631:
  6135  0016D6  EFA2  F00B         	goto	l3255
  6136  0016DA                     u2630:
  6137  0016DA  5050               	movf	___fladd@grs^0,w,c
  6138  0016DC  A4D8               	btfss	status,2,c
  6139  0016DE  EF73  F00B         	goto	u2641
  6140  0016E2  EF75  F00B         	goto	u2640
  6141  0016E6                     u2641:
  6142  0016E6  EFA2  F00B         	goto	l3255
  6143  0016EA                     u2640:
  6144  0016EA  0E00               	movlw	0
  6145  0016EC  6E41               	movwf	?___fladd^0,c
  6146  0016EE  0E00               	movlw	0
  6147  0016F0  6E42               	movwf	(?___fladd+1)^0,c
  6148  0016F2  0E00               	movlw	0
  6149  0016F4  6E43               	movwf	(?___fladd+2)^0,c
  6150  0016F6  0E00               	movlw	0
  6151  0016F8  6E44               	movwf	(?___fladd+3)^0,c
  6152  0016FA  EF3D  F00C         	goto	l1073
  6153  0016FE                     l3239:
  6154  0016FE  90D8               	bcf	status,0,c
  6155  001700  3641               	rlcf	___fladd@b^0,f,c
  6156  001702  3642               	rlcf	(___fladd@b+1)^0,f,c
  6157  001704  3643               	rlcf	(___fladd@b+2)^0,f,c
  6158  001706  3644               	rlcf	(___fladd@b+3)^0,f,c
  6159  001708  AE50               	btfss	___fladd@grs^0,7,c
  6160  00170A  EF89  F00B         	goto	u2651
  6161  00170E  EF8B  F00B         	goto	u2650
  6162  001712                     u2651:
  6163  001712  EF8C  F00B         	goto	l3245
  6164  001716                     u2650:
  6165  001716  8041               	bsf	___fladd@b^0,0,c
  6166  001718                     l3245:
  6167  001718  A050               	btfss	___fladd@grs^0,0,c
  6168  00171A  EF91  F00B         	goto	u2661
  6169  00171E  EF93  F00B         	goto	u2660
  6170  001722                     u2661:
  6171  001722  EF97  F00B         	goto	l3249
  6172  001726                     u2660:
  6173  001726  80D8               	bsf	status,0,c
  6174  001728  3650               	rlcf	___fladd@grs^0,f,c
  6175  00172A  EF99  F00B         	goto	l3251
  6176  00172E                     l3249:
  6177  00172E  90D8               	bcf	status,0,c
  6178  001730  3650               	rlcf	___fladd@grs^0,f,c
  6179  001732                     l3251:
  6180  001732  504F               	movf	___fladd@bexp^0,w,c
  6181  001734  B4D8               	btfsc	status,2,c
  6182  001736  EF9F  F00B         	goto	u2671
  6183  00173A  EFA1  F00B         	goto	u2670
  6184  00173E                     u2671:
  6185  00173E  EFA2  F00B         	goto	l3255
  6186  001742                     u2670:
  6187  001742  064F               	decf	___fladd@bexp^0,f,c
  6188  001744                     l3255:
  6189  001744  AE43               	btfss	(___fladd@b+2)^0,7,c
  6190  001746  EFA7  F00B         	goto	u2681
  6191  00174A  EFA9  F00B         	goto	u2680
  6192  00174E                     u2681:
  6193  00174E  EF7F  F00B         	goto	l3239
  6194  001752                     u2680:
  6195  001752                     l3257:
  6196  001752  0E00               	movlw	0
  6197  001754  6E4E               	movwf	___fladd@aexp^0,c
  6198  001756  AE50               	btfss	___fladd@grs^0,7,c
  6199  001758  EFB0  F00B         	goto	u2691
  6200  00175C  EFB2  F00B         	goto	u2690
  6201  001760                     u2691:
  6202  001760  EFCA  F00B         	goto	l1090
  6203  001764                     u2690:
  6204  001764  C050  F049         	movff	___fladd@grs,??___fladd
  6205  001768  0E7F               	movlw	127
  6206  00176A  1649               	andwf	??___fladd^0,f,c
  6207  00176C  B4D8               	btfsc	status,2,c
  6208  00176E  EFBB  F00B         	goto	u2701
  6209  001772  EFBD  F00B         	goto	u2700
  6210  001776                     u2701:
  6211  001776  EFC1  F00B         	goto	l1091
  6212  00177A                     u2700:
  6213  00177A                     l3263:
  6214  00177A  0E01               	movlw	1
  6215  00177C  6E4E               	movwf	___fladd@aexp^0,c
  6216  00177E  EFCA  F00B         	goto	l1090
  6217  001782                     l1091:
  6218  001782  A041               	btfss	___fladd@b^0,0,c
  6219  001784  EFC6  F00B         	goto	u2711
  6220  001788  EFC8  F00B         	goto	u2710
  6221  00178C                     u2711:
  6222  00178C  EFCA  F00B         	goto	l1090
  6223  001790                     u2710:
  6224  001790  EFBD  F00B         	goto	l3263
  6225  001794                     l1090:
  6226  001794  504E               	movf	___fladd@aexp^0,w,c
  6227  001796  B4D8               	btfsc	status,2,c
  6228  001798  EFD0  F00B         	goto	u2721
  6229  00179C  EFD2  F00B         	goto	u2720
  6230  0017A0                     u2721:
  6231  0017A0  EFFD  F00B         	goto	l3275
  6232  0017A4                     u2720:
  6233  0017A4  0E01               	movlw	1
  6234  0017A6  2641               	addwf	___fladd@b^0,f,c
  6235  0017A8  0E00               	movlw	0
  6236  0017AA  2242               	addwfc	(___fladd@b+1)^0,f,c
  6237  0017AC  2243               	addwfc	(___fladd@b+2)^0,f,c
  6238  0017AE  2244               	addwfc	(___fladd@b+3)^0,f,c
  6239  0017B0  A044               	btfss	(___fladd@b+3)^0,0,c
  6240  0017B2  EFDD  F00B         	goto	u2731
  6241  0017B6  EFDF  F00B         	goto	u2730
  6242  0017BA                     u2731:
  6243  0017BA  EFFD  F00B         	goto	l3275
  6244  0017BE                     u2730:
  6245  0017BE  C041  F049         	movff	___fladd@b,??___fladd
  6246  0017C2  C042  F04A         	movff	___fladd@b+1,??___fladd+1
  6247  0017C6  C043  F04B         	movff	___fladd@b+2,??___fladd+2
  6248  0017CA  C044  F04C         	movff	___fladd@b+3,??___fladd+3
  6249  0017CE  344C               	rlcf	(??___fladd+3)^0,w,c
  6250  0017D0  324C               	rrcf	(??___fladd+3)^0,f,c
  6251  0017D2  324B               	rrcf	(??___fladd+2)^0,f,c
  6252  0017D4  324A               	rrcf	(??___fladd+1)^0,f,c
  6253  0017D6  3249               	rrcf	??___fladd^0,f,c
  6254  0017D8  C049  F041         	movff	??___fladd,___fladd@b
  6255  0017DC  C04A  F042         	movff	??___fladd+1,___fladd@b+1
  6256  0017E0  C04B  F043         	movff	??___fladd+2,___fladd@b+2
  6257  0017E4  C04C  F044         	movff	??___fladd+3,___fladd@b+3
  6258  0017E8  284F               	incf	___fladd@bexp^0,w,c
  6259  0017EA  B4D8               	btfsc	status,2,c
  6260  0017EC  EFFA  F00B         	goto	u2741
  6261  0017F0  EFFC  F00B         	goto	u2740
  6262  0017F4                     u2741:
  6263  0017F4  EFFD  F00B         	goto	l3275
  6264  0017F8                     u2740:
  6265  0017F8  2A4F               	incf	___fladd@bexp^0,f,c
  6266  0017FA                     l3275:
  6267  0017FA  284F               	incf	___fladd@bexp^0,w,c
  6268  0017FC  B4D8               	btfsc	status,2,c
  6269  0017FE  EF03  F00C         	goto	u2751
  6270  001802  EF05  F00C         	goto	u2750
  6271  001806                     u2751:
  6272  001806  EF0D  F00C         	goto	l3279
  6273  00180A                     u2750:
  6274  00180A  504F               	movf	___fladd@bexp^0,w,c
  6275  00180C  A4D8               	btfss	status,2,c
  6276  00180E  EF0B  F00C         	goto	u2761
  6277  001812  EF0D  F00C         	goto	u2760
  6278  001816                     u2761:
  6279  001816  EF1F  F00C         	goto	l3283
  6280  00181A                     u2760:
  6281  00181A                     l3279:
  6282  00181A  0E00               	movlw	0
  6283  00181C  6E41               	movwf	___fladd@b^0,c
  6284  00181E  0E00               	movlw	0
  6285  001820  6E42               	movwf	(___fladd@b+1)^0,c
  6286  001822  0E00               	movlw	0
  6287  001824  6E43               	movwf	(___fladd@b+2)^0,c
  6288  001826  0E00               	movlw	0
  6289  001828  6E44               	movwf	(___fladd@b+3)^0,c
  6290  00182A  504F               	movf	___fladd@bexp^0,w,c
  6291  00182C  A4D8               	btfss	status,2,c
  6292  00182E  EF1B  F00C         	goto	u2771
  6293  001832  EF1D  F00C         	goto	u2770
  6294  001836                     u2771:
  6295  001836  EF1F  F00C         	goto	l3283
  6296  00183A                     u2770:
  6297  00183A  0E00               	movlw	0
  6298  00183C  6E4D               	movwf	___fladd@signs^0,c
  6299  00183E                     l3283:
  6300  00183E  A04F               	btfss	___fladd@bexp^0,0,c
  6301  001840  EF24  F00C         	goto	u2781
  6302  001844  EF26  F00C         	goto	u2780
  6303  001848                     u2781:
  6304  001848  EF29  F00C         	goto	l3287
  6305  00184C                     u2780:
  6306  00184C  8E43               	bsf	(___fladd@b+2)^0,7,c
  6307  00184E  EF2A  F00C         	goto	l3289
  6308  001852                     l3287:
  6309  001852  9E43               	bcf	(___fladd@b+2)^0,7,c
  6310  001854                     l3289:
  6311  001854  90D8               	bcf	status,0,c
  6312  001856  304F               	rrcf	___fladd@bexp^0,w,c
  6313  001858  6E44               	movwf	(___fladd@b+3)^0,c
  6314  00185A  AE4D               	btfss	___fladd@signs^0,7,c
  6315  00185C  EF32  F00C         	goto	u2791
  6316  001860  EF34  F00C         	goto	u2790
  6317  001864                     u2791:
  6318  001864  EF35  F00C         	goto	l3295
  6319  001868                     u2790:
  6320  001868  8E44               	bsf	(___fladd@b+3)^0,7,c
  6321  00186A                     l3295:
  6322  00186A  C041  F041         	movff	___fladd@b,?___fladd
  6323  00186E  C042  F042         	movff	___fladd@b+1,?___fladd+1
  6324  001872  C043  F043         	movff	___fladd@b+2,?___fladd+2
  6325  001876  C044  F044         	movff	___fladd@b+3,?___fladd+3
  6326  00187A                     l1073:
  6327  00187A  0012               	return		;funcret
  6328  00187C                     __end_of___fladd:
  6329                           	callstack 0
  6330                           
  6331 ;; *************** function _color_click_init *****************
  6332 ;; Defined at:
  6333 ;;		line 11 in file "color.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;		None
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;		None
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  1    wreg      void 
  6340 ;; Registers used:
  6341 ;;		wreg, status,2, status,0, cstack
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6350 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6351 ;;Total ram usage:        1 bytes
  6352 ;; Hardware stack levels used: 1
  6353 ;; Hardware stack levels required when called: 4
  6354 ;; This function calls:
  6355 ;;		_I2C_2_Master_Init
  6356 ;;		_color_writetoaddr
  6357 ;; This function is called by:
  6358 ;;		_main
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text16
  6363  003744                     __ptext16:
  6364                           	callstack 0
  6365  003744                     _color_click_init:
  6366                           	callstack 26
  6367  003744                     
  6368                           ;color.c: 14:     I2C_2_Master_Init();
  6369  003744  ECBC  F01B         	call	_I2C_2_Master_Init	;wreg free
  6370  003748                     
  6371                           ;color.c: 17:   color_writetoaddr(0x00, 0x01);
  6372  003748  0E01               	movlw	1
  6373  00374A  6E03               	movwf	color_writetoaddr@value^0,c
  6374  00374C  0E00               	movlw	0
  6375  00374E  EC19  F01C         	call	_color_writetoaddr
  6376  003752                     
  6377                           ;color.c: 18:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6378  003752  0E3F               	movlw	63
  6379  003754  6E05               	movwf	??_color_click_init^0,c
  6380  003756  0E55               	movlw	85
  6381  003758                     u4437:
  6382  003758  2EE8               	decfsz	wreg,f,c
  6383  00375A  D7FE               	bra	u4437
  6384  00375C  2E05               	decfsz	??_color_click_init^0,f,c
  6385  00375E  D7FC               	bra	u4437
  6386  003760  F000               	nop	
  6387  003762                     
  6388                           ;color.c: 21:  color_writetoaddr(0x00, 0x03);
  6389  003762  0E03               	movlw	3
  6390  003764  6E03               	movwf	color_writetoaddr@value^0,c
  6391  003766  0E00               	movlw	0
  6392  003768  EC19  F01C         	call	_color_writetoaddr
  6393  00376C                     
  6394                           ;color.c: 24:  color_writetoaddr(0x01, 0xD5);
  6395  00376C  0ED5               	movlw	213
  6396  00376E  6E03               	movwf	color_writetoaddr@value^0,c
  6397  003770  0E01               	movlw	1
  6398  003772  EC19  F01C         	call	_color_writetoaddr
  6399  003776  0012               	return		;funcret
  6400  003778                     __end_of_color_click_init:
  6401                           	callstack 0
  6402                           
  6403 ;; *************** function _color_writetoaddr *****************
  6404 ;; Defined at:
  6405 ;;		line 27 in file "color.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  address         1    wreg     unsigned char 
  6408 ;;  value           1    2[COMRAM] unsigned char 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  address         1    3[COMRAM] unsigned char 
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  1    wreg      void 
  6413 ;; Registers used:
  6414 ;;		wreg, status,2, status,0, cstack
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6420 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6423 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6424 ;;Total ram usage:        2 bytes
  6425 ;; Hardware stack levels used: 1
  6426 ;; Hardware stack levels required when called: 3
  6427 ;; This function calls:
  6428 ;;		_I2C_2_Master_Start
  6429 ;;		_I2C_2_Master_Stop
  6430 ;;		_I2C_2_Master_Write
  6431 ;; This function is called by:
  6432 ;;		_color_click_init
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text17
  6437  003832                     __ptext17:
  6438                           	callstack 0
  6439  003832                     _color_writetoaddr:
  6440                           	callstack 26
  6441                           
  6442                           ;incstack = 0
  6443                           ;color_writetoaddr@address stored from wreg
  6444  003832  6E04               	movwf	color_writetoaddr@address^0,c
  6445  003834                     
  6446                           ;color.c: 28:     I2C_2_Master_Start();
  6447  003834  EC48  F01C         	call	_I2C_2_Master_Start	;wreg free
  6448                           
  6449                           ;color.c: 29:     I2C_2_Master_Write(0x52 | 0x00);
  6450  003838  0E52               	movlw	82
  6451  00383A  EC37  F01C         	call	_I2C_2_Master_Write
  6452                           
  6453                           ;color.c: 30:     I2C_2_Master_Write(0x80 | address);
  6454  00383E  5004               	movf	color_writetoaddr@address^0,w,c
  6455  003840  0980               	iorlw	128
  6456  003842  EC37  F01C         	call	_I2C_2_Master_Write
  6457                           
  6458                           ;color.c: 31:     I2C_2_Master_Write(value);
  6459  003846  5003               	movf	color_writetoaddr@value^0,w,c
  6460  003848  EC37  F01C         	call	_I2C_2_Master_Write
  6461                           
  6462                           ;color.c: 32:     I2C_2_Master_Stop();
  6463  00384C  EC43  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6464  003850  0012               	return		;funcret
  6465  003852                     __end_of_color_writetoaddr:
  6466                           	callstack 0
  6467                           
  6468 ;; *************** function _I2C_2_Master_Init *****************
  6469 ;; Defined at:
  6470 ;;		line 4 in file "i2c.c"
  6471 ;; Parameters:    Size  Location     Type
  6472 ;;		None
  6473 ;; Auto vars:     Size  Location     Type
  6474 ;;		None
  6475 ;; Return value:  Size  Location     Type
  6476 ;;                  1    wreg      void 
  6477 ;; Registers used:
  6478 ;;		wreg, status,2
  6479 ;; Tracked objects:
  6480 ;;		On entry : 0/0
  6481 ;;		On exit  : 0/0
  6482 ;;		Unchanged: 0/0
  6483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6488 ;;Total ram usage:        0 bytes
  6489 ;; Hardware stack levels used: 1
  6490 ;; Hardware stack levels required when called: 1
  6491 ;; This function calls:
  6492 ;;		Nothing
  6493 ;; This function is called by:
  6494 ;;		_color_click_init
  6495 ;; This function uses a non-reentrant model
  6496 ;;
  6497                           
  6498                           	psect	text18
  6499  003778                     __ptext18:
  6500                           	callstack 0
  6501  003778                     _I2C_2_Master_Init:
  6502                           	callstack 28
  6503  003778                     
  6504                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6505  003778  010E               	movlb	14	; () banked
  6506  00377A  51D9               	movf	217,w,b	;volatile
  6507  00377C  0BF0               	andlw	-16
  6508  00377E  0908               	iorlw	8
  6509  003780  6FD9               	movwf	217,b	;volatile
  6510  003782                     
  6511                           ; BSR set to: 14
  6512                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6513  003782  8BD9               	bsf	217,5,b	;volatile
  6514                           
  6515                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6516  003784  0E9F               	movlw	159
  6517  003786  6FD6               	movwf	214,b	;volatile
  6518  003788                     
  6519                           ; BSR set to: 14
  6520                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6521  003788  8A84               	bsf	132,5,c	;volatile
  6522  00378A                     
  6523                           ; BSR set to: 14
  6524                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6525  00378A  8C84               	bsf	132,6,c	;volatile
  6526  00378C                     
  6527                           ; BSR set to: 14
  6528                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6529  00378C  9BA7               	bcf	167,5,b	;volatile
  6530  00378E                     
  6531                           ; BSR set to: 14
  6532                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6533  00378E  9DA7               	bcf	167,6,b	;volatile
  6534                           
  6535                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6536  003790  0E1D               	movlw	29
  6537  003792  6F1D               	movwf	29,b	;volatile
  6538                           
  6539                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6540  003794  0E1E               	movlw	30
  6541  003796  6F1C               	movwf	28,b	;volatile
  6542                           
  6543                           ;i2c.c: 18:   RD5PPS=0x1C;
  6544  003798  0E1C               	movlw	28
  6545  00379A  6F6F               	movwf	111,b	;volatile
  6546                           
  6547                           ;i2c.c: 19:   RD6PPS=0x1B;
  6548  00379C  0E1B               	movlw	27
  6549  00379E  6F70               	movwf	112,b	;volatile
  6550  0037A0                     
  6551                           ; BSR set to: 14
  6552  0037A0  0012               	return		;funcret
  6553  0037A2                     __end_of_I2C_2_Master_Init:
  6554                           	callstack 0
  6555                           
  6556 ;; *************** function _calibrateW *****************
  6557 ;; Defined at:
  6558 ;;		line 101 in file "color.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  m               2   11[COMRAM] PTR struct RGB_val
  6561 ;;		 -> main@RGBstruct(20), 
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;		None
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  1    wreg      void 
  6566 ;; Registers used:
  6567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6576 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6577 ;;Total ram usage:        2 bytes
  6578 ;; Hardware stack levels used: 1
  6579 ;; Hardware stack levels required when called: 4
  6580 ;; This function calls:
  6581 ;;		_color_read_Blue
  6582 ;;		_color_read_Green
  6583 ;;		_color_read_Red
  6584 ;; This function is called by:
  6585 ;;		_main
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           	psect	text19
  6590  003630                     __ptext19:
  6591                           	callstack 0
  6592  003630                     _calibrateW:
  6593                           	callstack 26
  6594  003630                     
  6595                           ;color.c: 102:         (m->whiteR) = color_read_Red();
  6596  003630  ECA0  F01A         	call	_color_read_Red	;wreg free
  6597  003634  EE20 F006          	lfsr	2,6
  6598  003638  500C               	movf	calibrateW@m^0,w,c
  6599  00363A  26D9               	addwf	fsr2l,f,c
  6600  00363C  500D               	movf	(calibrateW@m+1)^0,w,c
  6601  00363E  22DA               	addwfc	fsr2h,f,c
  6602  003640  C005  FFDE         	movff	?_color_read_Red,postinc2
  6603  003644  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6604                           
  6605                           ;color.c: 103:         (m->whiteG) = color_read_Green();
  6606  003648  ECC8  F01A         	call	_color_read_Green	;wreg free
  6607  00364C  EE20 F008          	lfsr	2,8
  6608  003650  500C               	movf	calibrateW@m^0,w,c
  6609  003652  26D9               	addwf	fsr2l,f,c
  6610  003654  500D               	movf	(calibrateW@m+1)^0,w,c
  6611  003656  22DA               	addwfc	fsr2h,f,c
  6612  003658  C005  FFDE         	movff	?_color_read_Green,postinc2
  6613  00365C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6614                           
  6615                           ;color.c: 104:         (m->whiteB) = color_read_Blue();
  6616  003660  ECF0  F01A         	call	_color_read_Blue	;wreg free
  6617  003664  EE20 F00A          	lfsr	2,10
  6618  003668  500C               	movf	calibrateW@m^0,w,c
  6619  00366A  26D9               	addwf	fsr2l,f,c
  6620  00366C  500D               	movf	(calibrateW@m+1)^0,w,c
  6621  00366E  22DA               	addwfc	fsr2h,f,c
  6622  003670  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6623  003674  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6624  003678  0012               	return		;funcret
  6625  00367A                     __end_of_calibrateW:
  6626                           	callstack 0
  6627                           
  6628 ;; *************** function _calibrateB *****************
  6629 ;; Defined at:
  6630 ;;		line 107 in file "color.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  m               2   11[COMRAM] PTR struct RGB_val
  6633 ;;		 -> main@RGBstruct(20), 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6648 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6649 ;;Total ram usage:        2 bytes
  6650 ;; Hardware stack levels used: 1
  6651 ;; Hardware stack levels required when called: 4
  6652 ;; This function calls:
  6653 ;;		_color_read_Blue
  6654 ;;		_color_read_Green
  6655 ;;		_color_read_Red
  6656 ;; This function is called by:
  6657 ;;		_main
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           	psect	text20
  6662  00367A                     __ptext20:
  6663                           	callstack 0
  6664  00367A                     _calibrateB:
  6665                           	callstack 26
  6666  00367A                     
  6667                           ;color.c: 108:     (m->blackR) = color_read_Red();
  6668  00367A  ECA0  F01A         	call	_color_read_Red	;wreg free
  6669  00367E  C00C  FFD9         	movff	calibrateB@m,fsr2l
  6670  003682  C00D  FFDA         	movff	calibrateB@m+1,fsr2h
  6671  003686  C005  FFDE         	movff	?_color_read_Red,postinc2
  6672  00368A  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6673                           
  6674                           ;color.c: 109:     (m->blackG) = color_read_Green();
  6675  00368E  ECC8  F01A         	call	_color_read_Green	;wreg free
  6676  003692  EE20 F002          	lfsr	2,2
  6677  003696  500C               	movf	calibrateB@m^0,w,c
  6678  003698  26D9               	addwf	fsr2l,f,c
  6679  00369A  500D               	movf	(calibrateB@m+1)^0,w,c
  6680  00369C  22DA               	addwfc	fsr2h,f,c
  6681  00369E  C005  FFDE         	movff	?_color_read_Green,postinc2
  6682  0036A2  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6683                           
  6684                           ;color.c: 110:     (m->blackB) = color_read_Blue();
  6685  0036A6  ECF0  F01A         	call	_color_read_Blue	;wreg free
  6686  0036AA  EE20 F004          	lfsr	2,4
  6687  0036AE  500C               	movf	calibrateB@m^0,w,c
  6688  0036B0  26D9               	addwf	fsr2l,f,c
  6689  0036B2  500D               	movf	(calibrateB@m+1)^0,w,c
  6690  0036B4  22DA               	addwfc	fsr2h,f,c
  6691  0036B6  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6692  0036BA  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6693  0036BE  0012               	return		;funcret
  6694  0036C0                     __end_of_calibrateB:
  6695                           	callstack 0
  6696                           
  6697 ;; *************** function _color_read_Red *****************
  6698 ;; Defined at:
  6699 ;;		line 49 in file "color.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;		None
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;  tmp             2    9[COMRAM] unsigned int 
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  2    4[COMRAM] unsigned int 
  6706 ;; Registers used:
  6707 ;;		wreg, status,2, status,0, cstack
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6714 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6715 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6716 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6717 ;;Total ram usage:        7 bytes
  6718 ;; Hardware stack levels used: 1
  6719 ;; Hardware stack levels required when called: 3
  6720 ;; This function calls:
  6721 ;;		_I2C_2_Master_Read
  6722 ;;		_I2C_2_Master_RepStart
  6723 ;;		_I2C_2_Master_Start
  6724 ;;		_I2C_2_Master_Stop
  6725 ;;		_I2C_2_Master_Write
  6726 ;; This function is called by:
  6727 ;;		_read_colours
  6728 ;;		_calibrateW
  6729 ;;		_calibrateB
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           	psect	text21
  6734  003540                     __ptext21:
  6735                           	callstack 0
  6736  003540                     _color_read_Red:
  6737                           	callstack 26
  6738  003540                     
  6739                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  6740  003540  EC48  F01C         	call	_I2C_2_Master_Start	;wreg free
  6741                           
  6742                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  6743  003544  0E52               	movlw	82
  6744  003546  EC37  F01C         	call	_I2C_2_Master_Write
  6745                           
  6746                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x16);
  6747  00354A  0EB6               	movlw	182
  6748  00354C  EC37  F01C         	call	_I2C_2_Master_Write
  6749                           
  6750                           ;color.c: 55:  I2C_2_Master_RepStart();
  6751  003550  EC4D  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6752                           
  6753                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  6754  003554  0E53               	movlw	83
  6755  003556  EC37  F01C         	call	_I2C_2_Master_Write
  6756                           
  6757                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  6758  00355A  0E01               	movlw	1
  6759  00355C  EC81  F01B         	call	_I2C_2_Master_Read
  6760  003560  6E07               	movwf	??_color_read_Red^0,c
  6761  003562  5007               	movf	??_color_read_Red^0,w,c
  6762  003564  6E0A               	movwf	color_read_Red@tmp^0,c
  6763  003566  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6764                           
  6765                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6766  003568  0E00               	movlw	0
  6767  00356A  EC81  F01B         	call	_I2C_2_Master_Read
  6768  00356E  6E07               	movwf	??_color_read_Red^0,c
  6769  003570  5007               	movf	??_color_read_Red^0,w,c
  6770  003572  6E09               	movwf	(??_color_read_Red+2)^0,c
  6771  003574  6A08               	clrf	(??_color_read_Red+1)^0,c
  6772  003576  500A               	movf	color_read_Red@tmp^0,w,c
  6773  003578  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6774  00357A  6E0A               	movwf	color_read_Red@tmp^0,c
  6775  00357C  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6776  00357E  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6777  003580  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6778                           
  6779                           ;color.c: 59:  I2C_2_Master_Stop();
  6780  003582  EC43  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6781  003586                     
  6782                           ;color.c: 60:  return tmp;
  6783  003586  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6784  00358A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6785  00358E  0012               	return		;funcret
  6786  003590                     __end_of_color_read_Red:
  6787                           	callstack 0
  6788                           
  6789 ;; *************** function _color_read_Green *****************
  6790 ;; Defined at:
  6791 ;;		line 63 in file "color.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;		None
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;  tmp             2    9[COMRAM] unsigned int 
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  2    4[COMRAM] unsigned int 
  6798 ;; Registers used:
  6799 ;;		wreg, status,2, status,0, cstack
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6805 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6806 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6807 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6808 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6809 ;;Total ram usage:        7 bytes
  6810 ;; Hardware stack levels used: 1
  6811 ;; Hardware stack levels required when called: 3
  6812 ;; This function calls:
  6813 ;;		_I2C_2_Master_Read
  6814 ;;		_I2C_2_Master_RepStart
  6815 ;;		_I2C_2_Master_Start
  6816 ;;		_I2C_2_Master_Stop
  6817 ;;		_I2C_2_Master_Write
  6818 ;; This function is called by:
  6819 ;;		_read_colours
  6820 ;;		_calibrateW
  6821 ;;		_calibrateB
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text22
  6826  003590                     __ptext22:
  6827                           	callstack 0
  6828  003590                     _color_read_Green:
  6829                           	callstack 26
  6830  003590                     
  6831                           ;color.c: 64:     unsigned int tmp;;color.c: 65:     I2C_2_Master_Start();
  6832  003590  EC48  F01C         	call	_I2C_2_Master_Start	;wreg free
  6833                           
  6834                           ;color.c: 66:     I2C_2_Master_Write(0x52 | 0x00);
  6835  003594  0E52               	movlw	82
  6836  003596  EC37  F01C         	call	_I2C_2_Master_Write
  6837                           
  6838                           ;color.c: 67:  I2C_2_Master_Write(0xA0 | 0x18);
  6839  00359A  0EB8               	movlw	184
  6840  00359C  EC37  F01C         	call	_I2C_2_Master_Write
  6841                           
  6842                           ;color.c: 68:  I2C_2_Master_RepStart();
  6843  0035A0  EC4D  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6844                           
  6845                           ;color.c: 69:  I2C_2_Master_Write(0x52 | 0x01);
  6846  0035A4  0E53               	movlw	83
  6847  0035A6  EC37  F01C         	call	_I2C_2_Master_Write
  6848                           
  6849                           ;color.c: 70:  tmp=I2C_2_Master_Read(1);
  6850  0035AA  0E01               	movlw	1
  6851  0035AC  EC81  F01B         	call	_I2C_2_Master_Read
  6852  0035B0  6E07               	movwf	??_color_read_Green^0,c
  6853  0035B2  5007               	movf	??_color_read_Green^0,w,c
  6854  0035B4  6E0A               	movwf	color_read_Green@tmp^0,c
  6855  0035B6  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6856                           
  6857                           ;color.c: 71:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6858  0035B8  0E00               	movlw	0
  6859  0035BA  EC81  F01B         	call	_I2C_2_Master_Read
  6860  0035BE  6E07               	movwf	??_color_read_Green^0,c
  6861  0035C0  5007               	movf	??_color_read_Green^0,w,c
  6862  0035C2  6E09               	movwf	(??_color_read_Green+2)^0,c
  6863  0035C4  6A08               	clrf	(??_color_read_Green+1)^0,c
  6864  0035C6  500A               	movf	color_read_Green@tmp^0,w,c
  6865  0035C8  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6866  0035CA  6E0A               	movwf	color_read_Green@tmp^0,c
  6867  0035CC  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6868  0035CE  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6869  0035D0  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6870                           
  6871                           ;color.c: 72:     I2C_2_Master_Stop();
  6872  0035D2  EC43  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6873  0035D6                     
  6874                           ;color.c: 73:     return tmp;
  6875  0035D6  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6876  0035DA  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6877  0035DE  0012               	return		;funcret
  6878  0035E0                     __end_of_color_read_Green:
  6879                           	callstack 0
  6880                           
  6881 ;; *************** function _color_read_Blue *****************
  6882 ;; Defined at:
  6883 ;;		line 76 in file "color.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;		None
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;  tmp             2    9[COMRAM] unsigned int 
  6888 ;; Return value:  Size  Location     Type
  6889 ;;                  2    4[COMRAM] unsigned int 
  6890 ;; Registers used:
  6891 ;;		wreg, status,2, status,0, cstack
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6899 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6900 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6901 ;;Total ram usage:        7 bytes
  6902 ;; Hardware stack levels used: 1
  6903 ;; Hardware stack levels required when called: 3
  6904 ;; This function calls:
  6905 ;;		_I2C_2_Master_Read
  6906 ;;		_I2C_2_Master_RepStart
  6907 ;;		_I2C_2_Master_Start
  6908 ;;		_I2C_2_Master_Stop
  6909 ;;		_I2C_2_Master_Write
  6910 ;; This function is called by:
  6911 ;;		_read_colours
  6912 ;;		_calibrateW
  6913 ;;		_calibrateB
  6914 ;; This function uses a non-reentrant model
  6915 ;;
  6916                           
  6917                           	psect	text23
  6918  0035E0                     __ptext23:
  6919                           	callstack 0
  6920  0035E0                     _color_read_Blue:
  6921                           	callstack 26
  6922  0035E0                     
  6923                           ;color.c: 77:     unsigned int tmp;;color.c: 78:     I2C_2_Master_Start();
  6924  0035E0  EC48  F01C         	call	_I2C_2_Master_Start	;wreg free
  6925                           
  6926                           ;color.c: 79:     I2C_2_Master_Write(0x52 | 0x00);
  6927  0035E4  0E52               	movlw	82
  6928  0035E6  EC37  F01C         	call	_I2C_2_Master_Write
  6929                           
  6930                           ;color.c: 80:  I2C_2_Master_Write(0xA0 | 0x1A);
  6931  0035EA  0EBA               	movlw	186
  6932  0035EC  EC37  F01C         	call	_I2C_2_Master_Write
  6933                           
  6934                           ;color.c: 81:  I2C_2_Master_RepStart();
  6935  0035F0  EC4D  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  6936                           
  6937                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
  6938  0035F4  0E53               	movlw	83
  6939  0035F6  EC37  F01C         	call	_I2C_2_Master_Write
  6940                           
  6941                           ;color.c: 83:  tmp=I2C_2_Master_Read(1);
  6942  0035FA  0E01               	movlw	1
  6943  0035FC  EC81  F01B         	call	_I2C_2_Master_Read
  6944  003600  6E07               	movwf	??_color_read_Blue^0,c
  6945  003602  5007               	movf	??_color_read_Blue^0,w,c
  6946  003604  6E0A               	movwf	color_read_Blue@tmp^0,c
  6947  003606  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6948                           
  6949                           ;color.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6950  003608  0E00               	movlw	0
  6951  00360A  EC81  F01B         	call	_I2C_2_Master_Read
  6952  00360E  6E07               	movwf	??_color_read_Blue^0,c
  6953  003610  5007               	movf	??_color_read_Blue^0,w,c
  6954  003612  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6955  003614  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6956  003616  500A               	movf	color_read_Blue@tmp^0,w,c
  6957  003618  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6958  00361A  6E0A               	movwf	color_read_Blue@tmp^0,c
  6959  00361C  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6960  00361E  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6961  003620  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6962                           
  6963                           ;color.c: 85:     I2C_2_Master_Stop();
  6964  003622  EC43  F01C         	call	_I2C_2_Master_Stop	;wreg free
  6965  003626                     
  6966                           ;color.c: 86:     return tmp;
  6967  003626  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6968  00362A  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6969  00362E  0012               	return		;funcret
  6970  003630                     __end_of_color_read_Blue:
  6971                           	callstack 0
  6972                           
  6973 ;; *************** function _I2C_2_Master_Write *****************
  6974 ;; Defined at:
  6975 ;;		line 45 in file "i2c.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;  data_byte       1    wreg     unsigned char 
  6978 ;; Auto vars:     Size  Location     Type
  6979 ;;  data_byte       1    1[COMRAM] unsigned char 
  6980 ;; Return value:  Size  Location     Type
  6981 ;;                  1    wreg      void 
  6982 ;; Registers used:
  6983 ;;		wreg, status,2, status,0, cstack
  6984 ;; Tracked objects:
  6985 ;;		On entry : 0/0
  6986 ;;		On exit  : 0/0
  6987 ;;		Unchanged: 0/0
  6988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6993 ;;Total ram usage:        1 bytes
  6994 ;; Hardware stack levels used: 1
  6995 ;; Hardware stack levels required when called: 2
  6996 ;; This function calls:
  6997 ;;		_I2C_2_Master_Idle
  6998 ;; This function is called by:
  6999 ;;		_color_writetoaddr
  7000 ;;		_color_read_Clear
  7001 ;;		_color_read_Red
  7002 ;;		_color_read_Green
  7003 ;;		_color_read_Blue
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           	psect	text24
  7008  00386E                     __ptext24:
  7009                           	callstack 0
  7010  00386E                     _I2C_2_Master_Write:
  7011                           	callstack 26
  7012                           
  7013                           ;incstack = 0
  7014                           ;I2C_2_Master_Write@data_byte stored from wreg
  7015  00386E  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  7016  003870                     
  7017                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7018  003870  ECD1  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7019  003874                     
  7020                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7021  003874  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7022  003878  0012               	return		;funcret
  7023  00387A                     __end_of_I2C_2_Master_Write:
  7024                           	callstack 0
  7025                           
  7026 ;; *************** function _I2C_2_Master_Stop *****************
  7027 ;; Defined at:
  7028 ;;		line 39 in file "i2c.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;		None
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;		None
  7033 ;; Return value:  Size  Location     Type
  7034 ;;                  1    wreg      void 
  7035 ;; Registers used:
  7036 ;;		wreg, status,2, status,0, cstack
  7037 ;; Tracked objects:
  7038 ;;		On entry : 0/0
  7039 ;;		On exit  : 0/0
  7040 ;;		Unchanged: 0/0
  7041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7046 ;;Total ram usage:        0 bytes
  7047 ;; Hardware stack levels used: 1
  7048 ;; Hardware stack levels required when called: 2
  7049 ;; This function calls:
  7050 ;;		_I2C_2_Master_Idle
  7051 ;; This function is called by:
  7052 ;;		_color_writetoaddr
  7053 ;;		_color_read_Clear
  7054 ;;		_color_read_Red
  7055 ;;		_color_read_Green
  7056 ;;		_color_read_Blue
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           	psect	text25
  7061  003886                     __ptext25:
  7062                           	callstack 0
  7063  003886                     _I2C_2_Master_Stop:
  7064                           	callstack 26
  7065  003886                     
  7066                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7067  003886  ECD1  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7068  00388A                     
  7069                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7070  00388A  010E               	movlb	14	; () banked
  7071  00388C  85DA               	bsf	218,2,b	;volatile
  7072  00388E                     
  7073                           ; BSR set to: 14
  7074  00388E  0012               	return		;funcret
  7075  003890                     __end_of_I2C_2_Master_Stop:
  7076                           	callstack 0
  7077                           
  7078 ;; *************** function _I2C_2_Master_Start *****************
  7079 ;; Defined at:
  7080 ;;		line 27 in file "i2c.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;		None
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;		None
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  1    wreg      void 
  7087 ;; Registers used:
  7088 ;;		wreg, status,2, status,0, cstack
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7098 ;;Total ram usage:        0 bytes
  7099 ;; Hardware stack levels used: 1
  7100 ;; Hardware stack levels required when called: 2
  7101 ;; This function calls:
  7102 ;;		_I2C_2_Master_Idle
  7103 ;; This function is called by:
  7104 ;;		_color_writetoaddr
  7105 ;;		_color_read_Clear
  7106 ;;		_color_read_Red
  7107 ;;		_color_read_Green
  7108 ;;		_color_read_Blue
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112                           	psect	text26
  7113  003890                     __ptext26:
  7114                           	callstack 0
  7115  003890                     _I2C_2_Master_Start:
  7116                           	callstack 26
  7117  003890                     
  7118                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7119  003890  ECD1  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7120  003894                     
  7121                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7122  003894  010E               	movlb	14	; () banked
  7123  003896  81DA               	bsf	218,0,b	;volatile
  7124  003898                     
  7125                           ; BSR set to: 14
  7126  003898  0012               	return		;funcret
  7127  00389A                     __end_of_I2C_2_Master_Start:
  7128                           	callstack 0
  7129                           
  7130 ;; *************** function _I2C_2_Master_RepStart *****************
  7131 ;; Defined at:
  7132 ;;		line 33 in file "i2c.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;		None
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;		None
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  1    wreg      void 
  7139 ;; Registers used:
  7140 ;;		wreg, status,2, status,0, cstack
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7150 ;;Total ram usage:        0 bytes
  7151 ;; Hardware stack levels used: 1
  7152 ;; Hardware stack levels required when called: 2
  7153 ;; This function calls:
  7154 ;;		_I2C_2_Master_Idle
  7155 ;; This function is called by:
  7156 ;;		_color_read_Clear
  7157 ;;		_color_read_Red
  7158 ;;		_color_read_Green
  7159 ;;		_color_read_Blue
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           	psect	text27
  7164  00389A                     __ptext27:
  7165                           	callstack 0
  7166  00389A                     _I2C_2_Master_RepStart:
  7167                           	callstack 26
  7168  00389A                     
  7169                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7170  00389A  ECD1  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7171  00389E                     
  7172                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7173  00389E  010E               	movlb	14	; () banked
  7174  0038A0  83DA               	bsf	218,1,b	;volatile
  7175  0038A2                     
  7176                           ; BSR set to: 14
  7177  0038A2  0012               	return		;funcret
  7178  0038A4                     __end_of_I2C_2_Master_RepStart:
  7179                           	callstack 0
  7180                           
  7181 ;; *************** function _I2C_2_Master_Read *****************
  7182 ;; Defined at:
  7183 ;;		line 51 in file "i2c.c"
  7184 ;; Parameters:    Size  Location     Type
  7185 ;;  ack             1    wreg     unsigned char 
  7186 ;; Auto vars:     Size  Location     Type
  7187 ;;  ack             1    2[COMRAM] unsigned char 
  7188 ;;  tmp             1    3[COMRAM] unsigned char 
  7189 ;; Return value:  Size  Location     Type
  7190 ;;                  1    wreg      unsigned char 
  7191 ;; Registers used:
  7192 ;;		wreg, status,2, status,0, cstack
  7193 ;; Tracked objects:
  7194 ;;		On entry : 0/0
  7195 ;;		On exit  : 0/0
  7196 ;;		Unchanged: 0/0
  7197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7199 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7200 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7201 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7202 ;;Total ram usage:        3 bytes
  7203 ;; Hardware stack levels used: 1
  7204 ;; Hardware stack levels required when called: 2
  7205 ;; This function calls:
  7206 ;;		_I2C_2_Master_Idle
  7207 ;; This function is called by:
  7208 ;;		_color_read_Clear
  7209 ;;		_color_read_Red
  7210 ;;		_color_read_Green
  7211 ;;		_color_read_Blue
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           	psect	text28
  7216  003702                     __ptext28:
  7217                           	callstack 0
  7218  003702                     _I2C_2_Master_Read:
  7219                           	callstack 26
  7220                           
  7221                           ; BSR set to: 14
  7222                           ;incstack = 0
  7223                           ;I2C_2_Master_Read@ack stored from wreg
  7224  003702  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7225  003704                     
  7226                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7227  003704  ECD1  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7228  003708                     
  7229                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7230  003708  010E               	movlb	14	; () banked
  7231  00370A  87DA               	bsf	218,3,b	;volatile
  7232                           
  7233                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7234  00370C  ECD1  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7235  003710                     
  7236                           ;i2c.c: 57:   tmp = SSP2BUF;
  7237  003710  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7238                           
  7239                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7240  003714  ECD1  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7241  003718                     
  7242                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7243  003718  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7244  00371A  B4D8               	btfsc	status,2,c
  7245  00371C  EF92  F01B         	goto	u2231
  7246  003720  EF96  F01B         	goto	u2230
  7247  003724                     u2231:
  7248  003724  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7249  003726  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7250  003728  EF97  F01B         	goto	u2248
  7251  00372C                     u2230:
  7252  00372C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7253  00372E                     u2248:
  7254  00372E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7255  003730  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7256  003732  010E               	movlb	14	; () banked
  7257  003734  51DA               	movf	218,w,b	;volatile
  7258  003736  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7259  003738  0BDF               	andlw	-33
  7260  00373A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7261  00373C  6FDA               	movwf	218,b	;volatile
  7262  00373E                     
  7263                           ; BSR set to: 14
  7264                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7265  00373E  89DA               	bsf	218,4,b	;volatile
  7266  003740                     
  7267                           ; BSR set to: 14
  7268                           ;i2c.c: 61:   return tmp;
  7269  003740  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7270  003742                     
  7271                           ; BSR set to: 14
  7272  003742  0012               	return		;funcret
  7273  003744                     __end_of_I2C_2_Master_Read:
  7274                           	callstack 0
  7275                           
  7276 ;; *************** function _I2C_2_Master_Idle *****************
  7277 ;; Defined at:
  7278 ;;		line 22 in file "i2c.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;		None
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;		None
  7283 ;; Return value:  Size  Location     Type
  7284 ;;                  1    wreg      void 
  7285 ;; Registers used:
  7286 ;;		wreg, status,2, status,0
  7287 ;; Tracked objects:
  7288 ;;		On entry : 0/0
  7289 ;;		On exit  : 0/0
  7290 ;;		Unchanged: 0/0
  7291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7294 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7295 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7296 ;;Total ram usage:        1 bytes
  7297 ;; Hardware stack levels used: 1
  7298 ;; Hardware stack levels required when called: 1
  7299 ;; This function calls:
  7300 ;;		Nothing
  7301 ;; This function is called by:
  7302 ;;		_I2C_2_Master_Start
  7303 ;;		_I2C_2_Master_RepStart
  7304 ;;		_I2C_2_Master_Stop
  7305 ;;		_I2C_2_Master_Write
  7306 ;;		_I2C_2_Master_Read
  7307 ;; This function uses a non-reentrant model
  7308 ;;
  7309                           
  7310                           	psect	text29
  7311  0037A2                     __ptext29:
  7312                           	callstack 0
  7313  0037A2                     _I2C_2_Master_Idle:
  7314                           	callstack 26
  7315  0037A2                     l152:
  7316  0037A2  010E               	movlb	14	; () banked
  7317  0037A4  B5D8               	btfsc	216,2,b	;volatile
  7318  0037A6  EFD7  F01B         	goto	u2171
  7319  0037AA  EFD9  F01B         	goto	u2170
  7320  0037AE                     u2171:
  7321  0037AE  EFD1  F01B         	goto	l152
  7322  0037B2                     u2170:
  7323  0037B2                     
  7324                           ; BSR set to: 14
  7325  0037B2  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7326  0037B6  0E1F               	movlw	31
  7327  0037B8  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  7328  0037BA  A4D8               	btfss	status,2,c
  7329  0037BC  EFE2  F01B         	goto	u2181
  7330  0037C0  EFE4  F01B         	goto	u2180
  7331  0037C4                     u2181:
  7332  0037C4  EFD1  F01B         	goto	l152
  7333  0037C8                     u2180:
  7334  0037C8                     
  7335                           ; BSR set to: 14
  7336  0037C8  0012               	return		;funcret
  7337  0037CA                     __end_of_I2C_2_Master_Idle:
  7338                           	callstack 0
  7339                           
  7340 ;; *************** function _White *****************
  7341 ;; Defined at:
  7342 ;;		line 176 in file "color.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;  mL              2   36[COMRAM] PTR struct DC_motor
  7345 ;;		 -> main@motorL(9), 
  7346 ;;  mR              2   38[COMRAM] PTR struct DC_motor
  7347 ;;		 -> main@motorR(9), 
  7348 ;;  movementArra    2   40[COMRAM] PTR unsigned int 
  7349 ;;		 -> movementArray(30), 
  7350 ;;  movements       2   42[COMRAM] unsigned int 
  7351 ;;  timerArray      2   44[COMRAM] PTR unsigned int 
  7352 ;;		 -> timerArray(30), 
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;  tempTimerVal    2   52[COMRAM] unsigned int 
  7355 ;;  i               2   54[COMRAM] int 
  7356 ;; Return value:  Size  Location     Type
  7357 ;;                  1    wreg      void 
  7358 ;; Registers used:
  7359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7360 ;; Tracked objects:
  7361 ;;		On entry : 0/0
  7362 ;;		On exit  : 0/0
  7363 ;;		Unchanged: 0/0
  7364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7365 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7366 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7367 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7368 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7369 ;;Total ram usage:       20 bytes
  7370 ;; Hardware stack levels used: 1
  7371 ;; Hardware stack levels required when called: 5
  7372 ;; This function calls:
  7373 ;;		_forward
  7374 ;;		_reverse
  7375 ;;		_stop
  7376 ;;		_turnLeft135
  7377 ;;		_turnLeft90
  7378 ;;		_turnRight135
  7379 ;;		_turnRight180
  7380 ;;		_turnRight90
  7381 ;; This function is called by:
  7382 ;;		_main
  7383 ;; This function uses a non-reentrant model
  7384 ;;
  7385                           
  7386                           	psect	text30
  7387  00187C                     __ptext30:
  7388                           	callstack 0
  7389  00187C                     _White:
  7390                           	callstack 25
  7391  00187C                     
  7392                           ;color.c: 176: void White(struct DC_motor *mL, struct DC_motor *mR,unsigned int movement
      +                          Array[], unsigned int movements,unsigned int timerArray[]);color.c: 177: {;color.c: 179:
      +                               stop(mL, mR);
  7393  00187C  C025  F019         	movff	White@mL,stop@mL
  7394  001880  C026  F01A         	movff	White@mL+1,stop@mL+1
  7395  001884  C027  F01B         	movff	White@mR,stop@mR
  7396  001888  C028  F01C         	movff	White@mR+1,stop@mR+1
  7397  00188C  EC08  F019         	call	_stop	;wreg free
  7398                           
  7399                           ;color.c: 180:     turnRight180(mL, mR);
  7400  001890  C025  F01D         	movff	White@mL,turnRight180@mL
  7401  001894  C026  F01E         	movff	White@mL+1,turnRight180@mL+1
  7402  001898  C027  F01F         	movff	White@mR,turnRight180@mR
  7403  00189C  C028  F020         	movff	White@mR+1,turnRight180@mR+1
  7404  0018A0  EC3C  F015         	call	_turnRight180	;wreg free
  7405  0018A4                     
  7406                           ;color.c: 181:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7407  0018A4  0E52               	movlw	82
  7408  0018A6  6E30               	movwf	(??_White+1)^0,c
  7409  0018A8  0E2B               	movlw	43
  7410  0018AA  6E2F               	movwf	??_White^0,c
  7411  0018AC  0E00               	movlw	0
  7412  0018AE                     u4447:
  7413  0018AE  2EE8               	decfsz	wreg,f,c
  7414  0018B0  D7FE               	bra	u4447
  7415  0018B2  2E2F               	decfsz	??_White^0,f,c
  7416  0018B4  D7FC               	bra	u4447
  7417  0018B6  2E30               	decfsz	(??_White+1)^0,f,c
  7418  0018B8  D7FA               	bra	u4447
  7419  0018BA  D000               	nop2	
  7420  0018BC                     
  7421                           ;color.c: 183:     for (int i=0; i<movements; i++){
  7422  0018BC  0E00               	movlw	0
  7423  0018BE  6E38               	movwf	(White@i+1)^0,c
  7424  0018C0  0E00               	movlw	0
  7425  0018C2  6E37               	movwf	White@i^0,c
  7426  0018C4  EF41  F00E         	goto	l3851
  7427  0018C8                     l3801:
  7428                           
  7429                           ;color.c: 184:         if (movementArray[movements-i-1] == 0){turnLeft90(mL, mR);}
  7430  0018C8  5037               	movf	White@i^0,w,c
  7431  0018CA  5C2B               	subwf	White@movements^0,w,c
  7432  0018CC  6E2F               	movwf	??_White^0,c
  7433  0018CE  5038               	movf	(White@i+1)^0,w,c
  7434  0018D0  582C               	subwfb	(White@movements+1)^0,w,c
  7435  0018D2  6E30               	movwf	(??_White+1)^0,c
  7436  0018D4  90D8               	bcf	status,0,c
  7437  0018D6  362F               	rlcf	??_White^0,f,c
  7438  0018D8  3630               	rlcf	(??_White+1)^0,f,c
  7439  0018DA  C029  F031         	movff	White@movementArray,??_White+2
  7440  0018DE  C02A  F032         	movff	White@movementArray+1,??_White+3
  7441  0018E2  502F               	movf	??_White^0,w,c
  7442  0018E4  2631               	addwf	(??_White+2)^0,f,c
  7443  0018E6  5030               	movf	(??_White+1)^0,w,c
  7444  0018E8  2232               	addwfc	(??_White+3)^0,f,c
  7445  0018EA  0EFE               	movlw	254
  7446  0018EC  2431               	addwf	(??_White+2)^0,w,c
  7447  0018EE  6ED9               	movwf	fsr2l,c
  7448  0018F0  0EFF               	movlw	255
  7449  0018F2  2032               	addwfc	(??_White+3)^0,w,c
  7450  0018F4  6EDA               	movwf	fsr2h,c
  7451  0018F6  50DE               	movf	postinc2,w,c
  7452  0018F8  10DE               	iorwf	postinc2,w,c
  7453  0018FA  A4D8               	btfss	status,2,c
  7454  0018FC  EF82  F00C         	goto	u3771
  7455  001900  EF84  F00C         	goto	u3770
  7456  001904                     u3771:
  7457  001904  EF90  F00C         	goto	l3805
  7458  001908                     u3770:
  7459  001908  C025  F01D         	movff	White@mL,turnLeft90@mL
  7460  00190C  C026  F01E         	movff	White@mL+1,turnLeft90@mL+1
  7461  001910  C027  F01F         	movff	White@mR,turnLeft90@mR
  7462  001914  C028  F020         	movff	White@mR+1,turnLeft90@mR+1
  7463  001918  ECFD  F013         	call	_turnLeft90	;wreg free
  7464  00191C  EFFF  F00D         	goto	l3841
  7465  001920                     l3805:
  7466  001920  5037               	movf	White@i^0,w,c
  7467  001922  5C2B               	subwf	White@movements^0,w,c
  7468  001924  6E2F               	movwf	??_White^0,c
  7469  001926  5038               	movf	(White@i+1)^0,w,c
  7470  001928  582C               	subwfb	(White@movements+1)^0,w,c
  7471  00192A  6E30               	movwf	(??_White+1)^0,c
  7472  00192C  90D8               	bcf	status,0,c
  7473  00192E  362F               	rlcf	??_White^0,f,c
  7474  001930  3630               	rlcf	(??_White+1)^0,f,c
  7475  001932  C029  F031         	movff	White@movementArray,??_White+2
  7476  001936  C02A  F032         	movff	White@movementArray+1,??_White+3
  7477  00193A  502F               	movf	??_White^0,w,c
  7478  00193C  2631               	addwf	(??_White+2)^0,f,c
  7479  00193E  5030               	movf	(??_White+1)^0,w,c
  7480  001940  2232               	addwfc	(??_White+3)^0,f,c
  7481  001942  0EFE               	movlw	254
  7482  001944  2431               	addwf	(??_White+2)^0,w,c
  7483  001946  6ED9               	movwf	fsr2l,c
  7484  001948  0EFF               	movlw	255
  7485  00194A  2032               	addwfc	(??_White+3)^0,w,c
  7486  00194C  6EDA               	movwf	fsr2h,c
  7487  00194E  04DE               	decf	postinc2,w,c
  7488  001950  10DE               	iorwf	postinc2,w,c
  7489  001952  A4D8               	btfss	status,2,c
  7490  001954  EFAE  F00C         	goto	u3781
  7491  001958  EFB0  F00C         	goto	u3780
  7492  00195C                     u3781:
  7493  00195C  EFBC  F00C         	goto	l3809
  7494  001960                     u3780:
  7495  001960  C025  F01D         	movff	White@mL,turnRight90@mL
  7496  001964  C026  F01E         	movff	White@mL+1,turnRight90@mL+1
  7497  001968  C027  F01F         	movff	White@mR,turnRight90@mR
  7498  00196C  C028  F020         	movff	White@mR+1,turnRight90@mR+1
  7499  001970  EC9D  F014         	call	_turnRight90	;wreg free
  7500  001974  EFFF  F00D         	goto	l3841
  7501  001978                     l3809:
  7502  001978  5037               	movf	White@i^0,w,c
  7503  00197A  5C2B               	subwf	White@movements^0,w,c
  7504  00197C  6E2F               	movwf	??_White^0,c
  7505  00197E  5038               	movf	(White@i+1)^0,w,c
  7506  001980  582C               	subwfb	(White@movements+1)^0,w,c
  7507  001982  6E30               	movwf	(??_White+1)^0,c
  7508  001984  90D8               	bcf	status,0,c
  7509  001986  362F               	rlcf	??_White^0,f,c
  7510  001988  3630               	rlcf	(??_White+1)^0,f,c
  7511  00198A  C029  F031         	movff	White@movementArray,??_White+2
  7512  00198E  C02A  F032         	movff	White@movementArray+1,??_White+3
  7513  001992  502F               	movf	??_White^0,w,c
  7514  001994  2631               	addwf	(??_White+2)^0,f,c
  7515  001996  5030               	movf	(??_White+1)^0,w,c
  7516  001998  2232               	addwfc	(??_White+3)^0,f,c
  7517  00199A  0EFE               	movlw	254
  7518  00199C  2431               	addwf	(??_White+2)^0,w,c
  7519  00199E  6ED9               	movwf	fsr2l,c
  7520  0019A0  0EFF               	movlw	255
  7521  0019A2  2032               	addwfc	(??_White+3)^0,w,c
  7522  0019A4  6EDA               	movwf	fsr2h,c
  7523  0019A6  0E02               	movlw	2
  7524  0019A8  18DE               	xorwf	postinc2,w,c
  7525  0019AA  10DE               	iorwf	postinc2,w,c
  7526  0019AC  A4D8               	btfss	status,2,c
  7527  0019AE  EFDB  F00C         	goto	u3791
  7528  0019B2  EFDD  F00C         	goto	u3790
  7529  0019B6                     u3791:
  7530  0019B6  EFE9  F00C         	goto	l3813
  7531  0019BA                     u3790:
  7532  0019BA  C025  F01D         	movff	White@mL,turnRight180@mL
  7533  0019BE  C026  F01E         	movff	White@mL+1,turnRight180@mL+1
  7534  0019C2  C027  F01F         	movff	White@mR,turnRight180@mR
  7535  0019C6  C028  F020         	movff	White@mR+1,turnRight180@mR+1
  7536  0019CA  EC3C  F015         	call	_turnRight180	;wreg free
  7537  0019CE  EFFF  F00D         	goto	l3841
  7538  0019D2                     l3813:
  7539  0019D2  5037               	movf	White@i^0,w,c
  7540  0019D4  5C2B               	subwf	White@movements^0,w,c
  7541  0019D6  6E2F               	movwf	??_White^0,c
  7542  0019D8  5038               	movf	(White@i+1)^0,w,c
  7543  0019DA  582C               	subwfb	(White@movements+1)^0,w,c
  7544  0019DC  6E30               	movwf	(??_White+1)^0,c
  7545  0019DE  90D8               	bcf	status,0,c
  7546  0019E0  362F               	rlcf	??_White^0,f,c
  7547  0019E2  3630               	rlcf	(??_White+1)^0,f,c
  7548  0019E4  C029  F031         	movff	White@movementArray,??_White+2
  7549  0019E8  C02A  F032         	movff	White@movementArray+1,??_White+3
  7550  0019EC  502F               	movf	??_White^0,w,c
  7551  0019EE  2631               	addwf	(??_White+2)^0,f,c
  7552  0019F0  5030               	movf	(??_White+1)^0,w,c
  7553  0019F2  2232               	addwfc	(??_White+3)^0,f,c
  7554  0019F4  0EFE               	movlw	254
  7555  0019F6  2431               	addwf	(??_White+2)^0,w,c
  7556  0019F8  6ED9               	movwf	fsr2l,c
  7557  0019FA  0EFF               	movlw	255
  7558  0019FC  2032               	addwfc	(??_White+3)^0,w,c
  7559  0019FE  6EDA               	movwf	fsr2h,c
  7560  001A00  0E03               	movlw	3
  7561  001A02  18DE               	xorwf	postinc2,w,c
  7562  001A04  10DE               	iorwf	postinc2,w,c
  7563  001A06  A4D8               	btfss	status,2,c
  7564  001A08  EF08  F00D         	goto	u3801
  7565  001A0C  EF0A  F00D         	goto	u3800
  7566  001A10                     u3801:
  7567  001A10  EF41  F00D         	goto	l3821
  7568  001A14                     u3800:
  7569  001A14  C025  F01D         	movff	White@mL,turnLeft90@mL
  7570  001A18  C026  F01E         	movff	White@mL+1,turnLeft90@mL+1
  7571  001A1C  C027  F01F         	movff	White@mR,turnLeft90@mR
  7572  001A20  C028  F020         	movff	White@mR+1,turnLeft90@mR+1
  7573  001A24  ECFD  F013         	call	_turnLeft90	;wreg free
  7574  001A28  C025  F019         	movff	White@mL,reverse@mL
  7575  001A2C  C026  F01A         	movff	White@mL+1,reverse@mL+1
  7576  001A30  C027  F01B         	movff	White@mR,reverse@mR
  7577  001A34  C028  F01C         	movff	White@mR+1,reverse@mR+1
  7578  001A38  EC26  F01A         	call	_reverse	;wreg free
  7579  001A3C                     l3817:
  7580  001A3C  0E31               	movlw	49
  7581  001A3E  6E30               	movwf	(??_White+1)^0,c
  7582  001A40  0EB4               	movlw	180
  7583  001A42  6E2F               	movwf	??_White^0,c
  7584  001A44  0E66               	movlw	102
  7585  001A46                     u4457:
  7586  001A46  2EE8               	decfsz	wreg,f,c
  7587  001A48  D7FE               	bra	u4457
  7588  001A4A  2E2F               	decfsz	??_White^0,f,c
  7589  001A4C  D7FC               	bra	u4457
  7590  001A4E  2E30               	decfsz	(??_White+1)^0,f,c
  7591  001A50  D7FA               	bra	u4457
  7592  001A52  C025  F019         	movff	White@mL,stop@mL
  7593  001A56  C026  F01A         	movff	White@mL+1,stop@mL+1
  7594  001A5A  C027  F01B         	movff	White@mR,stop@mR
  7595  001A5E  C028  F01C         	movff	White@mR+1,stop@mR+1
  7596  001A62  EC08  F019         	call	_stop	;wreg free
  7597  001A66  0E05               	movlw	5
  7598  001A68  6E30               	movwf	(??_White+1)^0,c
  7599  001A6A  0E0F               	movlw	15
  7600  001A6C  6E2F               	movwf	??_White^0,c
  7601  001A6E  0EF1               	movlw	241
  7602  001A70                     u4467:
  7603  001A70  2EE8               	decfsz	wreg,f,c
  7604  001A72  D7FE               	bra	u4467
  7605  001A74  2E2F               	decfsz	??_White^0,f,c
  7606  001A76  D7FC               	bra	u4467
  7607  001A78  2E30               	decfsz	(??_White+1)^0,f,c
  7608  001A7A  D7FA               	bra	u4467
  7609  001A7C  F000               	nop	
  7610  001A7E  EFFF  F00D         	goto	l3841
  7611  001A82                     l3821:
  7612  001A82  5037               	movf	White@i^0,w,c
  7613  001A84  5C2B               	subwf	White@movements^0,w,c
  7614  001A86  6E2F               	movwf	??_White^0,c
  7615  001A88  5038               	movf	(White@i+1)^0,w,c
  7616  001A8A  582C               	subwfb	(White@movements+1)^0,w,c
  7617  001A8C  6E30               	movwf	(??_White+1)^0,c
  7618  001A8E  90D8               	bcf	status,0,c
  7619  001A90  362F               	rlcf	??_White^0,f,c
  7620  001A92  3630               	rlcf	(??_White+1)^0,f,c
  7621  001A94  C029  F031         	movff	White@movementArray,??_White+2
  7622  001A98  C02A  F032         	movff	White@movementArray+1,??_White+3
  7623  001A9C  502F               	movf	??_White^0,w,c
  7624  001A9E  2631               	addwf	(??_White+2)^0,f,c
  7625  001AA0  5030               	movf	(??_White+1)^0,w,c
  7626  001AA2  2232               	addwfc	(??_White+3)^0,f,c
  7627  001AA4  0EFE               	movlw	254
  7628  001AA6  2431               	addwf	(??_White+2)^0,w,c
  7629  001AA8  6ED9               	movwf	fsr2l,c
  7630  001AAA  0EFF               	movlw	255
  7631  001AAC  2032               	addwfc	(??_White+3)^0,w,c
  7632  001AAE  6EDA               	movwf	fsr2h,c
  7633  001AB0  0E04               	movlw	4
  7634  001AB2  18DE               	xorwf	postinc2,w,c
  7635  001AB4  10DE               	iorwf	postinc2,w,c
  7636  001AB6  A4D8               	btfss	status,2,c
  7637  001AB8  EF60  F00D         	goto	u3811
  7638  001ABC  EF62  F00D         	goto	u3810
  7639  001AC0                     u3811:
  7640  001AC0  EF78  F00D         	goto	l3829
  7641  001AC4                     u3810:
  7642  001AC4  C025  F01D         	movff	White@mL,turnRight90@mL
  7643  001AC8  C026  F01E         	movff	White@mL+1,turnRight90@mL+1
  7644  001ACC  C027  F01F         	movff	White@mR,turnRight90@mR
  7645  001AD0  C028  F020         	movff	White@mR+1,turnRight90@mR+1
  7646  001AD4  EC9D  F014         	call	_turnRight90	;wreg free
  7647  001AD8  C025  F019         	movff	White@mL,reverse@mL
  7648  001ADC  C026  F01A         	movff	White@mL+1,reverse@mL+1
  7649  001AE0  C027  F01B         	movff	White@mR,reverse@mR
  7650  001AE4  C028  F01C         	movff	White@mR+1,reverse@mR+1
  7651  001AE8  EC26  F01A         	call	_reverse	;wreg free
  7652  001AEC  EF1E  F00D         	goto	l3817
  7653  001AF0                     l3829:
  7654  001AF0  5037               	movf	White@i^0,w,c
  7655  001AF2  5C2B               	subwf	White@movements^0,w,c
  7656  001AF4  6E2F               	movwf	??_White^0,c
  7657  001AF6  5038               	movf	(White@i+1)^0,w,c
  7658  001AF8  582C               	subwfb	(White@movements+1)^0,w,c
  7659  001AFA  6E30               	movwf	(??_White+1)^0,c
  7660  001AFC  90D8               	bcf	status,0,c
  7661  001AFE  362F               	rlcf	??_White^0,f,c
  7662  001B00  3630               	rlcf	(??_White+1)^0,f,c
  7663  001B02  C029  F031         	movff	White@movementArray,??_White+2
  7664  001B06  C02A  F032         	movff	White@movementArray+1,??_White+3
  7665  001B0A  502F               	movf	??_White^0,w,c
  7666  001B0C  2631               	addwf	(??_White+2)^0,f,c
  7667  001B0E  5030               	movf	(??_White+1)^0,w,c
  7668  001B10  2232               	addwfc	(??_White+3)^0,f,c
  7669  001B12  0EFE               	movlw	254
  7670  001B14  2431               	addwf	(??_White+2)^0,w,c
  7671  001B16  6ED9               	movwf	fsr2l,c
  7672  001B18  0EFF               	movlw	255
  7673  001B1A  2032               	addwfc	(??_White+3)^0,w,c
  7674  001B1C  6EDA               	movwf	fsr2h,c
  7675  001B1E  0E05               	movlw	5
  7676  001B20  18DE               	xorwf	postinc2,w,c
  7677  001B22  10DE               	iorwf	postinc2,w,c
  7678  001B24  A4D8               	btfss	status,2,c
  7679  001B26  EF97  F00D         	goto	u3821
  7680  001B2A  EF99  F00D         	goto	u3820
  7681  001B2E                     u3821:
  7682  001B2E  EFA5  F00D         	goto	l3833
  7683  001B32                     u3820:
  7684  001B32  C025  F01D         	movff	White@mL,turnLeft135@mL
  7685  001B36  C026  F01E         	movff	White@mL+1,turnLeft135@mL+1
  7686  001B3A  C027  F01F         	movff	White@mR,turnLeft135@mR
  7687  001B3E  C028  F020         	movff	White@mR+1,turnLeft135@mR+1
  7688  001B42  EC79  F016         	call	_turnLeft135	;wreg free
  7689  001B46  EFFF  F00D         	goto	l3841
  7690  001B4A                     l3833:
  7691  001B4A  5037               	movf	White@i^0,w,c
  7692  001B4C  5C2B               	subwf	White@movements^0,w,c
  7693  001B4E  6E2F               	movwf	??_White^0,c
  7694  001B50  5038               	movf	(White@i+1)^0,w,c
  7695  001B52  582C               	subwfb	(White@movements+1)^0,w,c
  7696  001B54  6E30               	movwf	(??_White+1)^0,c
  7697  001B56  90D8               	bcf	status,0,c
  7698  001B58  362F               	rlcf	??_White^0,f,c
  7699  001B5A  3630               	rlcf	(??_White+1)^0,f,c
  7700  001B5C  C029  F031         	movff	White@movementArray,??_White+2
  7701  001B60  C02A  F032         	movff	White@movementArray+1,??_White+3
  7702  001B64  502F               	movf	??_White^0,w,c
  7703  001B66  2631               	addwf	(??_White+2)^0,f,c
  7704  001B68  5030               	movf	(??_White+1)^0,w,c
  7705  001B6A  2232               	addwfc	(??_White+3)^0,f,c
  7706  001B6C  0EFE               	movlw	254
  7707  001B6E  2431               	addwf	(??_White+2)^0,w,c
  7708  001B70  6ED9               	movwf	fsr2l,c
  7709  001B72  0EFF               	movlw	255
  7710  001B74  2032               	addwfc	(??_White+3)^0,w,c
  7711  001B76  6EDA               	movwf	fsr2h,c
  7712  001B78  0E06               	movlw	6
  7713  001B7A  18DE               	xorwf	postinc2,w,c
  7714  001B7C  10DE               	iorwf	postinc2,w,c
  7715  001B7E  A4D8               	btfss	status,2,c
  7716  001B80  EFC4  F00D         	goto	u3831
  7717  001B84  EFC6  F00D         	goto	u3830
  7718  001B88                     u3831:
  7719  001B88  EFD2  F00D         	goto	l3837
  7720  001B8C                     u3830:
  7721  001B8C  C025  F01D         	movff	White@mL,turnRight135@mL
  7722  001B90  C026  F01E         	movff	White@mL+1,turnRight135@mL+1
  7723  001B94  C027  F01F         	movff	White@mR,turnRight135@mR
  7724  001B98  C028  F020         	movff	White@mR+1,turnRight135@mR+1
  7725  001B9C  ECDB  F015         	call	_turnRight135	;wreg free
  7726  001BA0  EFFF  F00D         	goto	l3841
  7727  001BA4                     l3837:
  7728  001BA4  5037               	movf	White@i^0,w,c
  7729  001BA6  5C2B               	subwf	White@movements^0,w,c
  7730  001BA8  6E2F               	movwf	??_White^0,c
  7731  001BAA  5038               	movf	(White@i+1)^0,w,c
  7732  001BAC  582C               	subwfb	(White@movements+1)^0,w,c
  7733  001BAE  6E30               	movwf	(??_White+1)^0,c
  7734  001BB0  90D8               	bcf	status,0,c
  7735  001BB2  362F               	rlcf	??_White^0,f,c
  7736  001BB4  3630               	rlcf	(??_White+1)^0,f,c
  7737  001BB6  C029  F031         	movff	White@movementArray,??_White+2
  7738  001BBA  C02A  F032         	movff	White@movementArray+1,??_White+3
  7739  001BBE  502F               	movf	??_White^0,w,c
  7740  001BC0  2631               	addwf	(??_White+2)^0,f,c
  7741  001BC2  5030               	movf	(??_White+1)^0,w,c
  7742  001BC4  2232               	addwfc	(??_White+3)^0,f,c
  7743  001BC6  0EFE               	movlw	254
  7744  001BC8  2431               	addwf	(??_White+2)^0,w,c
  7745  001BCA  6ED9               	movwf	fsr2l,c
  7746  001BCC  0EFF               	movlw	255
  7747  001BCE  2032               	addwfc	(??_White+3)^0,w,c
  7748  001BD0  6EDA               	movwf	fsr2h,c
  7749  001BD2  0E09               	movlw	9
  7750  001BD4  18DE               	xorwf	postinc2,w,c
  7751  001BD6  10DE               	iorwf	postinc2,w,c
  7752  001BD8  A4D8               	btfss	status,2,c
  7753  001BDA  EFF1  F00D         	goto	u3841
  7754  001BDE  EFF3  F00D         	goto	u3840
  7755  001BE2                     u3841:
  7756  001BE2  EFFF  F00D         	goto	l109
  7757  001BE6                     u3840:
  7758  001BE6  C025  F019         	movff	White@mL,stop@mL
  7759  001BEA  C026  F01A         	movff	White@mL+1,stop@mL+1
  7760  001BEE  C027  F01B         	movff	White@mR,stop@mR
  7761  001BF2  C028  F01C         	movff	White@mR+1,stop@mR+1
  7762  001BF6  EC08  F019         	call	_stop	;wreg free
  7763  001BFA  EFFF  F00D         	goto	l3841
  7764  001BFE                     l109:
  7765  001BFE                     l3841:
  7766                           
  7767                           ;color.c: 194:         unsigned int tempTimerVal = 0;
  7768  001BFE  0E00               	movlw	0
  7769  001C00  6E36               	movwf	(White@tempTimerVal+1)^0,c
  7770  001C02  0E00               	movlw	0
  7771  001C04  6E35               	movwf	White@tempTimerVal^0,c
  7772  001C06                     
  7773                           ;color.c: 195:         forward(mL, mR);
  7774  001C06  C025  F019         	movff	White@mL,forward@mL
  7775  001C0A  C026  F01A         	movff	White@mL+1,forward@mL+1
  7776  001C0E  C027  F01B         	movff	White@mR,forward@mR
  7777  001C12  C028  F01C         	movff	White@mR+1,forward@mR+1
  7778  001C16  EC4F  F01A         	call	_forward	;wreg free
  7779                           
  7780                           ;color.c: 196:         TMR0H = 0;
  7781  001C1A  0E00               	movlw	0
  7782  001C1C  6ED4               	movwf	212,c	;volatile
  7783                           
  7784                           ;color.c: 197:         TMR0L = 0;
  7785  001C1E  0E00               	movlw	0
  7786  001C20  6ED3               	movwf	211,c	;volatile
  7787                           
  7788                           ;color.c: 198:         while(tempTimerVal < timerArray[movements-i-1]){
  7789  001C22  EF1D  F00E         	goto	l3847
  7790  001C26                     l116:
  7791                           
  7792                           ;color.c: 199:             tempTimerVal = TMR0L;
  7793  001C26  CFD3 F035          	movff	4051,White@tempTimerVal	;volatile
  7794  001C2A  6A36               	clrf	(White@tempTimerVal+1)^0,c
  7795  001C2C                     
  7796                           ;color.c: 200:             tempTimerVal |= (TMR0H << 8);
  7797  001C2C  50D4               	movf	212,w,c	;volatile
  7798  001C2E  6E30               	movwf	(??_White+1)^0,c
  7799  001C30  6A2F               	clrf	??_White^0,c
  7800  001C32  502F               	movf	??_White^0,w,c
  7801  001C34  1235               	iorwf	White@tempTimerVal^0,f,c
  7802  001C36  5030               	movf	(??_White+1)^0,w,c
  7803  001C38  1236               	iorwf	(White@tempTimerVal+1)^0,f,c
  7804  001C3A                     l3847:
  7805                           
  7806                           ;color.c: 198:         while(tempTimerVal < timerArray[movements-i-1]){
  7807  001C3A  5037               	movf	White@i^0,w,c
  7808  001C3C  5C2B               	subwf	White@movements^0,w,c
  7809  001C3E  6E2F               	movwf	??_White^0,c
  7810  001C40  5038               	movf	(White@i+1)^0,w,c
  7811  001C42  582C               	subwfb	(White@movements+1)^0,w,c
  7812  001C44  6E30               	movwf	(??_White+1)^0,c
  7813  001C46  90D8               	bcf	status,0,c
  7814  001C48  362F               	rlcf	??_White^0,f,c
  7815  001C4A  3630               	rlcf	(??_White+1)^0,f,c
  7816  001C4C  C02D  F031         	movff	White@timerArray,??_White+2
  7817  001C50  C02E  F032         	movff	White@timerArray+1,??_White+3
  7818  001C54  502F               	movf	??_White^0,w,c
  7819  001C56  2631               	addwf	(??_White+2)^0,f,c
  7820  001C58  5030               	movf	(??_White+1)^0,w,c
  7821  001C5A  2232               	addwfc	(??_White+3)^0,f,c
  7822  001C5C  0EFE               	movlw	254
  7823  001C5E  2431               	addwf	(??_White+2)^0,w,c
  7824  001C60  6ED9               	movwf	fsr2l,c
  7825  001C62  0EFF               	movlw	255
  7826  001C64  2032               	addwfc	(??_White+3)^0,w,c
  7827  001C66  6EDA               	movwf	fsr2h,c
  7828  001C68  50DE               	movf	postinc2,w,c
  7829  001C6A  5C35               	subwf	White@tempTimerVal^0,w,c
  7830  001C6C  50DE               	movf	postinc2,w,c
  7831  001C6E  5836               	subwfb	(White@tempTimerVal+1)^0,w,c
  7832  001C70  A0D8               	btfss	status,0,c
  7833  001C72  EF3D  F00E         	goto	u3851
  7834  001C76  EF3F  F00E         	goto	u3850
  7835  001C7A                     u3851:
  7836  001C7A  EF13  F00E         	goto	l116
  7837  001C7E                     u3850:
  7838  001C7E                     
  7839                           ;color.c: 202:     }
  7840  001C7E  4A37               	infsnz	White@i^0,f,c
  7841  001C80  2A38               	incf	(White@i+1)^0,f,c
  7842  001C82                     l3851:
  7843  001C82  502B               	movf	White@movements^0,w,c
  7844  001C84  5C37               	subwf	White@i^0,w,c
  7845  001C86  502C               	movf	(White@movements+1)^0,w,c
  7846  001C88  5838               	subwfb	(White@i+1)^0,w,c
  7847  001C8A  A0D8               	btfss	status,0,c
  7848  001C8C  EF4A  F00E         	goto	u3861
  7849  001C90  EF4C  F00E         	goto	u3860
  7850  001C94                     u3861:
  7851  001C94  EF64  F00C         	goto	l3801
  7852  001C98                     u3860:
  7853  001C98                     
  7854                           ;color.c: 204:     stop(mL, mR);
  7855  001C98  C025  F019         	movff	White@mL,stop@mL
  7856  001C9C  C026  F01A         	movff	White@mL+1,stop@mL+1
  7857  001CA0  C027  F01B         	movff	White@mR,stop@mR
  7858  001CA4  C028  F01C         	movff	White@mR+1,stop@mR+1
  7859  001CA8  EC08  F019         	call	_stop	;wreg free
  7860  001CAC  0012               	return		;funcret
  7861  001CAE                     __end_of_White:
  7862                           	callstack 0
  7863                           
  7864 ;; *************** function _turnRight90 *****************
  7865 ;; Defined at:
  7866 ;;		line 135 in file "dc_motor.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  7869 ;;		 -> main@motorL(9), 
  7870 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  7871 ;;		 -> main@motorR(9), 
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;  i               2   34[COMRAM] unsigned int 
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  1    wreg      void 
  7876 ;; Registers used:
  7877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7883 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7884 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7886 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7887 ;;Total ram usage:        8 bytes
  7888 ;; Hardware stack levels used: 1
  7889 ;; Hardware stack levels required when called: 4
  7890 ;; This function calls:
  7891 ;;		_reverse
  7892 ;;		_setMotorPWM
  7893 ;;		_stop
  7894 ;; This function is called by:
  7895 ;;		_White
  7896 ;;		_reverseTurnRight90
  7897 ;;		_main
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           	psect	text31
  7902  00293A                     __ptext31:
  7903                           	callstack 0
  7904  00293A                     _turnRight90:
  7905                           	callstack 26
  7906  00293A                     
  7907                           ;dc_motor.c: 135: void turnRight90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           136: {;dc_motor.c: 137:     stop(mL, mR);
  7908  00293A  C01D  F019         	movff	turnRight90@mL,stop@mL
  7909  00293E  C01E  F01A         	movff	turnRight90@mL+1,stop@mL+1
  7910  002942  C01F  F01B         	movff	turnRight90@mR,stop@mR
  7911  002946  C020  F01C         	movff	turnRight90@mR+1,stop@mR+1
  7912  00294A  EC08  F019         	call	_stop	;wreg free
  7913  00294E                     
  7914                           ;dc_motor.c: 138:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7915  00294E  0E05               	movlw	5
  7916  002950  6E22               	movwf	(??_turnRight90+1)^0,c
  7917  002952  0E0F               	movlw	15
  7918  002954  6E21               	movwf	??_turnRight90^0,c
  7919  002956  0EF1               	movlw	241
  7920  002958                     u4477:
  7921  002958  2EE8               	decfsz	wreg,f,c
  7922  00295A  D7FE               	bra	u4477
  7923  00295C  2E21               	decfsz	??_turnRight90^0,f,c
  7924  00295E  D7FC               	bra	u4477
  7925  002960  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  7926  002962  D7FA               	bra	u4477
  7927  002964  F000               	nop	
  7928  002966                     
  7929                           ;dc_motor.c: 139:     reverse(mL, mR);
  7930  002966  C01D  F019         	movff	turnRight90@mL,reverse@mL
  7931  00296A  C01E  F01A         	movff	turnRight90@mL+1,reverse@mL+1
  7932  00296E  C01F  F01B         	movff	turnRight90@mR,reverse@mR
  7933  002972  C020  F01C         	movff	turnRight90@mR+1,reverse@mR+1
  7934  002976  EC26  F01A         	call	_reverse	;wreg free
  7935                           
  7936                           ;dc_motor.c: 140:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7937  00297A  0E21               	movlw	33
  7938  00297C  6E22               	movwf	(??_turnRight90+1)^0,c
  7939  00297E  0E78               	movlw	120
  7940  002980  6E21               	movwf	??_turnRight90^0,c
  7941  002982  0E98               	movlw	152
  7942  002984                     u4487:
  7943  002984  2EE8               	decfsz	wreg,f,c
  7944  002986  D7FE               	bra	u4487
  7945  002988  2E21               	decfsz	??_turnRight90^0,f,c
  7946  00298A  D7FC               	bra	u4487
  7947  00298C  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  7948  00298E  D7FA               	bra	u4487
  7949  002990  D000               	nop2	
  7950  002992                     
  7951                           ;dc_motor.c: 141:     stop(mL, mR);
  7952  002992  C01D  F019         	movff	turnRight90@mL,stop@mL
  7953  002996  C01E  F01A         	movff	turnRight90@mL+1,stop@mL+1
  7954  00299A  C01F  F01B         	movff	turnRight90@mR,stop@mR
  7955  00299E  C020  F01C         	movff	turnRight90@mR+1,stop@mR+1
  7956  0029A2  EC08  F019         	call	_stop	;wreg free
  7957  0029A6                     
  7958                           ;dc_motor.c: 142:     _delay((unsigned long)((150)*(64000000/4000.0)));
  7959  0029A6  0E0D               	movlw	13
  7960  0029A8  6E22               	movwf	(??_turnRight90+1)^0,c
  7961  0029AA  0E2D               	movlw	45
  7962  0029AC  6E21               	movwf	??_turnRight90^0,c
  7963  0029AE  0ED8               	movlw	216
  7964  0029B0                     u4497:
  7965  0029B0  2EE8               	decfsz	wreg,f,c
  7966  0029B2  D7FE               	bra	u4497
  7967  0029B4  2E21               	decfsz	??_turnRight90^0,f,c
  7968  0029B6  D7FC               	bra	u4497
  7969  0029B8  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  7970  0029BA  D7FA               	bra	u4497
  7971  0029BC                     
  7972                           ;dc_motor.c: 144:     (*mL).direction = 1;
  7973  0029BC  EE20 F001          	lfsr	2,1
  7974  0029C0  501D               	movf	turnRight90@mL^0,w,c
  7975  0029C2  26D9               	addwf	fsr2l,f,c
  7976  0029C4  501E               	movf	(turnRight90@mL+1)^0,w,c
  7977  0029C6  22DA               	addwfc	fsr2h,f,c
  7978  0029C8  0E01               	movlw	1
  7979  0029CA  6EDF               	movwf	indf2,c
  7980  0029CC                     
  7981                           ;dc_motor.c: 145:     (*mR).direction = 0;
  7982  0029CC  EE20 F001          	lfsr	2,1
  7983  0029D0  501F               	movf	turnRight90@mR^0,w,c
  7984  0029D2  26D9               	addwf	fsr2l,f,c
  7985  0029D4  5020               	movf	(turnRight90@mR+1)^0,w,c
  7986  0029D6  22DA               	addwfc	fsr2h,f,c
  7987  0029D8  0E00               	movlw	0
  7988  0029DA  6EDF               	movwf	indf2,c
  7989  0029DC                     
  7990                           ;dc_motor.c: 146:     for (unsigned int i = 0; i < 80; ++i){
  7991  0029DC  0E00               	movlw	0
  7992  0029DE  6E24               	movwf	(turnRight90@i+1)^0,c
  7993  0029E0  0E00               	movlw	0
  7994  0029E2  6E23               	movwf	turnRight90@i^0,c
  7995  0029E4                     l2993:
  7996                           
  7997                           ;dc_motor.c: 147:         (mL->power) += 1;
  7998  0029E4  C01D  FFD9         	movff	turnRight90@mL,fsr2l
  7999  0029E8  C01E  FFDA         	movff	turnRight90@mL+1,fsr2h
  8000  0029EC  2ADF               	incf	indf2,f,c
  8001                           
  8002                           ;dc_motor.c: 148:         (mR->power) += 1;
  8003  0029EE  C01F  FFD9         	movff	turnRight90@mR,fsr2l
  8004  0029F2  C020  FFDA         	movff	turnRight90@mR+1,fsr2h
  8005  0029F6  2ADF               	incf	indf2,f,c
  8006  0029F8                     
  8007                           ;dc_motor.c: 149:         setMotorPWM(mL);
  8008  0029F8  C01D  F00E         	movff	turnRight90@mL,setMotorPWM@m
  8009  0029FC  C01E  F00F         	movff	turnRight90@mL+1,setMotorPWM@m+1
  8010  002A00  EC39  F012         	call	_setMotorPWM	;wreg free
  8011  002A04                     
  8012                           ;dc_motor.c: 150:         setMotorPWM(mR);
  8013  002A04  C01F  F00E         	movff	turnRight90@mR,setMotorPWM@m
  8014  002A08  C020  F00F         	movff	turnRight90@mR+1,setMotorPWM@m+1
  8015  002A0C  EC39  F012         	call	_setMotorPWM	;wreg free
  8016  002A10                     
  8017                           ;dc_motor.c: 151:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  8018  002A10  0EA0               	movlw	160
  8019  002A12                     u4507:
  8020  002A12  D000               	nop2	
  8021  002A14  2EE8               	decfsz	wreg,f,c
  8022  002A16  D7FD               	bra	u4507
  8023  002A18                     
  8024                           ;dc_motor.c: 152:     }
  8025  002A18  4A23               	infsnz	turnRight90@i^0,f,c
  8026  002A1A  2A24               	incf	(turnRight90@i+1)^0,f,c
  8027  002A1C  5024               	movf	(turnRight90@i+1)^0,w,c
  8028  002A1E  E109               	bnz	u2380
  8029  002A20  0E50               	movlw	80
  8030  002A22  5C23               	subwf	turnRight90@i^0,w,c
  8031  002A24  A0D8               	btfss	status,0,c
  8032  002A26  EF17  F015         	goto	u2381
  8033  002A2A  EF19  F015         	goto	u2380
  8034  002A2E                     u2381:
  8035  002A2E  EFF2  F014         	goto	l2993
  8036  002A32                     u2380:
  8037  002A32                     
  8038                           ;dc_motor.c: 153:     _delay((unsigned long)((205)*(64000000/4000.0)));
  8039  002A32  0E11               	movlw	17
  8040  002A34  6E22               	movwf	(??_turnRight90+1)^0,c
  8041  002A36  0EA4               	movlw	164
  8042  002A38  6E21               	movwf	??_turnRight90^0,c
  8043  002A3A  0EB0               	movlw	176
  8044  002A3C                     u4517:
  8045  002A3C  2EE8               	decfsz	wreg,f,c
  8046  002A3E  D7FE               	bra	u4517
  8047  002A40  2E21               	decfsz	??_turnRight90^0,f,c
  8048  002A42  D7FC               	bra	u4517
  8049  002A44  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  8050  002A46  D7FA               	bra	u4517
  8051  002A48  D000               	nop2	
  8052  002A4A                     
  8053                           ;dc_motor.c: 154:     stop(mL, mR);
  8054  002A4A  C01D  F019         	movff	turnRight90@mL,stop@mL
  8055  002A4E  C01E  F01A         	movff	turnRight90@mL+1,stop@mL+1
  8056  002A52  C01F  F01B         	movff	turnRight90@mR,stop@mR
  8057  002A56  C020  F01C         	movff	turnRight90@mR+1,stop@mR+1
  8058  002A5A  EC08  F019         	call	_stop	;wreg free
  8059  002A5E                     
  8060                           ;dc_motor.c: 155:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8061  002A5E  0E05               	movlw	5
  8062  002A60  6E22               	movwf	(??_turnRight90+1)^0,c
  8063  002A62  0E0F               	movlw	15
  8064  002A64  6E21               	movwf	??_turnRight90^0,c
  8065  002A66  0EF1               	movlw	241
  8066  002A68                     u4527:
  8067  002A68  2EE8               	decfsz	wreg,f,c
  8068  002A6A  D7FE               	bra	u4527
  8069  002A6C  2E21               	decfsz	??_turnRight90^0,f,c
  8070  002A6E  D7FC               	bra	u4527
  8071  002A70  2E22               	decfsz	(??_turnRight90+1)^0,f,c
  8072  002A72  D7FA               	bra	u4527
  8073  002A74  F000               	nop	
  8074  002A76  0012               	return		;funcret
  8075  002A78                     __end_of_turnRight90:
  8076                           	callstack 0
  8077                           
  8078 ;; *************** function _turnRight180 *****************
  8079 ;; Defined at:
  8080 ;;		line 183 in file "dc_motor.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  8083 ;;		 -> main@motorL(9), 
  8084 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  8085 ;;		 -> main@motorR(9), 
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;  i               2   34[COMRAM] unsigned int 
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  1    wreg      void 
  8090 ;; Registers used:
  8091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8097 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8098 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8099 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8100 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8101 ;;Total ram usage:        8 bytes
  8102 ;; Hardware stack levels used: 1
  8103 ;; Hardware stack levels required when called: 4
  8104 ;; This function calls:
  8105 ;;		_reverse
  8106 ;;		_setMotorPWM
  8107 ;;		_stop
  8108 ;; This function is called by:
  8109 ;;		_White
  8110 ;;		_main
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           	psect	text32
  8115  002A78                     __ptext32:
  8116                           	callstack 0
  8117  002A78                     _turnRight180:
  8118                           	callstack 26
  8119  002A78                     
  8120                           ;dc_motor.c: 183: void turnRight180(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c
      +                          : 184: {;dc_motor.c: 185:     stop(mL, mR);
  8121  002A78  C01D  F019         	movff	turnRight180@mL,stop@mL
  8122  002A7C  C01E  F01A         	movff	turnRight180@mL+1,stop@mL+1
  8123  002A80  C01F  F01B         	movff	turnRight180@mR,stop@mR
  8124  002A84  C020  F01C         	movff	turnRight180@mR+1,stop@mR+1
  8125  002A88  EC08  F019         	call	_stop	;wreg free
  8126  002A8C                     
  8127                           ;dc_motor.c: 186:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8128  002A8C  0E05               	movlw	5
  8129  002A8E  6E22               	movwf	(??_turnRight180+1)^0,c
  8130  002A90  0E0F               	movlw	15
  8131  002A92  6E21               	movwf	??_turnRight180^0,c
  8132  002A94  0EF1               	movlw	241
  8133  002A96                     u4537:
  8134  002A96  2EE8               	decfsz	wreg,f,c
  8135  002A98  D7FE               	bra	u4537
  8136  002A9A  2E21               	decfsz	??_turnRight180^0,f,c
  8137  002A9C  D7FC               	bra	u4537
  8138  002A9E  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  8139  002AA0  D7FA               	bra	u4537
  8140  002AA2  F000               	nop	
  8141  002AA4                     
  8142                           ;dc_motor.c: 187:     reverse(mL, mR);
  8143  002AA4  C01D  F019         	movff	turnRight180@mL,reverse@mL
  8144  002AA8  C01E  F01A         	movff	turnRight180@mL+1,reverse@mL+1
  8145  002AAC  C01F  F01B         	movff	turnRight180@mR,reverse@mR
  8146  002AB0  C020  F01C         	movff	turnRight180@mR+1,reverse@mR+1
  8147  002AB4  EC26  F01A         	call	_reverse	;wreg free
  8148                           
  8149                           ;dc_motor.c: 188:     _delay((unsigned long)((400)*(64000000/4000.0)));
  8150  002AB8  0E21               	movlw	33
  8151  002ABA  6E22               	movwf	(??_turnRight180+1)^0,c
  8152  002ABC  0E78               	movlw	120
  8153  002ABE  6E21               	movwf	??_turnRight180^0,c
  8154  002AC0  0E98               	movlw	152
  8155  002AC2                     u4547:
  8156  002AC2  2EE8               	decfsz	wreg,f,c
  8157  002AC4  D7FE               	bra	u4547
  8158  002AC6  2E21               	decfsz	??_turnRight180^0,f,c
  8159  002AC8  D7FC               	bra	u4547
  8160  002ACA  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  8161  002ACC  D7FA               	bra	u4547
  8162  002ACE  D000               	nop2	
  8163  002AD0                     
  8164                           ;dc_motor.c: 189:     stop(mL, mR);
  8165  002AD0  C01D  F019         	movff	turnRight180@mL,stop@mL
  8166  002AD4  C01E  F01A         	movff	turnRight180@mL+1,stop@mL+1
  8167  002AD8  C01F  F01B         	movff	turnRight180@mR,stop@mR
  8168  002ADC  C020  F01C         	movff	turnRight180@mR+1,stop@mR+1
  8169  002AE0  EC08  F019         	call	_stop	;wreg free
  8170  002AE4                     
  8171                           ;dc_motor.c: 190:     _delay((unsigned long)((150)*(64000000/4000.0)));
  8172  002AE4  0E0D               	movlw	13
  8173  002AE6  6E22               	movwf	(??_turnRight180+1)^0,c
  8174  002AE8  0E2D               	movlw	45
  8175  002AEA  6E21               	movwf	??_turnRight180^0,c
  8176  002AEC  0ED8               	movlw	216
  8177  002AEE                     u4557:
  8178  002AEE  2EE8               	decfsz	wreg,f,c
  8179  002AF0  D7FE               	bra	u4557
  8180  002AF2  2E21               	decfsz	??_turnRight180^0,f,c
  8181  002AF4  D7FC               	bra	u4557
  8182  002AF6  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  8183  002AF8  D7FA               	bra	u4557
  8184  002AFA                     
  8185                           ;dc_motor.c: 192:     (*mL).direction = 1;
  8186  002AFA  EE20 F001          	lfsr	2,1
  8187  002AFE  501D               	movf	turnRight180@mL^0,w,c
  8188  002B00  26D9               	addwf	fsr2l,f,c
  8189  002B02  501E               	movf	(turnRight180@mL+1)^0,w,c
  8190  002B04  22DA               	addwfc	fsr2h,f,c
  8191  002B06  0E01               	movlw	1
  8192  002B08  6EDF               	movwf	indf2,c
  8193  002B0A                     
  8194                           ;dc_motor.c: 193:     (*mR).direction = 0;
  8195  002B0A  EE20 F001          	lfsr	2,1
  8196  002B0E  501F               	movf	turnRight180@mR^0,w,c
  8197  002B10  26D9               	addwf	fsr2l,f,c
  8198  002B12  5020               	movf	(turnRight180@mR+1)^0,w,c
  8199  002B14  22DA               	addwfc	fsr2h,f,c
  8200  002B16  0E00               	movlw	0
  8201  002B18  6EDF               	movwf	indf2,c
  8202  002B1A                     
  8203                           ;dc_motor.c: 194:     for (unsigned int i = 0; i < 75; ++i){
  8204  002B1A  0E00               	movlw	0
  8205  002B1C  6E24               	movwf	(turnRight180@i+1)^0,c
  8206  002B1E  0E00               	movlw	0
  8207  002B20  6E23               	movwf	turnRight180@i^0,c
  8208  002B22                     l2917:
  8209                           
  8210                           ;dc_motor.c: 195:         (mL->power) += 1;
  8211  002B22  C01D  FFD9         	movff	turnRight180@mL,fsr2l
  8212  002B26  C01E  FFDA         	movff	turnRight180@mL+1,fsr2h
  8213  002B2A  2ADF               	incf	indf2,f,c
  8214                           
  8215                           ;dc_motor.c: 196:         (mR->power) += 1;
  8216  002B2C  C01F  FFD9         	movff	turnRight180@mR,fsr2l
  8217  002B30  C020  FFDA         	movff	turnRight180@mR+1,fsr2h
  8218  002B34  2ADF               	incf	indf2,f,c
  8219  002B36                     
  8220                           ;dc_motor.c: 197:         setMotorPWM(mL);
  8221  002B36  C01D  F00E         	movff	turnRight180@mL,setMotorPWM@m
  8222  002B3A  C01E  F00F         	movff	turnRight180@mL+1,setMotorPWM@m+1
  8223  002B3E  EC39  F012         	call	_setMotorPWM	;wreg free
  8224  002B42                     
  8225                           ;dc_motor.c: 198:         setMotorPWM(mR);
  8226  002B42  C01F  F00E         	movff	turnRight180@mR,setMotorPWM@m
  8227  002B46  C020  F00F         	movff	turnRight180@mR+1,setMotorPWM@m+1
  8228  002B4A  EC39  F012         	call	_setMotorPWM	;wreg free
  8229  002B4E                     
  8230                           ;dc_motor.c: 199:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  8231  002B4E  0EA0               	movlw	160
  8232  002B50                     u4567:
  8233  002B50  D000               	nop2	
  8234  002B52  2EE8               	decfsz	wreg,f,c
  8235  002B54  D7FD               	bra	u4567
  8236  002B56                     
  8237                           ;dc_motor.c: 200:     }
  8238  002B56  4A23               	infsnz	turnRight180@i^0,f,c
  8239  002B58  2A24               	incf	(turnRight180@i+1)^0,f,c
  8240  002B5A  5024               	movf	(turnRight180@i+1)^0,w,c
  8241  002B5C  E109               	bnz	u2360
  8242  002B5E  0E4B               	movlw	75
  8243  002B60  5C23               	subwf	turnRight180@i^0,w,c
  8244  002B62  A0D8               	btfss	status,0,c
  8245  002B64  EFB6  F015         	goto	u2361
  8246  002B68  EFB8  F015         	goto	u2360
  8247  002B6C                     u2361:
  8248  002B6C  EF91  F015         	goto	l2917
  8249  002B70                     u2360:
  8250  002B70                     
  8251                           ;dc_motor.c: 201:     _delay((unsigned long)((400)*(64000000/4000.0)));
  8252  002B70  0E21               	movlw	33
  8253  002B72  6E22               	movwf	(??_turnRight180+1)^0,c
  8254  002B74  0E78               	movlw	120
  8255  002B76  6E21               	movwf	??_turnRight180^0,c
  8256  002B78  0E98               	movlw	152
  8257  002B7A                     u4577:
  8258  002B7A  2EE8               	decfsz	wreg,f,c
  8259  002B7C  D7FE               	bra	u4577
  8260  002B7E  2E21               	decfsz	??_turnRight180^0,f,c
  8261  002B80  D7FC               	bra	u4577
  8262  002B82  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  8263  002B84  D7FA               	bra	u4577
  8264  002B86  D000               	nop2	
  8265  002B88                     
  8266                           ;dc_motor.c: 202:     stop(mL, mR);
  8267  002B88  C01D  F019         	movff	turnRight180@mL,stop@mL
  8268  002B8C  C01E  F01A         	movff	turnRight180@mL+1,stop@mL+1
  8269  002B90  C01F  F01B         	movff	turnRight180@mR,stop@mR
  8270  002B94  C020  F01C         	movff	turnRight180@mR+1,stop@mR+1
  8271  002B98  EC08  F019         	call	_stop	;wreg free
  8272  002B9C                     
  8273                           ;dc_motor.c: 203:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8274  002B9C  0E05               	movlw	5
  8275  002B9E  6E22               	movwf	(??_turnRight180+1)^0,c
  8276  002BA0  0E0F               	movlw	15
  8277  002BA2  6E21               	movwf	??_turnRight180^0,c
  8278  002BA4  0EF1               	movlw	241
  8279  002BA6                     u4587:
  8280  002BA6  2EE8               	decfsz	wreg,f,c
  8281  002BA8  D7FE               	bra	u4587
  8282  002BAA  2E21               	decfsz	??_turnRight180^0,f,c
  8283  002BAC  D7FC               	bra	u4587
  8284  002BAE  2E22               	decfsz	(??_turnRight180+1)^0,f,c
  8285  002BB0  D7FA               	bra	u4587
  8286  002BB2  F000               	nop	
  8287  002BB4  0012               	return		;funcret
  8288  002BB6                     __end_of_turnRight180:
  8289                           	callstack 0
  8290                           
  8291 ;; *************** function _turnRight135 *****************
  8292 ;; Defined at:
  8293 ;;		line 159 in file "dc_motor.c"
  8294 ;; Parameters:    Size  Location     Type
  8295 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  8296 ;;		 -> main@motorL(9), 
  8297 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  8298 ;;		 -> main@motorR(9), 
  8299 ;; Auto vars:     Size  Location     Type
  8300 ;;  i               2   34[COMRAM] unsigned int 
  8301 ;; Return value:  Size  Location     Type
  8302 ;;                  1    wreg      void 
  8303 ;; Registers used:
  8304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8305 ;; Tracked objects:
  8306 ;;		On entry : 0/0
  8307 ;;		On exit  : 0/0
  8308 ;;		Unchanged: 0/0
  8309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8310 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8311 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8312 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8313 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8314 ;;Total ram usage:        8 bytes
  8315 ;; Hardware stack levels used: 1
  8316 ;; Hardware stack levels required when called: 4
  8317 ;; This function calls:
  8318 ;;		_reverse
  8319 ;;		_setMotorPWM
  8320 ;;		_stop
  8321 ;; This function is called by:
  8322 ;;		_White
  8323 ;;		_main
  8324 ;; This function uses a non-reentrant model
  8325 ;;
  8326                           
  8327                           	psect	text33
  8328  002BB6                     __ptext33:
  8329                           	callstack 0
  8330  002BB6                     _turnRight135:
  8331                           	callstack 26
  8332  002BB6                     
  8333                           ;dc_motor.c: 159: void turnRight135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c
      +                          : 160: {;dc_motor.c: 161:     stop(mL, mR);
  8334  002BB6  C01D  F019         	movff	turnRight135@mL,stop@mL
  8335  002BBA  C01E  F01A         	movff	turnRight135@mL+1,stop@mL+1
  8336  002BBE  C01F  F01B         	movff	turnRight135@mR,stop@mR
  8337  002BC2  C020  F01C         	movff	turnRight135@mR+1,stop@mR+1
  8338  002BC6  EC08  F019         	call	_stop	;wreg free
  8339  002BCA                     
  8340                           ;dc_motor.c: 162:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8341  002BCA  0E05               	movlw	5
  8342  002BCC  6E22               	movwf	(??_turnRight135+1)^0,c
  8343  002BCE  0E0F               	movlw	15
  8344  002BD0  6E21               	movwf	??_turnRight135^0,c
  8345  002BD2  0EF1               	movlw	241
  8346  002BD4                     u4597:
  8347  002BD4  2EE8               	decfsz	wreg,f,c
  8348  002BD6  D7FE               	bra	u4597
  8349  002BD8  2E21               	decfsz	??_turnRight135^0,f,c
  8350  002BDA  D7FC               	bra	u4597
  8351  002BDC  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  8352  002BDE  D7FA               	bra	u4597
  8353  002BE0  F000               	nop	
  8354  002BE2                     
  8355                           ;dc_motor.c: 163:     reverse(mL, mR);
  8356  002BE2  C01D  F019         	movff	turnRight135@mL,reverse@mL
  8357  002BE6  C01E  F01A         	movff	turnRight135@mL+1,reverse@mL+1
  8358  002BEA  C01F  F01B         	movff	turnRight135@mR,reverse@mR
  8359  002BEE  C020  F01C         	movff	turnRight135@mR+1,reverse@mR+1
  8360  002BF2  EC26  F01A         	call	_reverse	;wreg free
  8361                           
  8362                           ;dc_motor.c: 164:     _delay((unsigned long)((400)*(64000000/4000.0)));
  8363  002BF6  0E21               	movlw	33
  8364  002BF8  6E22               	movwf	(??_turnRight135+1)^0,c
  8365  002BFA  0E78               	movlw	120
  8366  002BFC  6E21               	movwf	??_turnRight135^0,c
  8367  002BFE  0E98               	movlw	152
  8368  002C00                     u4607:
  8369  002C00  2EE8               	decfsz	wreg,f,c
  8370  002C02  D7FE               	bra	u4607
  8371  002C04  2E21               	decfsz	??_turnRight135^0,f,c
  8372  002C06  D7FC               	bra	u4607
  8373  002C08  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  8374  002C0A  D7FA               	bra	u4607
  8375  002C0C  D000               	nop2	
  8376  002C0E                     
  8377                           ;dc_motor.c: 165:     stop(mL, mR);
  8378  002C0E  C01D  F019         	movff	turnRight135@mL,stop@mL
  8379  002C12  C01E  F01A         	movff	turnRight135@mL+1,stop@mL+1
  8380  002C16  C01F  F01B         	movff	turnRight135@mR,stop@mR
  8381  002C1A  C020  F01C         	movff	turnRight135@mR+1,stop@mR+1
  8382  002C1E  EC08  F019         	call	_stop	;wreg free
  8383  002C22                     
  8384                           ;dc_motor.c: 166:     _delay((unsigned long)((150)*(64000000/4000.0)));
  8385  002C22  0E0D               	movlw	13
  8386  002C24  6E22               	movwf	(??_turnRight135+1)^0,c
  8387  002C26  0E2D               	movlw	45
  8388  002C28  6E21               	movwf	??_turnRight135^0,c
  8389  002C2A  0ED8               	movlw	216
  8390  002C2C                     u4617:
  8391  002C2C  2EE8               	decfsz	wreg,f,c
  8392  002C2E  D7FE               	bra	u4617
  8393  002C30  2E21               	decfsz	??_turnRight135^0,f,c
  8394  002C32  D7FC               	bra	u4617
  8395  002C34  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  8396  002C36  D7FA               	bra	u4617
  8397  002C38                     
  8398                           ;dc_motor.c: 168:     (*mL).direction = 1;
  8399  002C38  EE20 F001          	lfsr	2,1
  8400  002C3C  501D               	movf	turnRight135@mL^0,w,c
  8401  002C3E  26D9               	addwf	fsr2l,f,c
  8402  002C40  501E               	movf	(turnRight135@mL+1)^0,w,c
  8403  002C42  22DA               	addwfc	fsr2h,f,c
  8404  002C44  0E01               	movlw	1
  8405  002C46  6EDF               	movwf	indf2,c
  8406  002C48                     
  8407                           ;dc_motor.c: 169:     (*mR).direction = 0;
  8408  002C48  EE20 F001          	lfsr	2,1
  8409  002C4C  501F               	movf	turnRight135@mR^0,w,c
  8410  002C4E  26D9               	addwf	fsr2l,f,c
  8411  002C50  5020               	movf	(turnRight135@mR+1)^0,w,c
  8412  002C52  22DA               	addwfc	fsr2h,f,c
  8413  002C54  0E00               	movlw	0
  8414  002C56  6EDF               	movwf	indf2,c
  8415  002C58                     
  8416                           ;dc_motor.c: 170:     for (unsigned int i = 0; i < 75; ++i){
  8417  002C58  0E00               	movlw	0
  8418  002C5A  6E24               	movwf	(turnRight135@i+1)^0,c
  8419  002C5C  0E00               	movlw	0
  8420  002C5E  6E23               	movwf	turnRight135@i^0,c
  8421  002C60                     l3069:
  8422                           
  8423                           ;dc_motor.c: 171:         (mL->power) += 1;
  8424  002C60  C01D  FFD9         	movff	turnRight135@mL,fsr2l
  8425  002C64  C01E  FFDA         	movff	turnRight135@mL+1,fsr2h
  8426  002C68  2ADF               	incf	indf2,f,c
  8427                           
  8428                           ;dc_motor.c: 172:         (mR->power) += 1;
  8429  002C6A  C01F  FFD9         	movff	turnRight135@mR,fsr2l
  8430  002C6E  C020  FFDA         	movff	turnRight135@mR+1,fsr2h
  8431  002C72  2ADF               	incf	indf2,f,c
  8432  002C74                     
  8433                           ;dc_motor.c: 173:         setMotorPWM(mL);
  8434  002C74  C01D  F00E         	movff	turnRight135@mL,setMotorPWM@m
  8435  002C78  C01E  F00F         	movff	turnRight135@mL+1,setMotorPWM@m+1
  8436  002C7C  EC39  F012         	call	_setMotorPWM	;wreg free
  8437  002C80                     
  8438                           ;dc_motor.c: 174:         setMotorPWM(mR);
  8439  002C80  C01F  F00E         	movff	turnRight135@mR,setMotorPWM@m
  8440  002C84  C020  F00F         	movff	turnRight135@mR+1,setMotorPWM@m+1
  8441  002C88  EC39  F012         	call	_setMotorPWM	;wreg free
  8442  002C8C                     
  8443                           ;dc_motor.c: 175:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  8444  002C8C  0EA0               	movlw	160
  8445  002C8E                     u4627:
  8446  002C8E  D000               	nop2	
  8447  002C90  2EE8               	decfsz	wreg,f,c
  8448  002C92  D7FD               	bra	u4627
  8449  002C94                     
  8450                           ;dc_motor.c: 176:     }
  8451  002C94  4A23               	infsnz	turnRight135@i^0,f,c
  8452  002C96  2A24               	incf	(turnRight135@i+1)^0,f,c
  8453  002C98  5024               	movf	(turnRight135@i+1)^0,w,c
  8454  002C9A  E109               	bnz	u2400
  8455  002C9C  0E4B               	movlw	75
  8456  002C9E  5C23               	subwf	turnRight135@i^0,w,c
  8457  002CA0  A0D8               	btfss	status,0,c
  8458  002CA2  EF55  F016         	goto	u2401
  8459  002CA6  EF57  F016         	goto	u2400
  8460  002CAA                     u2401:
  8461  002CAA  EF30  F016         	goto	l3069
  8462  002CAE                     u2400:
  8463  002CAE                     
  8464                           ;dc_motor.c: 177:     _delay((unsigned long)((275)*(64000000/4000.0)));
  8465  002CAE  0E17               	movlw	23
  8466  002CB0  6E22               	movwf	(??_turnRight135+1)^0,c
  8467  002CB2  0E53               	movlw	83
  8468  002CB4  6E21               	movwf	??_turnRight135^0,c
  8469  002CB6  0E38               	movlw	56
  8470  002CB8                     u4637:
  8471  002CB8  2EE8               	decfsz	wreg,f,c
  8472  002CBA  D7FE               	bra	u4637
  8473  002CBC  2E21               	decfsz	??_turnRight135^0,f,c
  8474  002CBE  D7FC               	bra	u4637
  8475  002CC0  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  8476  002CC2  D7FA               	bra	u4637
  8477  002CC4                     
  8478                           ;dc_motor.c: 178:     stop(mL, mR);
  8479  002CC4  C01D  F019         	movff	turnRight135@mL,stop@mL
  8480  002CC8  C01E  F01A         	movff	turnRight135@mL+1,stop@mL+1
  8481  002CCC  C01F  F01B         	movff	turnRight135@mR,stop@mR
  8482  002CD0  C020  F01C         	movff	turnRight135@mR+1,stop@mR+1
  8483  002CD4  EC08  F019         	call	_stop	;wreg free
  8484  002CD8                     
  8485                           ;dc_motor.c: 179:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8486  002CD8  0E05               	movlw	5
  8487  002CDA  6E22               	movwf	(??_turnRight135+1)^0,c
  8488  002CDC  0E0F               	movlw	15
  8489  002CDE  6E21               	movwf	??_turnRight135^0,c
  8490  002CE0  0EF1               	movlw	241
  8491  002CE2                     u4647:
  8492  002CE2  2EE8               	decfsz	wreg,f,c
  8493  002CE4  D7FE               	bra	u4647
  8494  002CE6  2E21               	decfsz	??_turnRight135^0,f,c
  8495  002CE8  D7FC               	bra	u4647
  8496  002CEA  2E22               	decfsz	(??_turnRight135+1)^0,f,c
  8497  002CEC  D7FA               	bra	u4647
  8498  002CEE  F000               	nop	
  8499  002CF0  0012               	return		;funcret
  8500  002CF2                     __end_of_turnRight135:
  8501                           	callstack 0
  8502                           
  8503 ;; *************** function _turnLeft90 *****************
  8504 ;; Defined at:
  8505 ;;		line 87 in file "dc_motor.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  8508 ;;		 -> main@motorL(9), 
  8509 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  8510 ;;		 -> main@motorR(9), 
  8511 ;; Auto vars:     Size  Location     Type
  8512 ;;  i               2   34[COMRAM] unsigned int 
  8513 ;; Return value:  Size  Location     Type
  8514 ;;                  1    wreg      void 
  8515 ;; Registers used:
  8516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8517 ;; Tracked objects:
  8518 ;;		On entry : 0/0
  8519 ;;		On exit  : 0/0
  8520 ;;		Unchanged: 0/0
  8521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8522 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8524 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8525 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8526 ;;Total ram usage:        8 bytes
  8527 ;; Hardware stack levels used: 1
  8528 ;; Hardware stack levels required when called: 4
  8529 ;; This function calls:
  8530 ;;		_reverse
  8531 ;;		_setMotorPWM
  8532 ;;		_stop
  8533 ;; This function is called by:
  8534 ;;		_White
  8535 ;;		_reverseTurnLeft90
  8536 ;;		_main
  8537 ;; This function uses a non-reentrant model
  8538 ;;
  8539                           
  8540                           	psect	text34
  8541  0027FA                     __ptext34:
  8542                           	callstack 0
  8543  0027FA                     _turnLeft90:
  8544                           	callstack 26
  8545  0027FA                     
  8546                           ;dc_motor.c: 87: void turnLeft90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 8
      +                          8: {;dc_motor.c: 89:     stop(mL, mR);
  8547  0027FA  C01D  F019         	movff	turnLeft90@mL,stop@mL
  8548  0027FE  C01E  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  8549  002802  C01F  F01B         	movff	turnLeft90@mR,stop@mR
  8550  002806  C020  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  8551  00280A  EC08  F019         	call	_stop	;wreg free
  8552  00280E                     
  8553                           ;dc_motor.c: 90:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8554  00280E  0E05               	movlw	5
  8555  002810  6E22               	movwf	(??_turnLeft90+1)^0,c
  8556  002812  0E0F               	movlw	15
  8557  002814  6E21               	movwf	??_turnLeft90^0,c
  8558  002816  0EF1               	movlw	241
  8559  002818                     u4657:
  8560  002818  2EE8               	decfsz	wreg,f,c
  8561  00281A  D7FE               	bra	u4657
  8562  00281C  2E21               	decfsz	??_turnLeft90^0,f,c
  8563  00281E  D7FC               	bra	u4657
  8564  002820  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8565  002822  D7FA               	bra	u4657
  8566  002824  F000               	nop	
  8567  002826                     
  8568                           ;dc_motor.c: 91:     reverse(mL, mR);
  8569  002826  C01D  F019         	movff	turnLeft90@mL,reverse@mL
  8570  00282A  C01E  F01A         	movff	turnLeft90@mL+1,reverse@mL+1
  8571  00282E  C01F  F01B         	movff	turnLeft90@mR,reverse@mR
  8572  002832  C020  F01C         	movff	turnLeft90@mR+1,reverse@mR+1
  8573  002836  EC26  F01A         	call	_reverse	;wreg free
  8574                           
  8575                           ;dc_motor.c: 92:     _delay((unsigned long)((400)*(64000000/4000.0)));
  8576  00283A  0E21               	movlw	33
  8577  00283C  6E22               	movwf	(??_turnLeft90+1)^0,c
  8578  00283E  0E78               	movlw	120
  8579  002840  6E21               	movwf	??_turnLeft90^0,c
  8580  002842  0E98               	movlw	152
  8581  002844                     u4667:
  8582  002844  2EE8               	decfsz	wreg,f,c
  8583  002846  D7FE               	bra	u4667
  8584  002848  2E21               	decfsz	??_turnLeft90^0,f,c
  8585  00284A  D7FC               	bra	u4667
  8586  00284C  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8587  00284E  D7FA               	bra	u4667
  8588  002850  D000               	nop2	
  8589  002852                     
  8590                           ;dc_motor.c: 93:     stop(mL, mR);
  8591  002852  C01D  F019         	movff	turnLeft90@mL,stop@mL
  8592  002856  C01E  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  8593  00285A  C01F  F01B         	movff	turnLeft90@mR,stop@mR
  8594  00285E  C020  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  8595  002862  EC08  F019         	call	_stop	;wreg free
  8596  002866                     
  8597                           ;dc_motor.c: 94:     _delay((unsigned long)((150)*(64000000/4000.0)));
  8598  002866  0E0D               	movlw	13
  8599  002868  6E22               	movwf	(??_turnLeft90+1)^0,c
  8600  00286A  0E2D               	movlw	45
  8601  00286C  6E21               	movwf	??_turnLeft90^0,c
  8602  00286E  0ED8               	movlw	216
  8603  002870                     u4677:
  8604  002870  2EE8               	decfsz	wreg,f,c
  8605  002872  D7FE               	bra	u4677
  8606  002874  2E21               	decfsz	??_turnLeft90^0,f,c
  8607  002876  D7FC               	bra	u4677
  8608  002878  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8609  00287A  D7FA               	bra	u4677
  8610  00287C                     
  8611                           ;dc_motor.c: 96:     (*mL).direction = 0;
  8612  00287C  EE20 F001          	lfsr	2,1
  8613  002880  501D               	movf	turnLeft90@mL^0,w,c
  8614  002882  26D9               	addwf	fsr2l,f,c
  8615  002884  501E               	movf	(turnLeft90@mL+1)^0,w,c
  8616  002886  22DA               	addwfc	fsr2h,f,c
  8617  002888  0E00               	movlw	0
  8618  00288A  6EDF               	movwf	indf2,c
  8619  00288C                     
  8620                           ;dc_motor.c: 97:     (*mR).direction = 1;
  8621  00288C  EE20 F001          	lfsr	2,1
  8622  002890  501F               	movf	turnLeft90@mR^0,w,c
  8623  002892  26D9               	addwf	fsr2l,f,c
  8624  002894  5020               	movf	(turnLeft90@mR+1)^0,w,c
  8625  002896  22DA               	addwfc	fsr2h,f,c
  8626  002898  0E01               	movlw	1
  8627  00289A  6EDF               	movwf	indf2,c
  8628  00289C                     
  8629                           ;dc_motor.c: 98:     for (unsigned int i = 0; i < 80; ++i){
  8630  00289C  0E00               	movlw	0
  8631  00289E  6E24               	movwf	(turnLeft90@i+1)^0,c
  8632  0028A0  0E00               	movlw	0
  8633  0028A2  6E23               	movwf	turnLeft90@i^0,c
  8634  0028A4                     l2955:
  8635                           
  8636                           ;dc_motor.c: 99:         (mL->power) += 1;
  8637  0028A4  C01D  FFD9         	movff	turnLeft90@mL,fsr2l
  8638  0028A8  C01E  FFDA         	movff	turnLeft90@mL+1,fsr2h
  8639  0028AC  2ADF               	incf	indf2,f,c
  8640                           
  8641                           ;dc_motor.c: 100:         (mR->power) += 1;
  8642  0028AE  C01F  FFD9         	movff	turnLeft90@mR,fsr2l
  8643  0028B2  C020  FFDA         	movff	turnLeft90@mR+1,fsr2h
  8644  0028B6  2ADF               	incf	indf2,f,c
  8645  0028B8                     
  8646                           ;dc_motor.c: 101:         setMotorPWM(mL);
  8647  0028B8  C01D  F00E         	movff	turnLeft90@mL,setMotorPWM@m
  8648  0028BC  C01E  F00F         	movff	turnLeft90@mL+1,setMotorPWM@m+1
  8649  0028C0  EC39  F012         	call	_setMotorPWM	;wreg free
  8650  0028C4                     
  8651                           ;dc_motor.c: 102:         setMotorPWM(mR);
  8652  0028C4  C01F  F00E         	movff	turnLeft90@mR,setMotorPWM@m
  8653  0028C8  C020  F00F         	movff	turnLeft90@mR+1,setMotorPWM@m+1
  8654  0028CC  EC39  F012         	call	_setMotorPWM	;wreg free
  8655  0028D0                     
  8656                           ;dc_motor.c: 103:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  8657  0028D0  0EA0               	movlw	160
  8658  0028D2                     u4687:
  8659  0028D2  D000               	nop2	
  8660  0028D4  2EE8               	decfsz	wreg,f,c
  8661  0028D6  D7FD               	bra	u4687
  8662  0028D8                     
  8663                           ;dc_motor.c: 104:     }
  8664  0028D8  4A23               	infsnz	turnLeft90@i^0,f,c
  8665  0028DA  2A24               	incf	(turnLeft90@i+1)^0,f,c
  8666  0028DC  5024               	movf	(turnLeft90@i+1)^0,w,c
  8667  0028DE  E109               	bnz	u2370
  8668  0028E0  0E50               	movlw	80
  8669  0028E2  5C23               	subwf	turnLeft90@i^0,w,c
  8670  0028E4  A0D8               	btfss	status,0,c
  8671  0028E6  EF77  F014         	goto	u2371
  8672  0028EA  EF79  F014         	goto	u2370
  8673  0028EE                     u2371:
  8674  0028EE  EF52  F014         	goto	l2955
  8675  0028F2                     u2370:
  8676  0028F2                     
  8677                           ;dc_motor.c: 105:     _delay((unsigned long)((190)*(64000000/4000.0)));
  8678  0028F2  0E10               	movlw	16
  8679  0028F4  6E22               	movwf	(??_turnLeft90+1)^0,c
  8680  0028F6  0E6C               	movlw	108
  8681  0028F8  6E21               	movwf	??_turnLeft90^0,c
  8682  0028FA  0E00               	movlw	0
  8683  0028FC                     u4697:
  8684  0028FC  2EE8               	decfsz	wreg,f,c
  8685  0028FE  D7FE               	bra	u4697
  8686  002900  2E21               	decfsz	??_turnLeft90^0,f,c
  8687  002902  D7FC               	bra	u4697
  8688  002904  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8689  002906  D7FA               	bra	u4697
  8690  002908  D000               	nop2	
  8691  00290A  D000               	nop2	
  8692  00290C                     
  8693                           ;dc_motor.c: 106:     stop(mL, mR);
  8694  00290C  C01D  F019         	movff	turnLeft90@mL,stop@mL
  8695  002910  C01E  F01A         	movff	turnLeft90@mL+1,stop@mL+1
  8696  002914  C01F  F01B         	movff	turnLeft90@mR,stop@mR
  8697  002918  C020  F01C         	movff	turnLeft90@mR+1,stop@mR+1
  8698  00291C  EC08  F019         	call	_stop	;wreg free
  8699  002920                     
  8700                           ;dc_motor.c: 107:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8701  002920  0E05               	movlw	5
  8702  002922  6E22               	movwf	(??_turnLeft90+1)^0,c
  8703  002924  0E0F               	movlw	15
  8704  002926  6E21               	movwf	??_turnLeft90^0,c
  8705  002928  0EF1               	movlw	241
  8706  00292A                     u4707:
  8707  00292A  2EE8               	decfsz	wreg,f,c
  8708  00292C  D7FE               	bra	u4707
  8709  00292E  2E21               	decfsz	??_turnLeft90^0,f,c
  8710  002930  D7FC               	bra	u4707
  8711  002932  2E22               	decfsz	(??_turnLeft90+1)^0,f,c
  8712  002934  D7FA               	bra	u4707
  8713  002936  F000               	nop	
  8714  002938  0012               	return		;funcret
  8715  00293A                     __end_of_turnLeft90:
  8716                           	callstack 0
  8717                           
  8718 ;; *************** function _turnLeft135 *****************
  8719 ;; Defined at:
  8720 ;;		line 111 in file "dc_motor.c"
  8721 ;; Parameters:    Size  Location     Type
  8722 ;;  mL              2   28[COMRAM] PTR struct DC_motor
  8723 ;;		 -> main@motorL(9), 
  8724 ;;  mR              2   30[COMRAM] PTR struct DC_motor
  8725 ;;		 -> main@motorR(9), 
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;  i               2   34[COMRAM] unsigned int 
  8728 ;; Return value:  Size  Location     Type
  8729 ;;                  1    wreg      void 
  8730 ;; Registers used:
  8731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/0
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8737 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8739 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8740 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8741 ;;Total ram usage:        8 bytes
  8742 ;; Hardware stack levels used: 1
  8743 ;; Hardware stack levels required when called: 4
  8744 ;; This function calls:
  8745 ;;		_reverse
  8746 ;;		_setMotorPWM
  8747 ;;		_stop
  8748 ;; This function is called by:
  8749 ;;		_White
  8750 ;;		_main
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754                           	psect	text35
  8755  002CF2                     __ptext35:
  8756                           	callstack 0
  8757  002CF2                     _turnLeft135:
  8758                           	callstack 26
  8759  002CF2                     
  8760                           ;dc_motor.c: 111: void turnLeft135(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c:
      +                           112: {;dc_motor.c: 113:     stop(mL, mR);
  8761  002CF2  C01D  F019         	movff	turnLeft135@mL,stop@mL
  8762  002CF6  C01E  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  8763  002CFA  C01F  F01B         	movff	turnLeft135@mR,stop@mR
  8764  002CFE  C020  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  8765  002D02  EC08  F019         	call	_stop	;wreg free
  8766  002D06                     
  8767                           ;dc_motor.c: 114:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8768  002D06  0E05               	movlw	5
  8769  002D08  6E22               	movwf	(??_turnLeft135+1)^0,c
  8770  002D0A  0E0F               	movlw	15
  8771  002D0C  6E21               	movwf	??_turnLeft135^0,c
  8772  002D0E  0EF1               	movlw	241
  8773  002D10                     u4717:
  8774  002D10  2EE8               	decfsz	wreg,f,c
  8775  002D12  D7FE               	bra	u4717
  8776  002D14  2E21               	decfsz	??_turnLeft135^0,f,c
  8777  002D16  D7FC               	bra	u4717
  8778  002D18  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  8779  002D1A  D7FA               	bra	u4717
  8780  002D1C  F000               	nop	
  8781  002D1E                     
  8782                           ;dc_motor.c: 115:     reverse(mL, mR);
  8783  002D1E  C01D  F019         	movff	turnLeft135@mL,reverse@mL
  8784  002D22  C01E  F01A         	movff	turnLeft135@mL+1,reverse@mL+1
  8785  002D26  C01F  F01B         	movff	turnLeft135@mR,reverse@mR
  8786  002D2A  C020  F01C         	movff	turnLeft135@mR+1,reverse@mR+1
  8787  002D2E  EC26  F01A         	call	_reverse	;wreg free
  8788                           
  8789                           ;dc_motor.c: 116:     _delay((unsigned long)((400)*(64000000/4000.0)));
  8790  002D32  0E21               	movlw	33
  8791  002D34  6E22               	movwf	(??_turnLeft135+1)^0,c
  8792  002D36  0E78               	movlw	120
  8793  002D38  6E21               	movwf	??_turnLeft135^0,c
  8794  002D3A  0E98               	movlw	152
  8795  002D3C                     u4727:
  8796  002D3C  2EE8               	decfsz	wreg,f,c
  8797  002D3E  D7FE               	bra	u4727
  8798  002D40  2E21               	decfsz	??_turnLeft135^0,f,c
  8799  002D42  D7FC               	bra	u4727
  8800  002D44  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  8801  002D46  D7FA               	bra	u4727
  8802  002D48  D000               	nop2	
  8803  002D4A                     
  8804                           ;dc_motor.c: 117:     stop(mL, mR);
  8805  002D4A  C01D  F019         	movff	turnLeft135@mL,stop@mL
  8806  002D4E  C01E  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  8807  002D52  C01F  F01B         	movff	turnLeft135@mR,stop@mR
  8808  002D56  C020  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  8809  002D5A  EC08  F019         	call	_stop	;wreg free
  8810  002D5E                     
  8811                           ;dc_motor.c: 118:     _delay((unsigned long)((150)*(64000000/4000.0)));
  8812  002D5E  0E0D               	movlw	13
  8813  002D60  6E22               	movwf	(??_turnLeft135+1)^0,c
  8814  002D62  0E2D               	movlw	45
  8815  002D64  6E21               	movwf	??_turnLeft135^0,c
  8816  002D66  0ED8               	movlw	216
  8817  002D68                     u4737:
  8818  002D68  2EE8               	decfsz	wreg,f,c
  8819  002D6A  D7FE               	bra	u4737
  8820  002D6C  2E21               	decfsz	??_turnLeft135^0,f,c
  8821  002D6E  D7FC               	bra	u4737
  8822  002D70  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  8823  002D72  D7FA               	bra	u4737
  8824  002D74                     
  8825                           ;dc_motor.c: 120:     (*mL).direction = 0;
  8826  002D74  EE20 F001          	lfsr	2,1
  8827  002D78  501D               	movf	turnLeft135@mL^0,w,c
  8828  002D7A  26D9               	addwf	fsr2l,f,c
  8829  002D7C  501E               	movf	(turnLeft135@mL+1)^0,w,c
  8830  002D7E  22DA               	addwfc	fsr2h,f,c
  8831  002D80  0E00               	movlw	0
  8832  002D82  6EDF               	movwf	indf2,c
  8833  002D84                     
  8834                           ;dc_motor.c: 121:     (*mR).direction = 1;
  8835  002D84  EE20 F001          	lfsr	2,1
  8836  002D88  501F               	movf	turnLeft135@mR^0,w,c
  8837  002D8A  26D9               	addwf	fsr2l,f,c
  8838  002D8C  5020               	movf	(turnLeft135@mR+1)^0,w,c
  8839  002D8E  22DA               	addwfc	fsr2h,f,c
  8840  002D90  0E01               	movlw	1
  8841  002D92  6EDF               	movwf	indf2,c
  8842  002D94                     
  8843                           ;dc_motor.c: 122:     for (unsigned int i = 0; i < 75; ++i){
  8844  002D94  0E00               	movlw	0
  8845  002D96  6E24               	movwf	(turnLeft135@i+1)^0,c
  8846  002D98  0E00               	movlw	0
  8847  002D9A  6E23               	movwf	turnLeft135@i^0,c
  8848  002D9C                     l3031:
  8849                           
  8850                           ;dc_motor.c: 123:         (mL->power) += 1;
  8851  002D9C  C01D  FFD9         	movff	turnLeft135@mL,fsr2l
  8852  002DA0  C01E  FFDA         	movff	turnLeft135@mL+1,fsr2h
  8853  002DA4  2ADF               	incf	indf2,f,c
  8854                           
  8855                           ;dc_motor.c: 124:         (mR->power) += 1;
  8856  002DA6  C01F  FFD9         	movff	turnLeft135@mR,fsr2l
  8857  002DAA  C020  FFDA         	movff	turnLeft135@mR+1,fsr2h
  8858  002DAE  2ADF               	incf	indf2,f,c
  8859  002DB0                     
  8860                           ;dc_motor.c: 125:         setMotorPWM(mL);
  8861  002DB0  C01D  F00E         	movff	turnLeft135@mL,setMotorPWM@m
  8862  002DB4  C01E  F00F         	movff	turnLeft135@mL+1,setMotorPWM@m+1
  8863  002DB8  EC39  F012         	call	_setMotorPWM	;wreg free
  8864  002DBC                     
  8865                           ;dc_motor.c: 126:         setMotorPWM(mR);
  8866  002DBC  C01F  F00E         	movff	turnLeft135@mR,setMotorPWM@m
  8867  002DC0  C020  F00F         	movff	turnLeft135@mR+1,setMotorPWM@m+1
  8868  002DC4  EC39  F012         	call	_setMotorPWM	;wreg free
  8869  002DC8                     
  8870                           ;dc_motor.c: 127:         _delay((unsigned long)((50)*(64000000/4000000.0)));
  8871  002DC8  0EA0               	movlw	160
  8872  002DCA                     u4747:
  8873  002DCA  D000               	nop2	
  8874  002DCC  2EE8               	decfsz	wreg,f,c
  8875  002DCE  D7FD               	bra	u4747
  8876  002DD0                     
  8877                           ;dc_motor.c: 128:     }
  8878  002DD0  4A23               	infsnz	turnLeft135@i^0,f,c
  8879  002DD2  2A24               	incf	(turnLeft135@i+1)^0,f,c
  8880  002DD4  5024               	movf	(turnLeft135@i+1)^0,w,c
  8881  002DD6  E109               	bnz	u2390
  8882  002DD8  0E4B               	movlw	75
  8883  002DDA  5C23               	subwf	turnLeft135@i^0,w,c
  8884  002DDC  A0D8               	btfss	status,0,c
  8885  002DDE  EFF3  F016         	goto	u2391
  8886  002DE2  EFF5  F016         	goto	u2390
  8887  002DE6                     u2391:
  8888  002DE6  EFCE  F016         	goto	l3031
  8889  002DEA                     u2390:
  8890  002DEA                     
  8891                           ;dc_motor.c: 129:     _delay((unsigned long)((255)*(64000000/4000.0)));
  8892  002DEA  0E15               	movlw	21
  8893  002DEC  6E22               	movwf	(??_turnLeft135+1)^0,c
  8894  002DEE  0EB3               	movlw	179
  8895  002DF0  6E21               	movwf	??_turnLeft135^0,c
  8896  002DF2  0EA4               	movlw	164
  8897  002DF4                     u4757:
  8898  002DF4  2EE8               	decfsz	wreg,f,c
  8899  002DF6  D7FE               	bra	u4757
  8900  002DF8  2E21               	decfsz	??_turnLeft135^0,f,c
  8901  002DFA  D7FC               	bra	u4757
  8902  002DFC  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  8903  002DFE  D7FA               	bra	u4757
  8904  002E00                     
  8905                           ;dc_motor.c: 130:     stop(mL, mR);
  8906  002E00  C01D  F019         	movff	turnLeft135@mL,stop@mL
  8907  002E04  C01E  F01A         	movff	turnLeft135@mL+1,stop@mL+1
  8908  002E08  C01F  F01B         	movff	turnLeft135@mR,stop@mR
  8909  002E0C  C020  F01C         	movff	turnLeft135@mR+1,stop@mR+1
  8910  002E10  EC08  F019         	call	_stop	;wreg free
  8911  002E14                     
  8912                           ;dc_motor.c: 131:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8913  002E14  0E05               	movlw	5
  8914  002E16  6E22               	movwf	(??_turnLeft135+1)^0,c
  8915  002E18  0E0F               	movlw	15
  8916  002E1A  6E21               	movwf	??_turnLeft135^0,c
  8917  002E1C  0EF1               	movlw	241
  8918  002E1E                     u4767:
  8919  002E1E  2EE8               	decfsz	wreg,f,c
  8920  002E20  D7FE               	bra	u4767
  8921  002E22  2E21               	decfsz	??_turnLeft135^0,f,c
  8922  002E24  D7FC               	bra	u4767
  8923  002E26  2E22               	decfsz	(??_turnLeft135+1)^0,f,c
  8924  002E28  D7FA               	bra	u4767
  8925  002E2A  F000               	nop	
  8926  002E2C  0012               	return		;funcret
  8927  002E2E                     __end_of_turnLeft135:
  8928                           	callstack 0
  8929                           
  8930 ;; *************** function _stop *****************
  8931 ;; Defined at:
  8932 ;;		line 61 in file "dc_motor.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  8935 ;;		 -> main@motorL(9), 
  8936 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  8937 ;;		 -> main@motorR(9), 
  8938 ;; Auto vars:     Size  Location     Type
  8939 ;;		None
  8940 ;; Return value:  Size  Location     Type
  8941 ;;                  1    wreg      void 
  8942 ;; Registers used:
  8943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8944 ;; Tracked objects:
  8945 ;;		On entry : 0/0
  8946 ;;		On exit  : 0/0
  8947 ;;		Unchanged: 0/0
  8948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8949 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8952 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8953 ;;Total ram usage:        4 bytes
  8954 ;; Hardware stack levels used: 1
  8955 ;; Hardware stack levels required when called: 3
  8956 ;; This function calls:
  8957 ;;		_setMotorPWM
  8958 ;; This function is called by:
  8959 ;;		_White
  8960 ;;		_turnLeft90
  8961 ;;		_turnLeft135
  8962 ;;		_turnRight90
  8963 ;;		_turnRight135
  8964 ;;		_turnRight180
  8965 ;;		_reverseTurnRight90
  8966 ;;		_reverseTurnLeft90
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970                           	psect	text36
  8971  003210                     __ptext36:
  8972                           	callstack 0
  8973  003210                     _stop:
  8974                           	callstack 26
  8975  003210                     
  8976                           ;dc_motor.c: 61: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 62: {;d
      +                          c_motor.c: 63:     while ((mL->power)>0 && (mR->power)>0){
  8977  003210  EF3C  F019         	goto	l2809
  8978  003214                     l2795:
  8979                           
  8980                           ;dc_motor.c: 64:         if ((mL->power) > 0){
  8981  003214  C019  FFD9         	movff	stop@mL,fsr2l
  8982  003218  C01A  FFDA         	movff	stop@mL+1,fsr2h
  8983  00321C  50DF               	movf	indf2,w,c
  8984  00321E  B4D8               	btfsc	status,2,c
  8985  003220  EF14  F019         	goto	u2251
  8986  003224  EF16  F019         	goto	u2250
  8987  003228                     u2251:
  8988  003228  EF1B  F019         	goto	l2799
  8989  00322C                     u2250:
  8990  00322C                     
  8991                           ;dc_motor.c: 65:             (mL->power) -= 1;
  8992  00322C  C019  FFD9         	movff	stop@mL,fsr2l
  8993  003230  C01A  FFDA         	movff	stop@mL+1,fsr2h
  8994  003234  06DF               	decf	indf2,f,c
  8995  003236                     l2799:
  8996                           
  8997                           ;dc_motor.c: 67:         if ((mR->power) > 0){
  8998  003236  C01B  FFD9         	movff	stop@mR,fsr2l
  8999  00323A  C01C  FFDA         	movff	stop@mR+1,fsr2h
  9000  00323E  50DF               	movf	indf2,w,c
  9001  003240  B4D8               	btfsc	status,2,c
  9002  003242  EF25  F019         	goto	u2261
  9003  003246  EF27  F019         	goto	u2260
  9004  00324A                     u2261:
  9005  00324A  EF2C  F019         	goto	l2803
  9006  00324E                     u2260:
  9007  00324E                     
  9008                           ;dc_motor.c: 68:             (mR->power) -= 1;
  9009  00324E  C01B  FFD9         	movff	stop@mR,fsr2l
  9010  003252  C01C  FFDA         	movff	stop@mR+1,fsr2h
  9011  003256  06DF               	decf	indf2,f,c
  9012  003258                     l2803:
  9013                           
  9014                           ;dc_motor.c: 70:         setMotorPWM(mL);
  9015  003258  C019  F00E         	movff	stop@mL,setMotorPWM@m
  9016  00325C  C01A  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  9017  003260  EC39  F012         	call	_setMotorPWM	;wreg free
  9018  003264                     
  9019                           ;dc_motor.c: 71:         setMotorPWM(mR);
  9020  003264  C01B  F00E         	movff	stop@mR,setMotorPWM@m
  9021  003268  C01C  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  9022  00326C  EC39  F012         	call	_setMotorPWM	;wreg free
  9023  003270                     
  9024                           ;dc_motor.c: 72:         _delay((unsigned long)((10)*(64000000/4000000.0)));
  9025  003270  0E35               	movlw	53
  9026  003272                     u4777:
  9027  003272  2EE8               	decfsz	wreg,f,c
  9028  003274  D7FE               	bra	u4777
  9029  003276  F000               	nop	
  9030  003278                     l2809:
  9031                           
  9032                           ;dc_motor.c: 63:     while ((mL->power)>0 && (mR->power)>0){
  9033  003278  C019  FFD9         	movff	stop@mL,fsr2l
  9034  00327C  C01A  FFDA         	movff	stop@mL+1,fsr2h
  9035  003280  50DF               	movf	indf2,w,c
  9036  003282  B4D8               	btfsc	status,2,c
  9037  003284  EF46  F019         	goto	u2271
  9038  003288  EF48  F019         	goto	u2270
  9039  00328C                     u2271:
  9040  00328C  EF54  F019         	goto	l224
  9041  003290                     u2270:
  9042  003290  C01B  FFD9         	movff	stop@mR,fsr2l
  9043  003294  C01C  FFDA         	movff	stop@mR+1,fsr2h
  9044  003298  50DF               	movf	indf2,w,c
  9045  00329A  A4D8               	btfss	status,2,c
  9046  00329C  EF52  F019         	goto	u2281
  9047  0032A0  EF54  F019         	goto	u2280
  9048  0032A4                     u2281:
  9049  0032A4  EF0A  F019         	goto	l2795
  9050  0032A8                     u2280:
  9051  0032A8                     l224:
  9052  0032A8  0012               	return		;funcret
  9053  0032AA                     __end_of_stop:
  9054                           	callstack 0
  9055                           
  9056 ;; *************** function _reverse *****************
  9057 ;; Defined at:
  9058 ;;		line 76 in file "dc_motor.c"
  9059 ;; Parameters:    Size  Location     Type
  9060 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  9061 ;;		 -> main@motorL(9), 
  9062 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  9063 ;;		 -> main@motorR(9), 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;		None
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  1    wreg      void 
  9068 ;; Registers used:
  9069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9078 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9079 ;;Total ram usage:        4 bytes
  9080 ;; Hardware stack levels used: 1
  9081 ;; Hardware stack levels required when called: 3
  9082 ;; This function calls:
  9083 ;;		_setMotorPWM
  9084 ;; This function is called by:
  9085 ;;		_White
  9086 ;;		_turnLeft90
  9087 ;;		_turnLeft135
  9088 ;;		_turnRight90
  9089 ;;		_turnRight135
  9090 ;;		_turnRight180
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           	psect	text37
  9095  00344C                     __ptext37:
  9096                           	callstack 0
  9097  00344C                     _reverse:
  9098                           	callstack 26
  9099  00344C                     
  9100                           ;dc_motor.c: 76: void reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 77: 
      +                          {;dc_motor.c: 78:     (*mL).direction = 0;
  9101  00344C  EE20 F001          	lfsr	2,1
  9102  003450  5019               	movf	reverse@mL^0,w,c
  9103  003452  26D9               	addwf	fsr2l,f,c
  9104  003454  501A               	movf	(reverse@mL+1)^0,w,c
  9105  003456  22DA               	addwfc	fsr2h,f,c
  9106  003458  0E00               	movlw	0
  9107  00345A  6EDF               	movwf	indf2,c
  9108                           
  9109                           ;dc_motor.c: 79:     (*mR).direction = 0;
  9110  00345C  EE20 F001          	lfsr	2,1
  9111  003460  501B               	movf	reverse@mR^0,w,c
  9112  003462  26D9               	addwf	fsr2l,f,c
  9113  003464  501C               	movf	(reverse@mR+1)^0,w,c
  9114  003466  22DA               	addwfc	fsr2h,f,c
  9115  003468  0E00               	movlw	0
  9116  00346A  6EDF               	movwf	indf2,c
  9117  00346C                     
  9118                           ;dc_motor.c: 80:     (*mL).power = 50;
  9119  00346C  C019  FFD9         	movff	reverse@mL,fsr2l
  9120  003470  C01A  FFDA         	movff	reverse@mL+1,fsr2h
  9121  003474  0E32               	movlw	50
  9122  003476  6EDF               	movwf	indf2,c
  9123  003478                     
  9124                           ;dc_motor.c: 81:     (*mR).power = 50;
  9125  003478  C01B  FFD9         	movff	reverse@mR,fsr2l
  9126  00347C  C01C  FFDA         	movff	reverse@mR+1,fsr2h
  9127  003480  0E32               	movlw	50
  9128  003482  6EDF               	movwf	indf2,c
  9129  003484                     
  9130                           ;dc_motor.c: 82:     setMotorPWM(mL);
  9131  003484  C019  F00E         	movff	reverse@mL,setMotorPWM@m
  9132  003488  C01A  F00F         	movff	reverse@mL+1,setMotorPWM@m+1
  9133  00348C  EC39  F012         	call	_setMotorPWM	;wreg free
  9134  003490                     
  9135                           ;dc_motor.c: 83:     setMotorPWM(mR);
  9136  003490  C01B  F00E         	movff	reverse@mR,setMotorPWM@m
  9137  003494  C01C  F00F         	movff	reverse@mR+1,setMotorPWM@m+1
  9138  003498  EC39  F012         	call	_setMotorPWM	;wreg free
  9139  00349C  0012               	return		;funcret
  9140  00349E                     __end_of_reverse:
  9141                           	callstack 0
  9142                           
  9143 ;; *************** function _forward *****************
  9144 ;; Defined at:
  9145 ;;		line 207 in file "dc_motor.c"
  9146 ;; Parameters:    Size  Location     Type
  9147 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  9148 ;;		 -> main@motorL(9), 
  9149 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  9150 ;;		 -> main@motorR(9), 
  9151 ;; Auto vars:     Size  Location     Type
  9152 ;;		None
  9153 ;; Return value:  Size  Location     Type
  9154 ;;                  1    wreg      void 
  9155 ;; Registers used:
  9156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9157 ;; Tracked objects:
  9158 ;;		On entry : 0/0
  9159 ;;		On exit  : 0/0
  9160 ;;		Unchanged: 0/0
  9161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9162 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9165 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9166 ;;Total ram usage:        4 bytes
  9167 ;; Hardware stack levels used: 1
  9168 ;; Hardware stack levels required when called: 3
  9169 ;; This function calls:
  9170 ;;		_setMotorPWM
  9171 ;; This function is called by:
  9172 ;;		_White
  9173 ;;		_main
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           	psect	text38
  9178  00349E                     __ptext38:
  9179                           	callstack 0
  9180  00349E                     _forward:
  9181                           	callstack 27
  9182  00349E                     
  9183                           ;dc_motor.c: 207: void forward(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 208
      +                          : {;dc_motor.c: 209:     (*mL).direction = 1;
  9184  00349E  EE20 F001          	lfsr	2,1
  9185  0034A2  5019               	movf	forward@mL^0,w,c
  9186  0034A4  26D9               	addwf	fsr2l,f,c
  9187  0034A6  501A               	movf	(forward@mL+1)^0,w,c
  9188  0034A8  22DA               	addwfc	fsr2h,f,c
  9189  0034AA  0E01               	movlw	1
  9190  0034AC  6EDF               	movwf	indf2,c
  9191                           
  9192                           ;dc_motor.c: 210:     (*mR).direction = 1;
  9193  0034AE  EE20 F001          	lfsr	2,1
  9194  0034B2  501B               	movf	forward@mR^0,w,c
  9195  0034B4  26D9               	addwf	fsr2l,f,c
  9196  0034B6  501C               	movf	(forward@mR+1)^0,w,c
  9197  0034B8  22DA               	addwfc	fsr2h,f,c
  9198  0034BA  0E01               	movlw	1
  9199  0034BC  6EDF               	movwf	indf2,c
  9200  0034BE                     
  9201                           ;dc_motor.c: 211:     (*mL).power = 13;
  9202  0034BE  C019  FFD9         	movff	forward@mL,fsr2l
  9203  0034C2  C01A  FFDA         	movff	forward@mL+1,fsr2h
  9204  0034C6  0E0D               	movlw	13
  9205  0034C8  6EDF               	movwf	indf2,c
  9206  0034CA                     
  9207                           ;dc_motor.c: 212:     (*mR).power = 13;
  9208  0034CA  C01B  FFD9         	movff	forward@mR,fsr2l
  9209  0034CE  C01C  FFDA         	movff	forward@mR+1,fsr2h
  9210  0034D2  0E0D               	movlw	13
  9211  0034D4  6EDF               	movwf	indf2,c
  9212  0034D6                     
  9213                           ;dc_motor.c: 213:     setMotorPWM(mL);
  9214  0034D6  C019  F00E         	movff	forward@mL,setMotorPWM@m
  9215  0034DA  C01A  F00F         	movff	forward@mL+1,setMotorPWM@m+1
  9216  0034DE  EC39  F012         	call	_setMotorPWM	;wreg free
  9217  0034E2                     
  9218                           ;dc_motor.c: 214:     setMotorPWM(mR);
  9219  0034E2  C01B  F00E         	movff	forward@mR,setMotorPWM@m
  9220  0034E6  C01C  F00F         	movff	forward@mR+1,setMotorPWM@m+1
  9221  0034EA  EC39  F012         	call	_setMotorPWM	;wreg free
  9222  0034EE  0012               	return		;funcret
  9223  0034F0                     __end_of_forward:
  9224                           	callstack 0
  9225                           
  9226 ;; *************** function _setMotorPWM *****************
  9227 ;; Defined at:
  9228 ;;		line 37 in file "dc_motor.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;  m               2   13[COMRAM] PTR struct DC_motor
  9231 ;;		 -> main@motorR(9), main@motorL(9), 
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;  PWMduty         2   22[COMRAM] int 
  9234 ;; Return value:  Size  Location     Type
  9235 ;;                  1    wreg      void 
  9236 ;; Registers used:
  9237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9238 ;; Tracked objects:
  9239 ;;		On entry : 0/0
  9240 ;;		On exit  : 0/0
  9241 ;;		Unchanged: 0/0
  9242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9244 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9245 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9246 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9247 ;;Total ram usage:       11 bytes
  9248 ;; Hardware stack levels used: 1
  9249 ;; Hardware stack levels required when called: 2
  9250 ;; This function calls:
  9251 ;;		___lwdiv
  9252 ;;		___wmul
  9253 ;; This function is called by:
  9254 ;;		_stop
  9255 ;;		_reverse
  9256 ;;		_turnLeft90
  9257 ;;		_turnLeft135
  9258 ;;		_turnRight90
  9259 ;;		_turnRight135
  9260 ;;		_turnRight180
  9261 ;;		_forward
  9262 ;;		_reverseTurnRight90
  9263 ;;		_reverseTurnLeft90
  9264 ;; This function uses a non-reentrant model
  9265 ;;
  9266                           
  9267                           	psect	text39
  9268  002472                     __ptext39:
  9269                           	callstack 0
  9270  002472                     _setMotorPWM:
  9271                           	callstack 26
  9272  002472                     
  9273                           ;dc_motor.c: 37: void setMotorPWM(struct DC_motor *m);dc_motor.c: 38: {;dc_motor.c: 39: 
      +                           int PWMduty;;dc_motor.c: 41:  if (m->direction){
  9274  002472  EE20 F001          	lfsr	2,1
  9275  002476  500E               	movf	setMotorPWM@m^0,w,c
  9276  002478  26D9               	addwf	fsr2l,f,c
  9277  00247A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9278  00247C  22DA               	addwfc	fsr2h,f,c
  9279  00247E  50DF               	movf	indf2,w,c
  9280  002480  B4D8               	btfsc	status,2,c
  9281  002482  EF45  F012         	goto	u2191
  9282  002486  EF47  F012         	goto	u2190
  9283  00248A                     u2191:
  9284  00248A  EF78  F012         	goto	l2753
  9285  00248E                     u2190:
  9286  00248E                     
  9287                           ;dc_motor.c: 43:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  9288  00248E  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9289  002492  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9290  002496  50DF               	movf	indf2,w,c
  9291  002498  6E10               	movwf	??_setMotorPWM^0,c
  9292  00249A  5010               	movf	??_setMotorPWM^0,w,c
  9293  00249C  6E01               	movwf	___wmul@multiplier^0,c
  9294  00249E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9295  0024A0  EE20 F007          	lfsr	2,7
  9296  0024A4  500E               	movf	setMotorPWM@m^0,w,c
  9297  0024A6  26D9               	addwf	fsr2l,f,c
  9298  0024A8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9299  0024AA  22DA               	addwfc	fsr2h,f,c
  9300  0024AC  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9301  0024B0  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9302  0024B4  ECE5  F01B         	call	___wmul	;wreg free
  9303  0024B8  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9304  0024BC  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9305  0024C0  0E00               	movlw	0
  9306  0024C2  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9307  0024C4  0E64               	movlw	100
  9308  0024C6  6E09               	movwf	___lwdiv@divisor^0,c
  9309  0024C8  EC92  F019         	call	___lwdiv	;wreg free
  9310  0024CC  EE20 F007          	lfsr	2,7
  9311  0024D0  500E               	movf	setMotorPWM@m^0,w,c
  9312  0024D2  26D9               	addwf	fsr2l,f,c
  9313  0024D4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9314  0024D6  22DA               	addwfc	fsr2h,f,c
  9315  0024D8  CFDE F011          	movff	postinc2,??_setMotorPWM+1
  9316  0024DC  CFDD F012          	movff	postdec2,??_setMotorPWM+2
  9317  0024E0  5007               	movf	?___lwdiv^0,w,c
  9318  0024E2  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  9319  0024E4  6E17               	movwf	setMotorPWM@PWMduty^0,c
  9320  0024E6  5008               	movf	(?___lwdiv+1)^0,w,c
  9321  0024E8  5812               	subwfb	(??_setMotorPWM+2)^0,w,c
  9322  0024EA  6E18               	movwf	(setMotorPWM@PWMduty+1)^0,c
  9323                           
  9324                           ;dc_motor.c: 44:  }
  9325  0024EC  EF9B  F012         	goto	l2755
  9326  0024F0                     l2753:
  9327                           
  9328                           ;dc_motor.c: 47:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  9329  0024F0  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  9330  0024F4  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  9331  0024F8  50DF               	movf	indf2,w,c
  9332  0024FA  6E10               	movwf	??_setMotorPWM^0,c
  9333  0024FC  5010               	movf	??_setMotorPWM^0,w,c
  9334  0024FE  6E01               	movwf	___wmul@multiplier^0,c
  9335  002500  6A02               	clrf	(___wmul@multiplier+1)^0,c
  9336  002502  EE20 F007          	lfsr	2,7
  9337  002506  500E               	movf	setMotorPWM@m^0,w,c
  9338  002508  26D9               	addwf	fsr2l,f,c
  9339  00250A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9340  00250C  22DA               	addwfc	fsr2h,f,c
  9341  00250E  CFDE F003          	movff	postinc2,___wmul@multiplicand
  9342  002512  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  9343  002516  ECE5  F01B         	call	___wmul	;wreg free
  9344  00251A  C001  F007         	movff	?___wmul,___lwdiv@dividend
  9345  00251E  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  9346  002522  0E00               	movlw	0
  9347  002524  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  9348  002526  0E64               	movlw	100
  9349  002528  6E09               	movwf	___lwdiv@divisor^0,c
  9350  00252A  EC92  F019         	call	___lwdiv	;wreg free
  9351  00252E  C007  F017         	movff	?___lwdiv,setMotorPWM@PWMduty
  9352  002532  C008  F018         	movff	?___lwdiv+1,setMotorPWM@PWMduty+1
  9353  002536                     l2755:
  9354                           
  9355                           ;dc_motor.c: 50:  *(m->dutyHighByte) = PWMduty;
  9356  002536  EE20 F002          	lfsr	2,2
  9357  00253A  500E               	movf	setMotorPWM@m^0,w,c
  9358  00253C  26D9               	addwf	fsr2l,f,c
  9359  00253E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9360  002540  22DA               	addwfc	fsr2h,f,c
  9361  002542  CFDE F010          	movff	postinc2,??_setMotorPWM
  9362  002546  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9363  00254A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9364  00254E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9365  002552  C017  FFDF         	movff	setMotorPWM@PWMduty,indf2
  9366  002556                     
  9367                           ;dc_motor.c: 52:  if (m->direction){
  9368  002556  EE20 F001          	lfsr	2,1
  9369  00255A  500E               	movf	setMotorPWM@m^0,w,c
  9370  00255C  26D9               	addwf	fsr2l,f,c
  9371  00255E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9372  002560  22DA               	addwfc	fsr2h,f,c
  9373  002562  50DF               	movf	indf2,w,c
  9374  002564  B4D8               	btfsc	status,2,c
  9375  002566  EFB7  F012         	goto	u2201
  9376  00256A  EFB9  F012         	goto	u2200
  9377  00256E                     u2201:
  9378  00256E  EFEE  F012         	goto	l2761
  9379  002572                     u2200:
  9380  002572                     
  9381                           ;dc_motor.c: 53:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  9382  002572  EE20 F004          	lfsr	2,4
  9383  002576  500E               	movf	setMotorPWM@m^0,w,c
  9384  002578  26D9               	addwf	fsr2l,f,c
  9385  00257A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9386  00257C  22DA               	addwfc	fsr2h,f,c
  9387  00257E  CFDE F010          	movff	postinc2,??_setMotorPWM
  9388  002582  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9389  002586  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9390  00258A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9391  00258E  EE10 F004          	lfsr	1,4
  9392  002592  500E               	movf	setMotorPWM@m^0,w,c
  9393  002594  26E1               	addwf	fsr1l,f,c
  9394  002596  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9395  002598  22E2               	addwfc	fsr1h,f,c
  9396  00259A  CFE6 F012          	movff	postinc1,??_setMotorPWM+2
  9397  00259E  CFE5 F013          	movff	postdec1,??_setMotorPWM+3
  9398  0025A2  C012  FFE1         	movff	??_setMotorPWM+2,fsr1l
  9399  0025A6  C013  FFE2         	movff	??_setMotorPWM+3,fsr1h
  9400  0025AA  50E7               	movf	indf1,w,c
  9401  0025AC  6E14               	movwf	(??_setMotorPWM+4)^0,c
  9402  0025AE  EE10 F006          	lfsr	1,6
  9403  0025B2  500E               	movf	setMotorPWM@m^0,w,c
  9404  0025B4  26E1               	addwf	fsr1l,f,c
  9405  0025B6  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9406  0025B8  22E2               	addwfc	fsr1h,f,c
  9407  0025BA  50E7               	movf	indf1,w,c
  9408  0025BC  6E15               	movwf	(??_setMotorPWM+5)^0,c
  9409  0025BE  0E01               	movlw	1
  9410  0025C0  6E16               	movwf	(??_setMotorPWM+6)^0,c
  9411  0025C2  2A15               	incf	(??_setMotorPWM+5)^0,f,c
  9412  0025C4  EFE6  F012         	goto	u2214
  9413  0025C8                     u2215:
  9414  0025C8  90D8               	bcf	status,0,c
  9415  0025CA  3616               	rlcf	(??_setMotorPWM+6)^0,f,c
  9416  0025CC                     u2214:
  9417  0025CC  2E15               	decfsz	(??_setMotorPWM+5)^0,f,c
  9418  0025CE  EFE4  F012         	goto	u2215
  9419  0025D2  5016               	movf	(??_setMotorPWM+6)^0,w,c
  9420  0025D4  1014               	iorwf	(??_setMotorPWM+4)^0,w,c
  9421  0025D6  6EDF               	movwf	indf2,c
  9422                           
  9423                           ;dc_motor.c: 54:  }
  9424  0025D8  EF22  F013         	goto	l214
  9425  0025DC                     l2761:
  9426                           
  9427                           ;dc_motor.c: 56:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  9428  0025DC  EE20 F004          	lfsr	2,4
  9429  0025E0  500E               	movf	setMotorPWM@m^0,w,c
  9430  0025E2  26D9               	addwf	fsr2l,f,c
  9431  0025E4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9432  0025E6  22DA               	addwfc	fsr2h,f,c
  9433  0025E8  CFDE F010          	movff	postinc2,??_setMotorPWM
  9434  0025EC  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  9435  0025F0  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  9436  0025F4  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  9437  0025F8  EE10 F004          	lfsr	1,4
  9438  0025FC  500E               	movf	setMotorPWM@m^0,w,c
  9439  0025FE  26E1               	addwf	fsr1l,f,c
  9440  002600  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9441  002602  22E2               	addwfc	fsr1h,f,c
  9442  002604  CFE6 F012          	movff	postinc1,??_setMotorPWM+2
  9443  002608  CFE5 F013          	movff	postdec1,??_setMotorPWM+3
  9444  00260C  C012  FFE1         	movff	??_setMotorPWM+2,fsr1l
  9445  002610  C013  FFE2         	movff	??_setMotorPWM+3,fsr1h
  9446  002614  50E7               	movf	indf1,w,c
  9447  002616  6E14               	movwf	(??_setMotorPWM+4)^0,c
  9448  002618  EE10 F006          	lfsr	1,6
  9449  00261C  500E               	movf	setMotorPWM@m^0,w,c
  9450  00261E  26E1               	addwf	fsr1l,f,c
  9451  002620  500F               	movf	(setMotorPWM@m+1)^0,w,c
  9452  002622  22E2               	addwfc	fsr1h,f,c
  9453  002624  50E7               	movf	indf1,w,c
  9454  002626  6E15               	movwf	(??_setMotorPWM+5)^0,c
  9455  002628  0E01               	movlw	1
  9456  00262A  6E16               	movwf	(??_setMotorPWM+6)^0,c
  9457  00262C  2A15               	incf	(??_setMotorPWM+5)^0,f,c
  9458  00262E  EF1B  F013         	goto	u2224
  9459  002632                     u2225:
  9460  002632  90D8               	bcf	status,0,c
  9461  002634  3616               	rlcf	(??_setMotorPWM+6)^0,f,c
  9462  002636                     u2224:
  9463  002636  2E15               	decfsz	(??_setMotorPWM+5)^0,f,c
  9464  002638  EF19  F013         	goto	u2225
  9465  00263C  5016               	movf	(??_setMotorPWM+6)^0,w,c
  9466  00263E  0AFF               	xorlw	255
  9467  002640  1414               	andwf	(??_setMotorPWM+4)^0,w,c
  9468  002642  6EDF               	movwf	indf2,c
  9469  002644                     l214:
  9470  002644  0012               	return		;funcret
  9471  002646                     __end_of_setMotorPWM:
  9472                           	callstack 0
  9473                           
  9474 ;; *************** function ___wmul *****************
  9475 ;; Defined at:
  9476 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;  multiplier      2    0[COMRAM] unsigned int 
  9479 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9480 ;; Auto vars:     Size  Location     Type
  9481 ;;  product         2    4[COMRAM] unsigned int 
  9482 ;; Return value:  Size  Location     Type
  9483 ;;                  2    0[COMRAM] unsigned int 
  9484 ;; Registers used:
  9485 ;;		wreg, status,2, status,0, prodl, prodh
  9486 ;; Tracked objects:
  9487 ;;		On entry : 0/0
  9488 ;;		On exit  : 0/0
  9489 ;;		Unchanged: 0/0
  9490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9491 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9492 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9494 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9495 ;;Total ram usage:        6 bytes
  9496 ;; Hardware stack levels used: 1
  9497 ;; Hardware stack levels required when called: 1
  9498 ;; This function calls:
  9499 ;;		Nothing
  9500 ;; This function is called by:
  9501 ;;		_setMotorPWM
  9502 ;; This function uses a non-reentrant model
  9503 ;;
  9504                           
  9505                           	psect	text40
  9506  0037CA                     __ptext40:
  9507                           	callstack 0
  9508  0037CA                     ___wmul:
  9509                           	callstack 26
  9510  0037CA  5001               	movf	___wmul@multiplier^0,w,c
  9511  0037CC  0203               	mulwf	___wmul@multiplicand^0,c
  9512  0037CE  CFF3 F005          	movff	prodl,___wmul@product
  9513  0037D2  CFF4 F006          	movff	prodh,___wmul@product+1
  9514  0037D6  5001               	movf	___wmul@multiplier^0,w,c
  9515  0037D8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9516  0037DA  50F3               	movf	243,w,c
  9517  0037DC  2606               	addwf	(___wmul@product+1)^0,f,c
  9518  0037DE  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9519  0037E0  0203               	mulwf	___wmul@multiplicand^0,c
  9520  0037E2  50F3               	movf	243,w,c
  9521  0037E4  2606               	addwf	(___wmul@product+1)^0,f,c
  9522  0037E6  C005  F001         	movff	___wmul@product,?___wmul
  9523  0037EA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9524  0037EE  0012               	return		;funcret
  9525  0037F0                     __end_of___wmul:
  9526                           	callstack 0
  9527                           
  9528 ;; *************** function ___lwdiv *****************
  9529 ;; Defined at:
  9530 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  9531 ;; Parameters:    Size  Location     Type
  9532 ;;  dividend        2    6[COMRAM] unsigned int 
  9533 ;;  divisor         2    8[COMRAM] unsigned int 
  9534 ;; Auto vars:     Size  Location     Type
  9535 ;;  quotient        2   10[COMRAM] unsigned int 
  9536 ;;  counter         1   12[COMRAM] unsigned char 
  9537 ;; Return value:  Size  Location     Type
  9538 ;;                  2    6[COMRAM] unsigned int 
  9539 ;; Registers used:
  9540 ;;		wreg, status,2, status,0
  9541 ;; Tracked objects:
  9542 ;;		On entry : 0/0
  9543 ;;		On exit  : 0/0
  9544 ;;		Unchanged: 0/0
  9545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9546 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9547 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9549 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9550 ;;Total ram usage:        7 bytes
  9551 ;; Hardware stack levels used: 1
  9552 ;; Hardware stack levels required when called: 1
  9553 ;; This function calls:
  9554 ;;		Nothing
  9555 ;; This function is called by:
  9556 ;;		_setMotorPWM
  9557 ;; This function uses a non-reentrant model
  9558 ;;
  9559                           
  9560                           	psect	text41
  9561  003324                     __ptext41:
  9562                           	callstack 0
  9563  003324                     ___lwdiv:
  9564                           	callstack 26
  9565  003324  0E00               	movlw	0
  9566  003326  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  9567  003328  0E00               	movlw	0
  9568  00332A  6E0B               	movwf	___lwdiv@quotient^0,c
  9569  00332C  5009               	movf	___lwdiv@divisor^0,w,c
  9570  00332E  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9571  003330  B4D8               	btfsc	status,2,c
  9572  003332  EF9D  F019         	goto	u2141
  9573  003336  EF9F  F019         	goto	u2140
  9574  00333A                     u2141:
  9575  00333A  EFC7  F019         	goto	l1027
  9576  00333E                     u2140:
  9577  00333E  0E01               	movlw	1
  9578  003340  6E0D               	movwf	___lwdiv@counter^0,c
  9579  003342  EFA7  F019         	goto	l2731
  9580  003346                     l2729:
  9581  003346  90D8               	bcf	status,0,c
  9582  003348  3609               	rlcf	___lwdiv@divisor^0,f,c
  9583  00334A  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9584  00334C  2A0D               	incf	___lwdiv@counter^0,f,c
  9585  00334E                     l2731:
  9586  00334E  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  9587  003350  EFAC  F019         	goto	u2151
  9588  003354  EFAE  F019         	goto	u2150
  9589  003358                     u2151:
  9590  003358  EFA3  F019         	goto	l2729
  9591  00335C                     u2150:
  9592  00335C                     l2733:
  9593  00335C  90D8               	bcf	status,0,c
  9594  00335E  360B               	rlcf	___lwdiv@quotient^0,f,c
  9595  003360  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9596  003362  5009               	movf	___lwdiv@divisor^0,w,c
  9597  003364  5C07               	subwf	___lwdiv@dividend^0,w,c
  9598  003366  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9599  003368  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9600  00336A  A0D8               	btfss	status,0,c
  9601  00336C  EFBA  F019         	goto	u2161
  9602  003370  EFBC  F019         	goto	u2160
  9603  003374                     u2161:
  9604  003374  EFC1  F019         	goto	l2741
  9605  003378                     u2160:
  9606  003378  5009               	movf	___lwdiv@divisor^0,w,c
  9607  00337A  5E07               	subwf	___lwdiv@dividend^0,f,c
  9608  00337C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  9609  00337E  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9610  003380  800B               	bsf	___lwdiv@quotient^0,0,c
  9611  003382                     l2741:
  9612  003382  90D8               	bcf	status,0,c
  9613  003384  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9614  003386  3209               	rrcf	___lwdiv@divisor^0,f,c
  9615  003388  2E0D               	decfsz	___lwdiv@counter^0,f,c
  9616  00338A  EFAE  F019         	goto	l2733
  9617  00338E                     l1027:
  9618  00338E  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  9619  003392  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9620  003396  0012               	return		;funcret
  9621  003398                     __end_of___lwdiv:
  9622                           	callstack 0
  9623                           
  9624 ;; *************** function _Timer0_init *****************
  9625 ;; Defined at:
  9626 ;;		line 8 in file "timers.c"
  9627 ;; Parameters:    Size  Location     Type
  9628 ;;		None
  9629 ;; Auto vars:     Size  Location     Type
  9630 ;;		None
  9631 ;; Return value:  Size  Location     Type
  9632 ;;                  1    wreg      void 
  9633 ;; Registers used:
  9634 ;;		wreg, status,2
  9635 ;; Tracked objects:
  9636 ;;		On entry : 0/0
  9637 ;;		On exit  : 0/0
  9638 ;;		Unchanged: 0/0
  9639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9644 ;;Total ram usage:        0 bytes
  9645 ;; Hardware stack levels used: 1
  9646 ;; Hardware stack levels required when called: 1
  9647 ;; This function calls:
  9648 ;;		Nothing
  9649 ;; This function is called by:
  9650 ;;		_main
  9651 ;; This function uses a non-reentrant model
  9652 ;;
  9653                           
  9654                           	psect	text42
  9655  003852                     __ptext42:
  9656                           	callstack 0
  9657  003852                     _Timer0_init:
  9658                           	callstack 29
  9659  003852                     
  9660                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  9661  003852  50D6               	movf	214,w,c	;volatile
  9662  003854  0B1F               	andlw	-225
  9663  003856  0940               	iorlw	64
  9664  003858  6ED6               	movwf	214,c	;volatile
  9665  00385A                     
  9666                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  9667  00385A  88D6               	bsf	214,4,c	;volatile
  9668                           
  9669                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1111;
  9670  00385C  0E0F               	movlw	15
  9671  00385E  12D6               	iorwf	214,f,c	;volatile
  9672  003860                     
  9673                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  9674  003860  88D5               	bsf	213,4,c	;volatile
  9675                           
  9676                           ;timers.c: 16:     TMR0H=0;
  9677  003862  0E00               	movlw	0
  9678  003864  6ED4               	movwf	212,c	;volatile
  9679                           
  9680                           ;timers.c: 17:     TMR0L=0;
  9681  003866  0E00               	movlw	0
  9682  003868  6ED3               	movwf	211,c	;volatile
  9683  00386A                     
  9684                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  9685  00386A  8ED5               	bsf	213,7,c	;volatile
  9686  00386C  0012               	return		;funcret
  9687  00386E                     __end_of_Timer0_init:
  9688                           	callstack 0
  9689                           
  9690 ;; *************** function _Interrupts_init *****************
  9691 ;; Defined at:
  9692 ;;		line 11 in file "interrupts.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;		None
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;		None
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  1    wreg      void 
  9699 ;; Registers used:
  9700 ;;		None
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9710 ;;Total ram usage:        0 bytes
  9711 ;; Hardware stack levels used: 1
  9712 ;; Hardware stack levels required when called: 1
  9713 ;; This function calls:
  9714 ;;		Nothing
  9715 ;; This function is called by:
  9716 ;;		_main
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720                           	psect	text43
  9721  00387A                     __ptext43:
  9722                           	callstack 0
  9723  00387A                     _Interrupts_init:
  9724                           	callstack 29
  9725  00387A                     
  9726                           ;interrupts.c: 15:     PIE2bits.C1IE = 1;
  9727  00387A  010E               	movlb	14	; () banked
  9728  00387C  812B               	bsf	43,0,b	;volatile
  9729                           
  9730                           ;interrupts.c: 16:     PIE0bits.TMR0IE = 1;
  9731  00387E  8B29               	bsf	41,5,b	;volatile
  9732                           
  9733                           ;interrupts.c: 17:     INTCONbits.GIEL = 1;
  9734  003880  8CF2               	bsf	242,6,c	;volatile
  9735                           
  9736                           ;interrupts.c: 18:     INTCONbits.GIE = 1;
  9737  003882  8EF2               	bsf	242,7,c	;volatile
  9738  003884                     
  9739                           ; BSR set to: 14
  9740  003884  0012               	return		;funcret
  9741  003886                     __end_of_Interrupts_init:
  9742                           	callstack 0
  9743                           
  9744 ;; *************** function _HighISR *****************
  9745 ;; Defined at:
  9746 ;;		line 26 in file "interrupts.c"
  9747 ;; Parameters:    Size  Location     Type
  9748 ;;		None
  9749 ;; Auto vars:     Size  Location     Type
  9750 ;;		None
  9751 ;; Return value:  Size  Location     Type
  9752 ;;                  1    wreg      void 
  9753 ;; Registers used:
  9754 ;;		wreg, status,2
  9755 ;; Tracked objects:
  9756 ;;		On entry : 0/0
  9757 ;;		On exit  : 0/0
  9758 ;;		Unchanged: 0/0
  9759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9764 ;;Total ram usage:        0 bytes
  9765 ;; Hardware stack levels used: 1
  9766 ;; This function calls:
  9767 ;;		Nothing
  9768 ;; This function is called by:
  9769 ;;		Interrupt level 2
  9770 ;; This function uses a non-reentrant model
  9771 ;;
  9772                           
  9773                           	psect	intcode
  9774  000008                     __pintcode:
  9775                           	callstack 0
  9776  000008                     _HighISR:
  9777                           	callstack 25
  9778                           
  9779                           ; BSR set to: 14
  9780                           ;incstack = 0
  9781  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9782  00000A                     
  9783                           ;interrupts.c: 29:     if(PIR0bits.TMR0IF){
  9784  00000A  010E               	movlb	14	; () banked
  9785  00000C  AB33               	btfss	51,5,b	;volatile
  9786  00000E  EF0B  F000         	goto	i2u213_41
  9787  000012  EF0D  F000         	goto	i2u213_40
  9788  000016                     i2u213_41:
  9789  000016  EF12  F000         	goto	i2l519
  9790  00001A                     i2u213_40:
  9791  00001A                     
  9792                           ; BSR set to: 14
  9793                           ;interrupts.c: 30:         TMR0H = 0;
  9794  00001A  0E00               	movlw	0
  9795  00001C  6ED4               	movwf	212,c	;volatile
  9796                           
  9797                           ;interrupts.c: 31:         TMR0L = 0;
  9798  00001E  0E00               	movlw	0
  9799  000020  6ED3               	movwf	211,c	;volatile
  9800  000022                     
  9801                           ; BSR set to: 14
  9802                           ;interrupts.c: 33:         PIR0bits.TMR0IF = 0;
  9803  000022  9B33               	bcf	51,5,b	;volatile
  9804  000024                     i2l519:
  9805                           
  9806                           ; BSR set to: 14
  9807  000024  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9808  000026  0011               	retfie		f
  9809  000028                     __end_of_HighISR:
  9810                           	callstack 0
  9811  0000                     
  9812                           	psect	rparam
  9813  0000                     
  9814                           	psect	temp
  9815  00005F                     btemp:
  9816                           	callstack 0
  9817  00005F                     	ds	1
  9818  0000                     int$flags	set	btemp
  9819  0000                     wtemp8	set	btemp+1
  9820  0000                     ttemp5	set	btemp+1
  9821  0000                     ttemp6	set	btemp+4
  9822  0000                     ttemp7	set	btemp+8
  9823                           
  9824                           	psect	idloc
  9825                           
  9826                           ;Config register IDLOC0 @ 0x200000
  9827                           ;	unspecified, using default values
  9828  200000                     	org	2097152
  9829  200000  0FFF               	dw	4095
  9830                           
  9831                           ;Config register IDLOC1 @ 0x200002
  9832                           ;	unspecified, using default values
  9833  200002                     	org	2097154
  9834  200002  0FFF               	dw	4095
  9835                           
  9836                           ;Config register IDLOC2 @ 0x200004
  9837                           ;	unspecified, using default values
  9838  200004                     	org	2097156
  9839  200004  0FFF               	dw	4095
  9840                           
  9841                           ;Config register IDLOC3 @ 0x200006
  9842                           ;	unspecified, using default values
  9843  200006                     	org	2097158
  9844  200006  0FFF               	dw	4095
  9845                           
  9846                           ;Config register IDLOC4 @ 0x200008
  9847                           ;	unspecified, using default values
  9848  200008                     	org	2097160
  9849  200008  0FFF               	dw	4095
  9850                           
  9851                           ;Config register IDLOC5 @ 0x20000A
  9852                           ;	unspecified, using default values
  9853  20000A                     	org	2097162
  9854  20000A  0FFF               	dw	4095
  9855                           
  9856                           ;Config register IDLOC6 @ 0x20000C
  9857                           ;	unspecified, using default values
  9858  20000C                     	org	2097164
  9859  20000C  0FFF               	dw	4095
  9860                           
  9861                           ;Config register IDLOC7 @ 0x20000E
  9862                           ;	unspecified, using default values
  9863  20000E                     	org	2097166
  9864  20000E  0FFF               	dw	4095
  9865                           
  9866                           	psect	config
  9867                           
  9868                           ;Config register CONFIG1L @ 0x300000
  9869                           ;	External Oscillator mode Selection bits
  9870                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9871                           ;	Power-up default value for COSC bits
  9872                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9873  300000                     	org	3145728
  9874  300000  AA                 	db	170
  9875                           
  9876                           ;Config register CONFIG1H @ 0x300001
  9877                           ;	unspecified, using default values
  9878                           ;	Clock Out Enable bit
  9879                           ;	CLKOUTEN = 0x1, unprogrammed default
  9880                           ;	Clock Switch Enable bit
  9881                           ;	CSWEN = 0x1, unprogrammed default
  9882                           ;	Fail-Safe Clock Monitor Enable bit
  9883                           ;	FCMEN = 0x1, unprogrammed default
  9884  300001                     	org	3145729
  9885  300001  FF                 	db	255
  9886                           
  9887                           ;Config register CONFIG2L @ 0x300002
  9888                           ;	unspecified, using default values
  9889                           ;	Master Clear Enable bit
  9890                           ;	MCLRE = 0x1, unprogrammed default
  9891                           ;	Power-up Timer Enable bit
  9892                           ;	PWRTE = 0x1, unprogrammed default
  9893                           ;	Low-power BOR enable bit
  9894                           ;	LPBOREN = 0x1, unprogrammed default
  9895                           ;	Brown-out Reset Enable bits
  9896                           ;	BOREN = 0x3, unprogrammed default
  9897  300002                     	org	3145730
  9898  300002  FF                 	db	255
  9899                           
  9900                           ;Config register CONFIG2H @ 0x300003
  9901                           ;	unspecified, using default values
  9902                           ;	Brown Out Reset Voltage selection bits
  9903                           ;	BORV = 0x3, unprogrammed default
  9904                           ;	ZCD Disable bit
  9905                           ;	ZCD = 0x1, unprogrammed default
  9906                           ;	PPSLOCK bit One-Way Set Enable bit
  9907                           ;	PPS1WAY = 0x1, unprogrammed default
  9908                           ;	Stack Full/Underflow Reset Enable bit
  9909                           ;	STVREN = 0x1, unprogrammed default
  9910                           ;	Debugger Enable bit
  9911                           ;	DEBUG = 0x1, unprogrammed default
  9912                           ;	Extended Instruction Set Enable bit
  9913                           ;	XINST = 0x1, unprogrammed default
  9914  300003                     	org	3145731
  9915  300003  FF                 	db	255
  9916                           
  9917                           ;Config register CONFIG3L @ 0x300004
  9918                           ;	WDT Period Select bits
  9919                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9920                           ;	WDT operating mode
  9921                           ;	WDTE = OFF, WDT Disabled
  9922  300004                     	org	3145732
  9923  300004  9F                 	db	159
  9924                           
  9925                           ;Config register CONFIG3H @ 0x300005
  9926                           ;	unspecified, using default values
  9927                           ;	WDT Window Select bits
  9928                           ;	WDTCWS = 0x7, unprogrammed default
  9929                           ;	WDT input clock selector
  9930                           ;	WDTCCS = 0x7, unprogrammed default
  9931  300005                     	org	3145733
  9932  300005  FF                 	db	255
  9933                           
  9934                           ;Config register CONFIG4L @ 0x300006
  9935                           ;	unspecified, using default values
  9936                           ;	Write Protection Block 0
  9937                           ;	WRT0 = 0x1, unprogrammed default
  9938                           ;	Write Protection Block 1
  9939                           ;	WRT1 = 0x1, unprogrammed default
  9940                           ;	Write Protection Block 2
  9941                           ;	WRT2 = 0x1, unprogrammed default
  9942                           ;	Write Protection Block 3
  9943                           ;	WRT3 = 0x1, unprogrammed default
  9944                           ;	Write Protection Block 3
  9945                           ;	WRT4 = 0x1, unprogrammed default
  9946                           ;	Write Protection Block 3
  9947                           ;	WRT5 = 0x1, unprogrammed default
  9948                           ;	Write Protection Block 3
  9949                           ;	WRT6 = 0x1, unprogrammed default
  9950                           ;	Write Protection Block 3
  9951                           ;	WRT7 = 0x1, unprogrammed default
  9952  300006                     	org	3145734
  9953  300006  FF                 	db	255
  9954                           
  9955                           ;Config register CONFIG4H @ 0x300007
  9956                           ;	unspecified, using default values
  9957                           ;	Configuration Register Write Protection bit
  9958                           ;	WRTC = 0x1, unprogrammed default
  9959                           ;	Boot Block Write Protection bit
  9960                           ;	WRTB = 0x1, unprogrammed default
  9961                           ;	Data EEPROM Write Protection bit
  9962                           ;	WRTD = 0x1, unprogrammed default
  9963                           ;	Scanner Enable bit
  9964                           ;	SCANE = 0x1, unprogrammed default
  9965                           ;	Low Voltage Programming Enable bit
  9966                           ;	LVP = 0x1, unprogrammed default
  9967  300007                     	org	3145735
  9968  300007  FF                 	db	255
  9969                           
  9970                           ;Config register CONFIG5L @ 0x300008
  9971                           ;	unspecified, using default values
  9972                           ;	UserNVM Program Memory Code Protection bit
  9973                           ;	CP = 0x1, unprogrammed default
  9974                           ;	DataNVM Memory Code Protection bit
  9975                           ;	CPD = 0x1, unprogrammed default
  9976  300008                     	org	3145736
  9977  300008  FF                 	db	255
  9978                           
  9979                           ;Config register CONFIG5H @ 0x300009
  9980                           ;	unspecified, using default values
  9981  300009                     	org	3145737
  9982  300009  FF                 	db	255
  9983                           
  9984                           ;Config register CONFIG6L @ 0x30000A
  9985                           ;	unspecified, using default values
  9986                           ;	Table Read Protection Block 0
  9987                           ;	EBTR0 = 0x1, unprogrammed default
  9988                           ;	Table Read Protection Block 1
  9989                           ;	EBTR1 = 0x1, unprogrammed default
  9990                           ;	Table Read Protection Block 2
  9991                           ;	EBTR2 = 0x1, unprogrammed default
  9992                           ;	Table Read Protection Block 3
  9993                           ;	EBTR3 = 0x1, unprogrammed default
  9994                           ;	Table Read Protection Block 4
  9995                           ;	EBTR4 = 0x1, unprogrammed default
  9996                           ;	Table Read Protection Block 5
  9997                           ;	EBTR5 = 0x1, unprogrammed default
  9998                           ;	Table Read Protection Block 6
  9999                           ;	EBTR6 = 0x1, unprogrammed default
 10000                           ;	Table Read Protection Block 7
 10001                           ;	EBTR7 = 0x1, unprogrammed default
 10002  30000A                     	org	3145738
 10003  30000A  FF                 	db	255
 10004                           
 10005                           ;Config register CONFIG6H @ 0x30000B
 10006                           ;	unspecified, using default values
 10007                           ;	Boot Block Table Read Protection bit
 10008                           ;	EBTRB = 0x1, unprogrammed default
 10009  30000B                     	org	3145739
 10010  30000B  FF                 	db	255
 10011                           tosu	equ	0xFFF
 10012                           tosh	equ	0xFFE
 10013                           tosl	equ	0xFFD
 10014                           stkptr	equ	0xFFC
 10015                           pclatu	equ	0xFFB
 10016                           pclath	equ	0xFFA
 10017                           pcl	equ	0xFF9
 10018                           tblptru	equ	0xFF8
 10019                           tblptrh	equ	0xFF7
 10020                           tblptrl	equ	0xFF6
 10021                           tablat	equ	0xFF5
 10022                           prodh	equ	0xFF4
 10023                           prodl	equ	0xFF3
 10024                           indf0	equ	0xFEF
 10025                           postinc0	equ	0xFEE
 10026                           postdec0	equ	0xFED
 10027                           preinc0	equ	0xFEC
 10028                           plusw0	equ	0xFEB
 10029                           fsr0h	equ	0xFEA
 10030                           fsr0l	equ	0xFE9
 10031                           wreg	equ	0xFE8
 10032                           indf1	equ	0xFE7
 10033                           postinc1	equ	0xFE6
 10034                           postdec1	equ	0xFE5
 10035                           preinc1	equ	0xFE4
 10036                           plusw1	equ	0xFE3
 10037                           fsr1h	equ	0xFE2
 10038                           fsr1l	equ	0xFE1
 10039                           bsr	equ	0xFE0
 10040                           indf2	equ	0xFDF
 10041                           postinc2	equ	0xFDE
 10042                           postdec2	equ	0xFDD
 10043                           preinc2	equ	0xFDC
 10044                           plusw2	equ	0xFDB
 10045                           fsr2h	equ	0xFDA
 10046                           fsr2l	equ	0xFD9
 10047                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         146
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     88     144
    BANK1           256      0      90
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnLeft90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnLeft90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverseTurnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverseTurnRight90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnRight90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnRight90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverseTurnRight90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverseTurnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverseTurnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    forward@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    forward@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    forward@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft135@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft135@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft135@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft135@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft90@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft90@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft90@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    reverse@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    reverse@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    reverse@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S73DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S73DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(SFR_3[1]), PWM6DCH(SFR_3[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    updateMovementCount@movementArray	PTR unsigned int  size(2) Largest target is 30
		 -> movementArray(BANK1[30]), 

    updateMovementCount@timerArray	PTR unsigned int  size(2) Largest target is 30
		 -> timerArray(BANK0[30]), 

    White@timerArray	PTR unsigned int  size(2) Largest target is 30
		 -> timerArray(BANK0[30]), 

    White@movementArray	PTR unsigned int  size(2) Largest target is 30
		 -> movementArray(BANK1[30]), 

    White@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    White@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    determine_color_new@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@RGBstruct(BANK0[20]), 

    calibrateB@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@RGBstruct(BANK0[20]), 

    calibrateW@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@RGBstruct(BANK0[20]), 

    read_colours@m	PTR struct RGB_val size(2) Largest target is 20
		 -> main@RGBstruct(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_determine_color_new
    _reverseTurnRight90->_turnRight90
    _reverseTurnLeft90->_turnLeft90
    _read_colours->_color_read_Blue
    _read_colours->_color_read_Clear
    _read_colours->_color_read_Green
    _read_colours->_color_read_Red
    _color_read_Clear->_I2C_2_Master_Read
    _determine_color_new->___fltol
    _isbtw->___flge
    ___fltol->___fladd
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    ___fladd->___flmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrateW->_color_read_Blue
    _calibrateW->_color_read_Green
    _calibrateW->_color_read_Red
    _calibrateB->_color_read_Blue
    _calibrateB->_color_read_Green
    _calibrateB->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _White->_turnLeft135
    _White->_turnLeft90
    _White->_turnRight135
    _White->_turnRight180
    _White->_turnRight90
    _turnRight90->_reverse
    _turnRight90->_stop
    _turnRight180->_reverse
    _turnRight180->_stop
    _turnRight135->_reverse
    _turnRight135->_stop
    _turnLeft90->_reverse
    _turnLeft90->_stop
    _turnLeft135->_reverse
    _turnLeft135->_stop
    _stop->_setMotorPWM
    _reverse->_setMotorPWM
    _forward->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_determine_color_new

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0  219690
                                             92 COMRAM     2     2      0
                                             34 BANK0     54    54      0
                    _Interrupts_init
                        _Timer0_init
                              _White
                         _calibrateB
                         _calibrateW
                   _color_click_init
                _determine_color_new
                            _forward
                    _initDCmotorsPWM
                         _initUSART4
                       _read_colours
                  _reverseTurnLeft90
                 _reverseTurnRight90
                        _turnLeft135
                         _turnLeft90
                       _turnRight135
                       _turnRight180
                        _turnRight90
                _updateMovementCount
 ---------------------------------------------------------------------------------
 (1) _updateMovementCount                                 12     4      8     438
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _reverseTurnRight90                                   6     2      4   23047
                                             36 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (1) _reverseTurnLeft90                                    6     2      4   23047
                                             36 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (1) _read_colours                                         2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _determine_color_new                                 36    34      2   15966
                                             90 COMRAM     2     0      2
                                              0 BANK0     34    34      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                              _isbtw
 ---------------------------------------------------------------------------------
 (2) _isbtw                                               12     0     12    6046
                                             12 COMRAM    12     0     12
                             ___flge
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1219
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     425
                                             80 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2180
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1997
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2432
                                             64 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrateW                                           2     0      2     481
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _calibrateB                                           2     0      2     481
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _White                                               20    10     10   82905
                                             36 COMRAM    20    10     10
                            _forward
                            _reverse
                               _stop
                        _turnLeft135
                         _turnLeft90
                       _turnRight135
                       _turnRight180
                        _turnRight90
 ---------------------------------------------------------------------------------
 (1) _turnRight90                                          8     4      4   13677
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turnRight180                                         8     4      4   13525
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turnRight135                                         8     4      4   13373
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turnLeft90                                           8     4      4   13677
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turnLeft135                                          8     4      4   13373
                                             28 COMRAM     8     4      4
                            _reverse
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 4     0      4    6389
                                             24 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              4     0      4    3761
                                             24 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _forward                                              4     0      4    3001
                                             24 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2565
                                             13 COMRAM    11     9      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _White
     _forward
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _reverse
       _setMotorPWM
     _stop
       _setMotorPWM
     _turnLeft135
       _reverse
       _setMotorPWM
       _stop
     _turnLeft90
       _reverse
       _setMotorPWM
       _stop
     _turnRight135
       _reverse
       _setMotorPWM
       _stop
     _turnRight180
       _reverse
       _setMotorPWM
       _stop
     _turnRight90
       _reverse
       _setMotorPWM
       _stop
   _calibrateB
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _calibrateW
     _color_read_Blue
     _color_read_Green
     _color_read_Red
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _determine_color_new
     ___fladd
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___fltol
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _isbtw
       ___flge
   _forward
   _initDCmotorsPWM
   _initUSART4
   _read_colours
     _color_read_Blue
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
     _color_read_Red
   _reverseTurnLeft90
     _setMotorPWM
     _stop
     _turnLeft90
   _reverseTurnRight90
     _setMotorPWM
     _stop
     _turnRight90
   _turnLeft135
   _turnLeft90
   _turnRight135
   _turnRight180
   _turnRight90
   _updateMovementCount

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      5A       7       35.2%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      90       5       90.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     148       8        0.0%
DATA                 0      0     148       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 14 11:35:29 2021

                  _color_read_Red 3540                      ___fldiv@aexp 0027  
                    ___fldiv@bexp 0026                      ___fldiv@sign 001F  
                 _color_read_Blue 35E0                                l51 3776  
                              l60 358E                                l54 3850  
                              l63 35DE                                l80 36BE  
                              l73 3322                                l57 353E  
                              l66 362E                                l77 3678  
                              l69 33F8                                l95 0D8C  
             ___wmul@multiplicand 0003                  _color_read_Clear 34F0  
                _color_read_Green 3590                 ??_Interrupts_init 0001  
                             l122 344A                               l116 1C26  
                             l109 1BFE                               l214 2644  
                             l119 1CAC                               l207 3700  
                             l224 32A8                               l232 2938  
                             l152 37A2                               l161 38A2  
                             l242 2A76                               l170 3742  
                             l227 349C                               l155 37C8  
                             l252 2BB4                               l164 388E  
                             l237 2E2C                               l149 37A0  
                             l261 320E                               l158 3898  
                             l255 34EE                               l247 2CF0  
                             l167 3878                               l513 3884  
                             l361 0E40                               l530 386C  
                             l442 3830                               l258 3122  
                             l370 0EC6                               l362 0E42  
                             l372 0ED4                               l364 0E50  
                             l366 0E84                               l383 10CE  
                             l536 37EE                               l368 0E92  
                             l801 2FF0                               l393 1314  
                             l397 137C                               l806 3036  
                             l833 2F32                               wreg 000FE8  
                    ___flmul@aexp 0039                      ___flmul@bexp 003A  
                    ___flmul@sign 0034                      ___flmul@temp 003F  
                    ___flmul@prod 003B                      ___fltol@exp1 005A  
                            l1120 22D0                              l1034 3396  
                            l1027 338E                              l1131 238E  
                            l1123 2294                              l1132 237C  
                            l1205 2790                              l1118 2470  
                            l1150 1D72                              l1064 15AA  
                            l1160 1FCE                              l3001 2A18  
                            l1081 16C4                              l1073 187A  
                            l1065 1598                              l1129 2316  
                            l1090 1794                              l1066 155E  
                            l1154 20D6                              l3011 2CF2  
                            l3003 2A1C                              l1091 1782  
                            l3021 2D74                              l3013 2D06  
                            l3005 2A32                              l3101 13D6  
                            l1157 1F68                              l3031 2D9C  
                            l3023 2D84                              l3015 2D1E  
                            l3007 2A4A                              l3111 140A  
                            l3103 13D8                              l1167 2098  
                            l1159 1FE0                              l1191 269C  
                            l3041 2DD4                              l3033 2DB0  
                            l3025 2D94                              l3017 2D4A  
                            l3009 2A5E                              l3121 143C  
                            l3105 13E8                              l3113 1412  
                            l4001 0E14                              l1194 27F8  
                            l3043 2DEA                              l3035 2DBC  
                            l3019 2D5E                              l3051 2BCA  
                            l3211 1614                              l3203 15DC  
                            l3131 1472                              l3123 1442  
                            l3115 1422                              l3107 13F8  
                            l4011 0E20                              l4003 0E16  
                            l3045 2E00                              l3037 2DC8  
                            l3061 2C48                              l3053 2BE2  
                            l3213 1618                              l3205 15EC  
                            l3221 1638                              l3141 14AE  
                            l3133 1482                              l3125 1450  
                            l3117 1428                              l3109 1408  
                            l3301 20E4                              l4101 1100  
                            l4021 0E2A                              l4013 0E22  
                            l4005 0E1A                              l1198 2734  
                            l3047 2E14                              l3039 2DD0  
                            l3071 2C74                              l3063 2C58  
                            l3055 2C0E                              l3223 165E  
                            l3231 16B4                              l3215 1626  
                            l3207 15FA                              l3151 14CC  
                            l3143 14BC                              l3135 1484  
                            l3127 1452                              l3119 143A  
                            l3311 2124                              l3303 20F2  
                            l4111 116C                              l4103 1114  
                            l4031 0E5E                              l4023 0E2C  
                            l4015 0E24                              l4007 0E1C  
                            l3081 2CAE                              l3073 2C80  
                            l3057 2C22                              l3049 2BB6  
                            l3241 1708                              l3233 16DA  
                            l3225 1692                              l3217 1628  
                            l3209 1608                              l3161 14E0  
                            l3153 14D0                              l3145 14C0  
                            l3129 1462                              l3137 148C  
                            l3401 2374                              l3321 214A  
                            l3313 2126                              l3305 20F4  
                            l4121 11D8                              l4113 1182  
                            l4105 112C                              l4041 0EA2  
                            l4033 0E60                              l4025 0E2E  
                            l4017 0E26                              l4009 0E1E  
                            l3091 34CA                              l3083 2CC4  
                            l3075 2C8C                              l3059 2C38  
                            l3251 1732                              l3243 1716  
                            l3235 16EA                              l3227 1694  
                            l3219 1632                              l3171 14F4  
                            l3163 14E4                              l3155 14D4  
                            l3147 14C4                              l3139 149C  
                            l3411 23E2                              l3331 218A  
                            l3323 2158                              l3307 2104  
                            l3315 212E                              l4131 1248  
                            l4123 11F0                              l4115 1196  
                            l4107 1140                              l4043 0EAE  
                            l4035 0E6C                              l4051 0EF6  
                            l4027 0E30                              l4019 0E28  
                            l3093 34D6                              l3085 2CD8  
                            l3077 2C94                              l3069 2C60  
                            l3261 1764                              l3253 1742  
                            l3245 1718                              l3229 16A4  
                            l3181 1546                              l3173 14F8  
                            l3165 14E8                              l3157 14D8  
                            l3149 14C8                              l3421 244C  
                            l3405 239E                              l3413 23E6  
                            l3341 21CA                              l3333 218C  
                            l3325 215A                              l3317 213E  
                            l3309 2114                              l3501 1E54  
                            l4141 12B6                              l4133 125C  
                            l4125 1206                              l4117 11AE  
                            l4109 1154                              l4061 0F6E  
                            l4053 0F0A                              l4045 0EC4  
                            l4037 0E82                              l4029 0E32  
                            l3095 34E2                              l3087 349E  
                            l3079 2C98                              l3271 17BE  
                            l3263 177A                              l3247 1726  
                            l3239 16FE                              l3255 1744  
                            l3191 158A                              l3183 1556  
                            l3167 14EC                              l3159 14DC  
                            l3175 14FC                              l3423 2450  
                            l3415 2400                              l3407 23AA  
                            l3351 21FA                              l3343 21D2  
                            l3327 216A                              l3335 2194  
                            l3319 2144                              l3511 1EC2  
                            l3503 1E6E                              l4143 12CC  
                            l4151 1322                              l4135 1274  
                            l4127 121A                              l4119 11C4  
                            l4071 0FD6                              l4063 0F82  
                            l4055 0F3A                              l4047 0EE2  
                            l4039 0EA0                              l3089 34BE  
                            l2801 324E                              l3281 183A  
                            l3273 17F8                              l3249 172E  
                            l3257 1752                              l3193 158C  
                            l3185 156C                              l3177 1500  
                            l3169 14F0                              l3097 13BC  
                            l3425 245E                              l3417 2416  
                            l3409 23B8                              l3361 2238  
                            l3353 21FA                              l3345 21D6  
                            l3337 21A4                              l3329 217A  
                            l3521 1F58                              l3513 1EEC  
                            l3505 1E7E                              l3441 1CC8  
                            l3601 2EF2                              l4153 1338  
                            l4145 12F8                              l4137 128A  
                            l4129 1232                              l4081 102C  
                            l4073 0FEA                              l4065 0F96  
                            l4057 0F46                              l4049 0EE4  
                            l2731 334E                              l2723 3324  
                            l2811 3290                              l2803 3258  
                            l3291 185A                              l3283 183E  
                            l3267 17A4                              l3275 17FA  
                            l3259 1756                              l3195 1596  
                            l3187 1578                              l3179 152A  
                            l3099 13C8                              l3427 2464  
                            l3419 2430                              l3371 2284  
                            l3363 2248                              l3339 21BA  
                            l3531 1F98                              l3523 1F66  
                            l3515 1F22                              l3507 1E9A  
                            l3451 1D00                              l3443 1CCA  
                            l3603 2F02                              l3611 2648  
                            l4155 1364                              l4147 1310  
                            l4139 129E                              l4091 108C  
                            l4083 1044                              l4075 0FF8  
                            l4067 0FAC                              l4059 0F5A  
                            l2741 3382                              l2733 335C  
                            l2725 332C                              l2717 37CA  
                            l2821 3490                              l2813 344C  
                            l2805 3264                              l2901 2AA4  
                            l3293 1868                              l3285 184C  
                            l3277 180A                              l3269 17B0  
                            l3197 15B8                              l3189 157C  
                            l3429 2466                              l3381 22CE  
                            l3373 2292                              l3365 2258  
                            l3357 220E                              l3349 21EA  
                            l3541 200A                              l3533 1FC6  
                            l3525 1F78                              l3517 1F30  
                            l3509 1EA6                              l3461 1D2C  
                            l3453 1D10                              l3445 1CDA  
                            l3437 1CAE                              l3605 2F12  
                            l3613 2658                              l3701 0598  
                            l4157 138A                              l4149 1312  
                            l4093 1098                              l4085 104C  
                            l4077 0FFC                              l4069 0FC0  
                            l2743 3388                              l2735 3362  
                            l2727 333E                              l2719 37E6  
                            l2751 248E                              l2815 346C  
                            l2807 3270                              l2911 2B1A  
                            l2903 2AD0                              l3295 186A  
                            l3287 1852                              l3279 181A  
                            l3199 15C8                              l3391 2314  
                            l3383 22E0                              l3375 229E  
                            l3367 2260                              l3359 2228  
                            l3551 2080                              l3543 2034  
                            l3527 1F86                              l3519 1F4E  
                            l3471 1D82                              l3463 1D3C  
                            l3455 1D16                              l3447 1CEA  
                            l3439 1CBA                              l3607 2F22  
                            l3631 271E                              l3623 26D6  
                            l3615 2666                              l2831 2FB0  
                            l2823 2F34                              l3711 0692  
                            l3703 05A8                              l4159 13A0  
                            l4095 10AC                              l4087 1062  
                            l4079 1014                              l2737 3378  
                            l2729 3346                              l2761 25DC  
                            l2753 24F0                              l2817 3478  
                            l2809 3278                              l2921 2B42  
                            l2905 2AE4                              l3801 18C8  
                            l2745 37A2                              l3289 1854  
                            l3385 22F6                              l3393 2326  
                            l3377 22BC                              l3369 2270  
                            l3553 209C                              l3561 20C2  
                            l3537 1FF0                              l3545 2038  
                            l3529 1F8A                              l3481 1DBC  
                            l3473 1D92                              l3465 1D4C  
                            l3457 1D1C                              l3449 1CFA  
                            l3641 279E                              l3633 272A  
                            l3625 26DE                              l3617 26AC  
                            l2841 3034                              l2833 2FBE  
                            l2825 2F62                              l3721 0784  
                            l3705 05EE                              l3713 069A  
                            l4097 10BE                              l4089 1086  
                            l2739 3380                              l2755 2536  
                            l2819 3484                              l2931 2B88  
                            l2923 2B4E                              l2907 2AFA  
                            l3811 19BA                              l3803 1908  
                            l2747 37B2                              l2763 3890  
                            l2771 3886                              l2851 378A  
                            l3395 2334                              l3387 22FC  
                            l3379 22BE                              l3299 20D8  
                            l3563 20C6                              l3555 20AC  
                            l3547 2052                              l3539 1FFC  
                            l3491 1E0E                              l3483 1DD2  
                            l3467 1D5C                              l3459 1D2A  
                            l3651 27E6                              l3643 27A0  
                            l3635 2766                              l3627 26EA  
                            l3619 26C2                              l2835 2FD0  
                            l2827 2F72                              l3731 0876  
                            l3715 06E0                              l3723 078C  
                            l3707 0634                              l4099 10EE  
                            l2757 2556                              l2749 2472  
                            l2941 2852                              l2933 2B9C  
                            l2925 2B56                              l2917 2B22  
                            l2909 2B0A                              l3821 1A82  
                            l3813 19D2                              l3805 1920  
                            l2781 3708                              l2765 3894  
                            l2773 388A                              l2853 378C  
                            l2845 3778                              l3661 3752  
                            l3397 2338                              l3389 2306  
                            l3557 20BA                              l3549 2066  
                            l3493 1E1C                              l3485 1DDE  
                            l3477 1DA6                              l3469 1D62  
                            l3581 2E98                              l3573 2E58  
                            l3653 27E8                              l3645 27A4  
                            l3637 2772                              l3629 271C  
                            l2837 2FDE                              l2829 2FA0  
                            l3741 0968                              l3725 07D2  
                            l3733 087E                              l3717 0726  
                            l3709 067A                              l2861 3536  
                            l3901 3138                              l2759 2572  
                            l2943 2866                              l2935 27FA  
                            l2927 2B5A                              l2919 2B36  
                            l3831 1B32                              l3823 1AC4  
                            l3815 1A14                              l3807 1960  
                            l2783 3710                              l2775 389A  
                            l2767 3870                              l2871 3590  
                            l3671 367A                              l2855 378E  
                            l2847 3782                              l3663 3762  
                            l3399 2346                              l3559 20BC  
                            l3495 1E28                              l3487 1DF6  
                            l3479 1DB2                              l3591 2EC8  
                            l3583 2EA6                              l3575 2E82  
                            l3567 2E2E                              l3647 27C8  
                            l3639 2780                              l2839 302E  
                            l3751 0A5A                              l3735 08C4  
                            l3743 0970                              l3727 0818  
                            l3719 076C                              l3911 3188  
                            l3903 3150                              l2793 3210  
                            l2961 28D0                              l2945 287C  
                            l2937 280E                              l2929 2B70  
                            l3833 1B4A                              l3817 1A3C  
                            l3809 1978                              l3841 1BFE  
                            l2785 3718                              l2777 389E  
                            l2769 3874                              l2873 35D6  
                            l2865 3540                              l2849 3788  
                            l2857 3834                              l3665 376C  
                            l3657 3744                              l3497 1E38  
                            l3489 1E02                              l3593 2ED2  
                            l3577 2E84                              l3569 2E44  
                            l3649 27D8                              l3761 0B4C  
                            l3745 09B6                              l3753 0A62  
                            l3737 090A                              l3729 085E  
                            l3681 026C                              l3673 002C  
                            l3921 3812                              l3913 3194  
                            l3905 3160                              l2795 3214  
                            l2971 2920                              l2963 28D8  
                            l2955 28A4                              l2947 288C  
                            l2939 2826                              l3843 1C06  
                            l3835 1B8C                              l3819 1A52  
                            l3851 1C82                              l2787 373E  
                            l2779 3704                              l2867 3586  
                            l3659 3748                              l3499 1E44  
                            l3579 2E94                              l2883 32AA  
                            l3771 0C3E                              l3755 0AA8  
                            l3763 0B54                              l3747 09FC  
                            l3739 0950                              l3691 054C  
                            l3683 0358                              l3675 0036  
                            l3931 382C                              l3923 381C  
                            l2859 34F0                              l3667 3398  
                            l3915 31A0                              l3907 3170  
                            l3941 386A                              l2797 322C  
                            l2965 28DC                              l2957 28B8  
                            l2949 289C                              l2981 29A6  
                            l2973 293A                              l3853 1C98  
                            l3845 1C2C                              l3837 1BA4  
                            l3829 1AF0                              l2789 3740  
                            l2877 35E0                              l3669 3630  
                            l3589 2EBE                              l2885 32DC  
                            l2893 331A                              l3781 0D30  
                            l3765 0B9A                              l3773 0C46  
                            l3757 0AEE                              l3749 0A42  
                            l3693 055C                              l3685 0444  
                            l3677 00FE                              l3933 382E  
                            l3925 381E                              l3917 31CC  
                            l3909 317C                              l3861 3428  
                            l3943 387A                              l3935 3852  
                            l2799 3236                              l2967 28F2  
                            l2959 28C4                              l2983 29BC  
                            l2975 294E                              l3847 1C3A  
                            l3839 1BE6                              l2879 3626  
                            l3599 2EE6                              l2887 330E  
                            l3791 0D84                              l3775 0C8C  
                            l3783 0D38                              l3767 0BE0  
                            l3759 0B34                              l3695 056C  
                            l3687 049C                              l3679 0188  
                            l3871 36E8                              l3927 3820  
                            l3919 31E2                              l3863 3442  
                            l3855 33FA                              l3937 385A  
                            l2969 290C                              l2897 2A78  
                            l2993 29E4                              l2985 29CC  
                            l2977 2966                              l3849 1C7E  
                            l3785 0D50                              l3777 0CD2  
                            l3769 0C26                              l3697 057A  
                            l3689 04F4                              l3873 36FC  
                            l3929 382A                              l3881 3064  
                            l3865 3446                              l3857 3400  
                            l3961 0D9E                              l3939 3860  
                            l2899 2A8C                              l2995 29F8  
                            l2987 29DC                              l2979 2992  
                            l3795 187C                              l3787 0D66  
                            l3779 0D18                              l3699 058A  
                            l3875 36FE                              l3867 36C0  
                            l3891 30A8                              l3883 3074  
                            l3859 340E                              l3971 0DB0  
                            l3963 0DA2                              l2997 2A04  
                            l3797 18A4                              l3789 0D7C  
                            l3869 36D0                              l3893 30B4  
                            l3885 3084                              l3877 3038  
                            l3981 0DD0                              l3973 0DB4  
                            l3965 0DA6                              l3957 0D8E  
                            l2999 2A10                              l3799 18BC  
                            l3895 30E0                              l3887 3090  
                            l3879 304C                              l3991 0DEC  
                            l3983 0DD4                              l3975 0DBC  
                            l3967 0DAA                              l3959 0D9A  
                            l3897 30F6                              l3889 309C  
                            l3993 0DF4                              l3985 0DD8  
                            l3977 0DC4                              l3969 0DAA  
                            l3899 3124                              l3995 0DFC  
                            l3987 0DE0                              l3979 0DC8  
                            l3997 0E04                              l3989 0DE8  
                            l3999 0E0C                              u2200 2572  
                            u3000 2400                              u2201 256E  
                            u3001 23FC                              u3010 2430  
                            u3011 242C                              u2140 333E  
                            u3020 245E                              u3100 1D92  
                            u2300 2FA0                              u2141 333A  
                            u3021 245A                              u3101 1D8E  
                            u2301 2F9C                              u2150 335C  
                            u2214 25CC                              u2230 372C  
                            u3110 1F0C                              u3030 1CC8  
                            u2310 2FBE                              u2151 3358  
                            u2215 25C8                              u2231 3724  
                            u3031 1CC4                              u2311 2FBA  
                            u2160 3378                              u2224 2636  
                            u2400 2CAE                              u3200 2080  
                            u3120 1F66                              u3040 1CDA  
                            u2320 2FDE                              u4000 0FD6  
                    _BAUD4CONbits 000EE9                              u2161 3374  
                            u2225 2632                              u2401 2CAA  
                            u3201 207C                              u3121 1F62  
                            u3041 1CD6                              u2321 2FDA  
                            u4001 0FD2                              _LATE 000F7D  
                            u2250 322C                              u2170 37B2  
                            u2410 13D6                              u3210 20BA  
                            u3130 1F86                              u3050 1CEA  
                            u2330 302E                              u4010 1014  
                            u2251 3228                              u2171 37AE  
                            u2411 13D2                              u3211 20B6  
                            u3131 1F82                              u3115 1F02  
                            u3051 1CE6                              u2331 302A  
                            u4011 1010                              _LATG 000F7F  
                            u2260 324E                              u2180 37C8  
                            u2500 152A                              u2420 13E8  
                            u3140 1F98                              u3060 1D2A  
                            u3220 2E44                              u3300 2666  
                            u2340 32DC                              u4100 11C4  
                            u4020 102C                              u2261 324A  
                            u2181 37C4                              u2501 1526  
                            u2421 13E4                              u3141 1F94  
                            u3061 1D26                              u3221 2E40  
                            u3301 2662                              u2341 32D8  
                            u4101 11C0                              u4021 1028  
                            u2190 248E                              u2270 3290  
                            u2510 1542                              u2430 13F8  
                            u3150 1FC6                              u3070 1D3C  
                            u3230 2E78                              u3310 26C2  
                            u2350 330E                              u4110 1206  
                            u4030 1044                              u2191 248A  
                            u2271 328C                              u2511 153C  
                            u2431 13F4                              u3151 1FC2  
                            u3071 1D38                              u3311 26BE  
                            u2351 330A                              u4111 1202  
                            u4031 1040                              u2280 32A8  
                            u2360 2B70                              u2248 372E  
                            u2600 1626                              u2520 1544  
                            u2440 143A                              u3160 1FDC  
                            u3080 1D4C                              u3240 2EA6  
                            u3320 2718                              u3400 057A  
                            u4120 1248                              u4040 1062  
                            u2281 32A4                              u2361 2B6C  
                            u2601 1622                              u2441 1436  
                            u3161 1FD8                              u3081 1D48  
                            u3241 2EA2                              u3321 2714  
                            u3401 0576                              u4121 1244  
                            u4041 105E                              u2370 28F2  
                            u2610 165E                              u2530 156C  
                            u2450 1450                              u3170 1FF0  
                            u3090 1D82                              u3250 2EBA  
                            u3330 2762                              u2290 2F62  
                            u3410 0598                              u4130 128A  
                            u4050 10AC                              _T2PR 000FBC  
                            u2371 28EE                              u2611 165A  
                            u2531 1568                              u2451 144C  
                            u3171 1FEC                              u3091 1D7E  
                            u3251 2EB6                              u3235 2E6E  
                            u3331 275E                              u2291 2F5E  
                            u3411 0594                              u4131 1286  
                            u4051 10A8                              u2380 2A32  
                            u2700 177A                              u2620 16A4  
                            u2540 158A                              u2460 1462  
                            u3180 200A                              u3260 2EE2  
                            u3340 2780                              u3500 07D2  
                            u3420 05EE                              u4140 12CC  
                            u4060 10BE                              u2381 2A2E  
                            u2701 1776                              u2621 16A0  
                            u2541 1586                              u2461 145E  
                            u3181 2006                              u3261 2EDE  
                            u3341 277C                              u3501 07CE  
                            u3421 05EA                              u4141 12C8  
                            u4061 10BA                              u2390 2DEA  
                            u2710 1790                              u2630 16DA  
                            u2550 15AA                              u2470 1472  
                            u3190 2052                              u3270 2F02  
                            u3350 2790                              u3510 0818  
                            u3430 0634                              u4150 1322  
                            u4070 1100                              u2391 2DE6  
                            u2711 178C                              u2631 16D6  
                            u2551 15A6                              u2471 146E  
                            u3191 204E                              u3271 2EFE  
                            u3351 278C                              u3511 0814  
                            u3431 0630                              u4151 131E  
                            u4071 10FC                              u2720 17A4  
                            u2640 16EA                              u2560 15B8  
                            u2480 14AE                              u2800 20F2  
                            u3280 2F12                              u3360 279E  
                            u3600 0A42                              u3520 085E  
                            u3440 067A                              u4160 1338  
                            u4080 1140                              u2721 17A0  
                            u2641 16E6                              u2561 15B4  
                            u2481 14AA                              u2801 20EE  
                            u3281 2F0E                              u3361 279A  
                            u3601 0A3E                              u3521 085A  
                            u3441 0676                              u4161 1334  
                            u4081 113C                              u2730 17BE  
                            u2650 1716                              u2570 15C8  
                            u2490 14BC                              u2810 2104  
                            u3370 27D8                              u3290 2658  
                            u3610 0A5A                              u3530 0876  
                            u3450 0692                              u4170 138A  
                            u4090 1182                              u2731 17BA  
                            u2651 1712                              u2571 15C4  
                            u2491 14B8                              u2811 2100  
                            u3371 27D4                              u3291 2654  
                            u3611 0A56                              u3531 0872  
                            u3451 068E                              u4171 1386  
                            u4307 1224                              u4091 117E  
                            u2740 17F8                              u2660 1726  
                            u2580 15FA                              u2900 22BC  
                            u2820 2114                              u3380 27E6  
                            u3700 0C8C                              u3620 0AA8  
                            u3540 08C4                              u3460 06E0  
                            u4180 13A0                              u2741 17F4  
                            u2661 1722                              u2581 15F6  
                            u2901 22B8                              u2821 2110  
                            u3381 27E2                              u3701 0C88  
                            u3621 0AA4                              u3541 08C0  
                            u3461 06DC                              u4181 139C  
                            u4317 1266                              u2750 180A  
                            u2670 1742                              u2590 1608  
                            u2910 22E0                              u2830 2158  
                            u3710 0CD2                              u3630 0AEE  
                            u3550 090A                              u3470 0726  
                            u3390 055C                              u2751 1806  
                            u2671 173E                              u2591 1604  
                            u2911 22DC                              u2831 2154  
                            u3711 0CCE                              u3631 0AEA  
                            u3551 0906                              u3471 0722  
                            u3391 0558                              u4407 31AA  
                            u4327 12A8                              u4247 0E76  
                            u3800 1A14                              u2760 181A  
                            u2680 1752                              u2920 22F6  
                            u2840 216A                              u3720 0D18  
                            u3640 0B34                              u3560 0950  
                            u3480 076C                              u3801 1A10  
                            u2761 1816                              u2681 174E  
                            u2921 22F2                              u2841 2166  
                            u3721 0D14                              u3641 0B30  
                            u3561 094C                              u3481 0768  
                            u4417 31D6                              u4337 1302  
                            u4257 0EB8                              u3810 1AC4  
                            u2770 183A                              u2690 1764  
                            u2930 2314                              u2850 217A  
                            u3730 0D30                              u3650 0B4C  
                            u3570 0968                              u3490 0784  
                            u4507 2A12                              u3811 1AC0  
                            u2771 1836                              u2691 1760  
                            u2931 2310                              u2851 2176  
                            u3731 0D2C                              u3651 0B48  
                            u3571 0964                              u3491 0780  
                            u4427 3200                              u4347 136E  
                            u4267 111E                              u3820 1B32  
                            u2780 184C                              u2940 2334  
                            u2860 21BA                              u3740 0D50  
                            u3660 0B9A                              u3580 09B6  
                            u3900 0E50                              u4517 2A3C  
                            u3821 1B2E                              u4437 3758  
                            u2781 1848                              u2941 2330  
                            u2861 21B6                              u3741 0D4C  
                            u3661 0B96                              u3581 09B2  
                            u4357 3056                              u4277 115E  
                            u3901 0E4C                              u3830 1B8C  
                            u2790 1868                              u2950 2346  
                            u2870 21FA                              u3750 0D66  
                            u3670 0BE0                              u3590 09FC  
                            u3910 0E5E                              u4607 2C00  
                            u4527 2A68                              u3831 1B88  
                            u4447 18AE                              u2791 1864  
                            u2951 2342                              u2871 21F6  
                            u3751 0D62                              u3671 0BDC  
                            u3591 09F8                              u4367 30BE  
                            u4287 11A0                              u3911 0E5A  
                            u3840 1BE6                              u2960 2374  
                            u2880 2270                              u3760 0D7C  
                            u3680 0C26                              u3920 0E92  
                            u4617 2C2C                              u4537 2A96  
                            u3841 1BE2                              u4457 1A46  
                            u2961 2370                              u2881 226C  
                            u3761 0D78                              u3681 0C22  
                            u4377 30EA                              u4297 11E2  
                            u3921 0E8E                              u3850 1C7E  
                            u3770 1908                              u2970 238A  
                            u2890 2292                              u3690 0C3E  
                            u3930 0EA0                              u4707 292A  
                            u4627 2C8E                              u4547 2AC2  
                            u3851 1C7A                              u4467 1A70  
                            u3771 1904                              u2971 2386  
                            u2891 228E                              u3691 0C3A  
                            u4387 3114                              u3931 0E9C  
                            u3860 1C98                              u3780 1960  
                            u2980 239E                              u3940 0ED4  
                            u4717 2D10                              u4637 2CB8  
                            u4557 2AEE                              u4477 2958  
                            u3861 1C94                              u3781 195C  
                            u2981 239A                              u4397 3142  
                            u3941 0ED0                              u3790 19BA  
                            u2990 23B8                              u3950 0EE2  
                            u4727 2D3C                              u4647 2CE2  
                            u4567 2B50                              u4487 2984  
                            u3791 19B6                              u2991 23B4  
                            u3951 0EDE                              u3960 0F0A  
                            u4737 2D68                              u4657 2818  
                            u4577 2B7A                              u4497 29B0  
                            u3961 0F06                              u3970 0F5A  
                            u4747 2DCA                              u4667 2844  
                            u4587 2BA6                              u3971 0F56  
                            u3980 0F82                              u4757 2DF4  
                            u4677 2870                              u4597 2BD4  
                            u3981 0F7E                              u3990 0FAC  
                            u4767 2E1E                              u4687 28D2  
                            u3991 0FA8                              u4777 3272  
                            u4697 28FC                              _main 0D8E  
      __end_of_reverseTurnRight90 3124                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 005F  
                            _stop 3210                              prodh 000FF4  
                            prodl 000FF3                              start 0028  
                 ___fldiv@new_exp 0020            __end_of_color_read_Red 3590  
                 __end_of_HighISR 0028                      ___param_bank 000000  
                     _turnLeft135 2CF2                       _turnRight90 293A  
                   ___fltol@sign1 0059                   __end_of___fladd 187C  
                           ?_main 0001                   __end_of___fldiv 2472  
                 __end_of___flmul 20D8                   __end_of___fltol 2F34  
                           ?_stop 0019          __size_of_initDCmotorsPWM 0042  
                 __end_of___lwdiv 3398                             i2l519 0024  
                           _TMR0H 000FD4                             _TMR0L 000FD3  
    updateMovementCount@movements 0005        __end_of_I2C_2_Master_Start 389A  
                           _White 187C        __end_of_I2C_2_Master_Write 387A  
                 __end_of_forward 34F0                             _isbtw 32AA  
           __size_of_turnRight135 013C             __size_of_turnRight180 013E  
                 __end_of_reverse 349E                             ttemp5 0060  
                           ttemp6 0063                             ttemp7 0067  
                           status 000FD8                             wtemp8 0060  
         __end_of_color_read_Blue 3630             _I2C_2_Master_RepStart 389A  
                 ?_color_read_Red 0005                   __initialization 37F0  
                    __end_of_main 13BC                      __end_of_stop 32AA  
                          ??_main 005D                            ??_stop 001D  
                   __activetblptr 000000       __end_of_updateMovementCount 344C  
                    _turnRight135 2BB6                      _turnRight180 2A78  
                          ?_White 0025                      ?_setMotorPWM 000E  
                          ?_isbtw 000D                            _RC0PPS 000E62  
                          _RC4REG 000EE3                            _RE2PPS 000E74  
                          _RD5PPS 000E6F                            _RC7PPS 000E69  
                          _RD6PPS 000E70                            i2l2705 000A  
                          i2l2707 001A                            i2l2709 0022  
                       ??_HighISR 0001          __end_of_color_click_init 3778  
                          _RX4PPS 000E15                            _TX4REG 000EE4  
                __end_of___xxtofl 27FA                     ??_Timer0_init 0001  
                   ?_read_colours 000C                            White@i 0037  
                          ___flge 2F34       __end_of_determine_color_new 0D8E  
                       ??___fladd 0049                            ___wmul 37CA  
                       ??___fldiv 0017                         ??___flmul 0030  
                       ??___fltol 0055                         ??___lwdiv 000B  
                          clear_0 37F6                            clear_1 3802  
                          isa$std 000001                         ??_forward 001D  
                       ??_reverse 001D                            stop@mL 0019  
                          stop@mR 001B                 ??_initDCmotorsPWM 0003  
                      ___flge@ff1 0001                        ___flge@ff2 0005  
                    ___xxtofl@arg 000B                      ___xxtofl@exp 000A  
                    ___xxtofl@val 0001                        __accesstop 0060  
         __end_of__initialization 3808          __end_of_color_read_Clear 3540  
        __end_of_color_read_Green 35E0            ?_I2C_2_Master_RepStart 0001  
                   ___rparam_used 000001                        ___fltol@f1 0051  
                ?_color_read_Blue 0005                    ??_read_colours 000E  
                 _Interrupts_init 387A                    __pcstackCOMRAM 0001  
                   __end_of_White 1CAE                     __end_of_isbtw 3324  
             __end_of_Timer0_init 386E          _determine_color_new$2624 0068  
                         ??_White 002F                        _calibrateB 367A  
                      _calibrateW 3630                           ??_isbtw 0019  
                      __pbssBANK0 00B8                        __pbssBANK1 0100  
               _color_writetoaddr 3832                      _T2CLKCONbits 000FBF  
                    ?_turnLeft135 001D              reverseTurnRight90@mL 0025  
            reverseTurnRight90@mR 0027                           ?___flge 0001  
              ?_color_writetoaddr 0003                           ?___wmul 0001  
              _reverseTurnRight90 3038                      ?_turnRight90 001D  
             ??_color_writetoaddr 0004                         ?___xxtofl 0001  
             ?_reverseTurnRight90 0025                           _SP4BRGH 000EE6  
                         _SP4BRGL 000EE5                           _PWM6DCH 000FA3  
                         _PWM7DCH 000FA0                           _SSP2ADD 000ED6  
                         _SSP2BUF 000ED5              __size_of_setMotorPWM 01D4  
         __end_of_Interrupts_init 3886            color_writetoaddr@value 0003  
                ??_color_read_Red 0007                           _HighISR 0008  
       __end_of_color_writetoaddr 3852                _I2C_2_Master_Start 3890  
                      _initUSART4 3812              ??_reverseTurnRight90 0029  
              _I2C_2_Master_Write 386E                           __Hparam 0000  
                         __Lparam 0000                 color_read_Red@tmp 000A  
                     _Timer0_init 3852                           White@mL 0025  
                         White@mR 0027                   __size_of___flge 0104  
                         ___fladd 13BC                           ___fldiv 20D8  
                         ___flmul 1CAE                           ___fltol 2E2E  
                 __size_of___wmul 0026               ?_I2C_2_Master_Start 0001  
                    turnLeft135@i 0023                           ___lwdiv 3324  
             ?_I2C_2_Master_Write 0001                      turnLeft90@mL 001D  
                    turnLeft90@mR 001F                           __pcinit 37F0  
                         __ramtop 0E00                           __ptext0 0D8E  
                         __ptext1 33FA                           __ptext2 3038  
                         __ptext3 3124                           __ptext4 3398  
                         __ptext5 34F0                           __ptext6 3812  
                         __ptext7 36C0                           __ptext8 002C  
                         __ptext9 32AA                         _T2CONbits 000FBD  
                         _forward 349E                        ??___xxtofl 0005  
                       _T2HLTbits 000FBE              __end_of_read_colours 33FA  
                         _reverse 344C                     _RxBufWriteCnt 00D1  
                     ?_calibrateB 000C                       ?_calibrateW 000C  
                         main@cal 0082              ??_I2C_2_Master_Start 0002  
            ??_I2C_2_Master_Write 0002  updateMovementCount@movementArray 0003  
            end_of_initialization 3808                setMotorPWM@PWMduty 0017  
               ?_color_click_init 0001                      turnRight90@i 0023  
              ??_color_click_init 0005                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                      _timerArray 00D2                   _initDCmotorsPWM 36C0  
                       _PORTFbits 000F8E                       ___fladd@grs 0050  
                   ___xxtofl@sign 0009                         _TRISAbits 000F81  
                       _TRISCbits 000F83                         _TRISDbits 000F84  
                       _TRISEbits 000F85                         _TRISFbits 000F86  
                       _TRISGbits 000F87                         _TRISHbits 000F88  
                     ___fldiv@grs 0022                       ___fldiv@rem 001B  
        color_writetoaddr@address 0004           ??_I2C_2_Master_RepStart 0002  
    __size_of_updateMovementCount 0052       determine_color_new@RedRatio 006C  
                      main@check1 0088                        main@check2 008A  
                      main@check3 008C                        main@check4 0084  
                ?_Interrupts_init 0001                       ___flmul@grs 0035  
               ?_color_read_Clear 0005        __size_of_color_writetoaddr 0020  
                    _EUSART4RXbuf 00B8                      _EUSART4TXbuf 0100  
               ?_color_read_Green 0005                       ?_initUSART4 0001  
                      main@motorL 00A6                        main@motorR 00AF  
              ??_color_read_Clear 0007                ??_color_read_Green 0007  
                      _turnLeft90 27FA               __size_of_calibrateB 0046  
             __size_of_calibrateW 004A                    __end_of___flge 3038  
            __size_of_turnLeft135 013C                    __end_of___wmul 37F0  
            __size_of_turnRight90 013E      __size_of_determine_color_new 0D62  
             color_read_Clear@tmp 000A               start_initialization 37F0  
                   _TxBufWriteCnt 00CF               color_read_Green@tmp 000A  
         __end_of_initDCmotorsPWM 3702                          ??___flge 0009  
                        ??___wmul 0005          __size_of_color_read_Blue 0050  
           __size_of_read_colours 0062                         ___fladd@a 0045  
                       ___fladd@b 0041               reverseTurnLeft90@mL 0025  
             reverseTurnLeft90@mR 0027                         ___fldiv@a 0013  
                       ___fldiv@b 000F     determine_color_new@GreenRatio 006E  
                       ___flmul@a 002C                         ___flmul@b 0028  
             __size_of_initUSART4 0020                     __pcstackBANK0 0060  
               __size_of___xxtofl 01B4                          ?_HighISR 0001  
                ___lwdiv@dividend 0007                      ?_Timer0_init 0001  
               _reverseTurnLeft90 3124                       ?_turnLeft90 001D  
                    _read_colours 3398                         __pintcode 0008  
                        ?___fladd 0041                          ?___fldiv 000F  
                        ?___flmul 0028                          ?___fltol 0051  
              ?_reverseTurnLeft90 0025                          ?___lwdiv 0007  
            I2C_2_Master_Read@ack 0003              I2C_2_Master_Read@tmp 0004  
                   ?_turnRight135 001D                     ?_turnRight180 001D  
             ??_reverseTurnLeft90 0029                          ?_forward 0019  
               _I2C_2_Master_Idle 37A2                 _I2C_2_Master_Init 3778  
               _I2C_2_Master_Read 3702                 _I2C_2_Master_Stop 3886  
                    _RxBufReadCnt 00D0                          ?_reverse 0019  
              ?_I2C_2_Master_Idle 0001                    __size_of_White 0432  
              ?_I2C_2_Master_Init 0001                ?_I2C_2_Master_Read 0001  
                   ??_setMotorPWM 0010                      ??_calibrateB 000E  
                    ??_calibrateW 000E                ?_I2C_2_Master_Stop 0001  
                ___lwdiv@quotient 000B                       turnLeft90@i 0023  
        initDCmotorsPWM@PWMperiod 0001                    __size_of_isbtw 007A  
             ??_I2C_2_Master_Idle 0001               ??_I2C_2_Master_Init 0001  
             ??_I2C_2_Master_Read 0002                    ___wmul@product 0005  
                        _LATAbits 000F79               ??_I2C_2_Master_Stop 0002  
                        _LATCbits 000F7B                          _LATDbits 000F7C  
                        _LATEbits 000F7D                          _LATFbits 000F7E  
                        _LATGbits 000F7F                          _LATHbits 000F80  
                        _PIE0bits 000E29                          _PIE2bits 000E2B  
                        _PIE4bits 000E2D         __end_of_reverseTurnLeft90 3210  
     __size_of_reverseTurnRight90 00EC                          i2u213_40 001A  
                        i2u213_41 0016                          _PIR0bits 000E33  
                        _PIR4bits 000E37              determine_color_new@m 005B  
                       _movements 00CC                  ?_initDCmotorsPWM 0001  
                        _SSP2CON2 000EDA                   White@timerArray 002D  
                        _SSP2STAT 000ED8               _updateMovementCount 33FA  
              __end_of_calibrateB 36C0                __end_of_calibrateW 367A  
       __size_of_color_click_init 0034         __end_of_I2C_2_Master_Idle 37CA  
       __end_of_I2C_2_Master_Init 37A2         __end_of_I2C_2_Master_Read 3744  
               ___wmul@multiplier 0001                    ??_turnRight135 0021  
                  ??_turnRight180 0021                     _movementArray 013C  
       __end_of_I2C_2_Master_Stop 3890          determine_color_new@lumin 0074  
                    setMotorPWM@m 000E       I2C_2_Master_Write@data_byte 0002  
                       main@count 008E                 ??_color_read_Blue 0007  
                    _TxBufReadCnt 00CE               __size_of_turnLeft90 0140  
     __size_of_I2C_2_Master_Start 000A              ?_updateMovementCount 0001  
     __size_of_I2C_2_Master_Write 000C    __size_of_I2C_2_Master_RepStart 000A  
   __end_of_I2C_2_Master_RepStart 38A4                color_read_Blue@tmp 000A  
                     calibrateB@m 000C                       calibrateW@m 000C  
             __end_of_setMotorPWM 2646                  __size_of_HighISR 0020  
             _determine_color_new 002C                      ??_initUSART4 0001  
                        __Hrparam 0000     updateMovementCount@timerArray 0007  
                        __Lrparam 0000                         forward@mL 0019  
                       forward@mR 001B           __size_of_color_read_Red 0050  
                __size_of___fladd 04C0                  __size_of___fldiv 039A  
                __size_of___flmul 042A                  __size_of___fltol 0106  
                       isbtw@high 0015                  __size_of___lwdiv 0074  
                  turnRight135@mL 001D                    turnRight135@mR 001F  
                  turnRight180@mL 001D                    turnRight180@mR 001F  
       __size_of_color_read_Clear 0050                     turnLeft135@mL 001D  
                   turnLeft135@mR 001F         __size_of_color_read_Green 0050  
                      _ANSELDbits 000EA7                        _ANSELFbits 000EB4  
            ?_determine_color_new 005B                          ___xxtofl 2646  
                      _T0CON0bits 000FD5                        _T0CON1bits 000FD6  
                __size_of_forward 0052                   ___lwdiv@divisor 0009  
              __end_of_initUSART4 3832                   ___lwdiv@counter 000D  
                        __ptext10 2F34                          __ptext11 2646  
                        __ptext20 367A                          __ptext12 2E2E  
                        __ptext21 3540                          __ptext13 1CAE  
                        __ptext30 187C                          __ptext22 3590  
                        __ptext14 20D8                          __ptext31 293A  
                        __ptext23 35E0                          __ptext15 13BC  
                        __ptext40 37CA                          __ptext32 2A78  
                        __ptext24 386E                          __ptext16 3744  
                        __ptext41 3324                          __ptext33 2BB6  
                        __ptext25 3886                          __ptext17 3832  
                        __ptext42 3852                          __ptext34 27FA  
                        __ptext26 3890                          __ptext18 3778  
                        __ptext43 387A                          __ptext35 2CF2  
                        __ptext27 389A                          __ptext19 3630  
                        __ptext36 3210                          __ptext28 3702  
                        __ptext37 344C                          __ptext29 37A2  
                        __ptext38 349E                          __ptext39 2472  
                __size_of_reverse 0052             ??_updateMovementCount 0009  
                    _SSP2CON1bits 000ED9                      _SSP2CON2bits 000EDA  
              White@movementArray 0029                     __size_of_main 062E  
                   __size_of_stop 009A        __size_of_reverseTurnLeft90 00EC  
                       reverse@mL 0019                         reverse@mR 001B  
                 main@reset_timer 0086                     ??_turnLeft135 0021  
                  White@movements 002B                          isa$xinst 000000  
        __size_of_Interrupts_init 000C                        _RC4STAbits 000EE7  
         determine_color_new@RelB 007E           determine_color_new@RelG 007A  
         determine_color_new@RelR 0076                          int$flags 005F  
            __size_of_Timer0_init 001C                     ??_turnRight90 0021  
      __size_of_I2C_2_Master_Idle 0028        __size_of_I2C_2_Master_Init 002A  
      __size_of_I2C_2_Master_Read 0042             ??_determine_color_new 0060  
      __size_of_I2C_2_Master_Stop 000A                        _INTCONbits 000FF2  
                     _setMotorPWM 2472                          isbtw@low 0011  
                        isbtw@num 000D                       _PWM6CONbits 000FA4  
                   turnRight135@i 0023                     turnRight180@i 0023  
                     _PWM7CONbits 000FA1                          intlevel2 0000  
                   turnRight90@mL 001D                     turnRight90@mR 001F  
               White@tempTimerVal 0035   updateMovementCount@tempTimerVal 000B  
            __end_of_turnRight135 2CF2              __end_of_turnRight180 2BB6  
 updateMovementCount@movementCode 0001               main@detected_colour 0090  
                    ??_turnLeft90 0021            determine_color_new@out 0072  
                   read_colours@m 000C                  _color_click_init 3744  
             __end_of_turnLeft135 2E2E                        _SSP2DATPPS 000E1D  
                      _SSP2CLKPPS 000E1C               __end_of_turnRight90 2A78  
                   ___fladd@signs 004D                     main@RGBstruct 0092  
              __end_of_turnLeft90 293A                        _TX4STAbits 000EE8  
                    ___fladd@aexp 004E                      ___fladd@bexp 004F  
    determine_color_new@BlueRatio 0070  
